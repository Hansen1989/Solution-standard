<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNet.Utilities</name>
    </assembly>
    <members>
        <member name="T:DotNet.Utilities.Mac">
            <summary>
            Mac 的摘要说明。
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Win32">
            <summary>
            执行需要调用 <b>Win32</b> API 的操作辅助类。
            </summary>
            <summary>
            执行需要调用 <b>Win32</b> API 的操作辅助类。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Win32.GetCurrentPlatform">
            <summary>
            执行获取当前运行的操作系统版本。
            </summary>
            <returns><see cref="T:DotNet.Utilities.Win32.Platform"/> 的值之一，他表示当前运行的操作系统版本。</returns>
        </member>
        <member name="T:DotNet.Utilities.Win32.Platform">
            <summary>
            表示操作系统平台。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.Platform.Windows95">
            <summary>
            Windows 95 操作系统.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.Platform.Windows98">
            <summary>
            Windows 98 操作系统.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.Platform.Windows982ndEdition">
            <summary>
            Windows 98 第二版操作系统.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.Platform.WindowsME">
            <summary>
            Windows ME 操作系统.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.Platform.WindowsNT351">
            <summary>
            Windows NT 3.51 操作系统.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.Platform.WindowsNT40">
            <summary>
            Windows NT 4.0 操作系统.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.Platform.Windows2000">
            <summary>
            Windows 2000 操作系统.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.Platform.WindowsXP">
            <summary>
            Windows XP 操作系统.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.Platform.Windows2003">
            <summary>
            Windows 2003 操作系统.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.Platform.WindowsVista">
            <summary>
            Windows Vista 操作系统.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.Platform.WindowsCE">
            <summary>
            Windows CE 操作系统.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.Platform.UnKnown">
            <summary>
            操作系统版本未知。
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Win32.DriverError">
            <summary>
            表示IDE设备错误状态代码的常量与数值的对应。
            </summary>
            <remarks>其数值与常量定义在 <b>WinIoCtl.h</b> 文件中。</remarks>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverError.SMART_NO_ERROR">
            <summary>
            设备无错误。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverError.SMART_IDE_ERROR">
            <summary>
            设备IDE控制器错误。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverError.SMART_INVALID_FLAG">
            <summary>
            无效的命令标记。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverError.SMART_INVALID_COMMAND">
            <summary>
            无效的命令数据。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverError.SMART_INVALID_BUFFER">
            <summary>
            缓冲区无效（如缓冲区为空或地址错误）。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverError.SMART_INVALID_DRIVE">
            <summary>
            设备编号错误。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverError.SMART_INVALID_IOCTL">
            <summary>
            IOCTL错误。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverError.SMART_ERROR_NO_MEM">
            <summary>
            无法锁定用户的缓冲区。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverError.SMART_INVALID_REGISTER">
            <summary>
            无效的IDE注册命令。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverError.SMART_NOT_SUPPORTED">
            <summary>
            无效的命令设置。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverError.SMART_NO_IDE_DEVICE">
            <summary>
            指定要查找的设别索引号无效。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Win32.GetHardDiskInfo(DotNet.Utilities.Win32.IdSector)">
            <summary>
            根据指定的设备信息生成设备的详细信息。
            </summary>
            <param name="phdinfo">一个 <see cref="T:DotNet.Utilities.Win32.IdSector"/></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.GetHddInfoNT(System.Byte)">
            <summary>
            获取在NT平台下指定序列号的硬盘信息。
            </summary>
            <param name="driveIndex">物理磁盘的数量。</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.GetHddInfo9X(System.Byte)">
            <summary>
            
            </summary>
            <param name="driveIndex"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.GetSystemMenu(System.IntPtr,System.Boolean)">
            <summary>
            取得指定窗口的系统菜单的句柄。
            </summary>
            <param name="hwnd">指向要获取系统菜单窗口的 <see cref="T:System.IntPtr"/> 句柄。</param>
            <param name="bRevert">获取系统菜单的方式。设置为 <b>true</b>，表示接收原始的系统菜单，否则设置为 <b>false</b> 。</param>
            <returns>指向要获取的系统菜单的 <see cref="T:System.IntPtr"/> 句柄。</returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.GetMenuItemCount(System.IntPtr)">
            <summary>
            获取指定的菜单中条目（菜单项）的数量。
            </summary>
            <param name="hMenu">指向要获取菜单项数量的系统菜单的 <see cref="T:System.IntPtr"/> 句柄。</param>
            <returns>菜单中的条目数量</returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.RemoveMenu(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            删除指定的菜单条目。
            </summary>
            <param name="hMenu">指向要移除的菜单的 <see cref="T:System.IntPtr"/> 。</param>
            <param name="uPosition">欲改变的菜单条目的标识符。</param>
            <param name="uFlags"></param>
            <returns>非零表示成功，零表示失败。</returns>
            <remarks>
            如果在 <paramref name="uFlags"/> 中使用了<see cref="F:DotNet.Utilities.Win32.MF_BYPOSITION"/> ，则在 <paramref name="uPosition"/> 参数表示菜单项的索引；
            如果在 <paramref name="uFlags"/> 中使用了 <b>MF_BYCOMMAND</b>，则在 <paramref name="uPosition"/> 中使用菜单项的ID。
            </remarks>
        </member>
        <member name="M:DotNet.Utilities.Win32.CloseHandle(System.IntPtr)">
            <summary>
            关闭一个指定的指针对象指向的设备。。
            </summary>
            <param name="hObject">要关闭的句柄 <see cref="T:System.IntPtr"/> 对象。</param>
            <returns>成功返回 <b>0</b> ，不成功返回非零值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.CreateFile(System.String,System.UInt32,System.UInt32,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            执行打开/建立资源的功能。
            </summary>
            <param name="lpFileName">指定要打开的设备或文件的名称。</param>
            <param name="dwDesiredAccess">
            <para>Win32 常量，用于控制对设备的读访问、写访问或读/写访问的常数。内容如下表：
            <p><list type="table">
            <listheader>
            <term>名称</term>
            <description>说明</description>
            </listheader>
            <item>
            <term>GENERIC_READ</term><description>指定对设备进行读取访问。</description>
            </item>
            <item>
            <term>GENERIC_WRITE</term><description>指定对设备进行写访问。</description>
            </item>
            <item><term><b>0</b></term><description>如果值为零，则表示只允许获取与一个设备有关的信息。</description></item>
            </list></p>
            </para>
            </param>
            <param name="dwShareMode">指定打开设备时的文件共享模式</param>
            <param name="lpSecurityAttributes"></param>
            <param name="dwCreationDisposition">Win32 常量，指定操作系统打开文件的方式。内容如下表：
            <para><p>
            <list type="table">
            <listheader><term>名称</term><description>说明</description></listheader>
            <item>
            <term>CREATE_NEW</term>
            <description>指定操作系统应创建新文件。如果文件存在，则抛出 <see cref="T:System.IO.IOException"/> 异常。</description>
            </item>
            <item><term>CREATE_ALWAYS</term><description>指定操作系统应创建新文件。如果文件已存在，它将被改写。</description></item>
            </list>
            </p></para>
            </param>
            <param name="dwFlagsAndAttributes"></param>
            <param name="hTemplateFile"></param>
            <returns>使用函数打开的设备的句柄。</returns>
            <remarks>
            本函数可以执行打开或建立文件、文件流、目录/文件夹、物理磁盘、卷、系统控制的缓冲区、磁带设备、
            通信资源、邮件系统和命名管道。
            </remarks>
        </member>
        <member name="M:DotNet.Utilities.Win32.DeviceIoControl(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,DotNet.Utilities.Win32.GetVersionOutParams@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            对设备执行指定的操作。
            </summary>
            <param name="hDevice">要执行操作的设备句柄。</param>
            <param name="dwIoControlCode">Win32 API 常数，输入的是以 <b>FSCTL_</b> 为前缀的常数，定义在 
            <b>WinIoCtl.h</b> 文件内，执行此重载方法必须输入 <b>SMART_GET_VERSION</b> 。</param>
            <param name="lpInBuffer">当参数为指针时，默认的输入值是 <b>0</b> 。</param>
            <param name="nInBufferSize">输入缓冲区的字节数量。</param>
            <param name="lpOutBuffer">一个 <b>GetVersionOutParams</b> ，表示执行函数后输出的设备检查。</param>
            <param name="nOutBufferSize">输出缓冲区的字节数量。</param>
            <param name="lpBytesReturned">实际装载到输出缓冲区的字节数量。</param>
            <param name="lpOverlapped">同步操作控制，一般不使用，默认值为 <b>0</b> 。</param>
            <returns>非零表示成功，零表示失败。</returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.DeviceIoControl(System.IntPtr,System.UInt32,DotNet.Utilities.Win32.SendCmdInParams@,System.UInt32,DotNet.Utilities.Win32.SendCmdOutParams@,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            对设备执行指定的操作。
            </summary>
            <param name="hDevice">要执行操作的设备句柄。</param>
            <param name="dwIoControlCode">Win32 API 常数，输入的是以 <b>FSCTL_</b> 为前缀的常数，定义在 
            <b>WinIoCtl.h</b> 文件内，执行此重载方法必须输入 <b>SMART_SEND_DRIVE_COMMAND</b> 或 <b>SMART_RCV_DRIVE_DATA</b> 。</param>
            <param name="lpInBuffer">一个 <b>SendCmdInParams</b> 结构，它保存向系统发送的查询要求具体命令的数据结构。</param>
            <param name="nInBufferSize">输入缓冲区的字节数量。</param>
            <param name="lpOutBuffer">一个 <b>SendCmdOutParams</b> 结构，它保存系统根据命令返回的设备相信信息二进制数据。</param>
            <param name="nOutBufferSize">输出缓冲区的字节数量。</param>
            <param name="lpBytesReturned">实际装载到输出缓冲区的字节数量。</param>
            <param name="lpOverlapped">同步操作控制，一般不使用，默认值为 <b>0</b> 。</param>
            <returns>非零表示成功，零表示失败。</returns>
        </member>
        <member name="T:DotNet.Utilities.Win32.HDiskInfo">
            <summary>
            保存当前计算机 IDE 设备（硬盘）的硬件信息的结构。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.HDiskInfo.ModuleNumber">
            <summary>
            硬盘型号。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.HDiskInfo.Firmware">
            <summary>
            硬盘的固件版本。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.HDiskInfo.SerialNumber">
            <summary>
            硬盘序列号。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.HDiskInfo.Capacity">
            <summary>
            硬盘容量，以M为单位。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.HDiskInfo.BufferSize">
            <summary>
            设备缓存大小（以M为单位）。
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Win32.GetVersionOutParams">
            <summary>
            表示使用 <b>DeviceIoControl</b> 函数时保存返回的驱动器硬件信息的结构
            </summary>
            <remarks>>此数据结构定义在 <b>WinIoCtl.h</b> 文件名为 <b>_GETVERSIONINPARAMS</b> 结构中。</remarks>
        </member>
        <member name="F:DotNet.Utilities.Win32.GetVersionOutParams.bVersion">
            <summary>
            IDE设备的二进制硬件版本。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.GetVersionOutParams.bRevision">
            <summary>
            IDE设备的二进制修订版本。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.GetVersionOutParams.bReserved">
            <summary>
            此值操作系统没有使用，使用此数据结构时被设置为 <b>0</b> 。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.GetVersionOutParams.bIDEDeviceMap">
            <summary>
            IDE设备的二进制映射。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.GetVersionOutParams.fCapabilities">
            <summary>
            IDE设备的二进制容量数据。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.GetVersionOutParams.dwReserved">
            <summary>
            保留内容，不使用。
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Win32.IdeRegs">
            <summary>
            一个数据结构，表示使用 <b>DeviceIoControl</b> 函数时发送到操作系统中的命令数据结构 <b>SendCmdInParams</b> 的成员结构。
            它表示要获取磁盘设备性能参数的具体定义规则。
            </summary>
            <seealso cref="T:DotNet.Utilities.Win32.SendCmdInParams"/>
            <remarks>此数据结构定义在 <b>WinIoCtl.h</b> 文件名为 <b>_IDEREGS</b> 中。</remarks>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdeRegs.bFeaturesReg">
            <summary>
            发送到操作系统的注册命令，此为系统的 <b>SMART Command</b> 。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdeRegs.bSectorCountReg">
            <summary>
            获取IDE设备扇区数。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdeRegs.bSectorNumberReg">
            <summary>
            获取IDE设备编号。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdeRegs.bCylLowReg">
            <summary>
            获取IDE设备低端柱面值。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdeRegs.bCylHighReg">
            <summary>
            获取IDE设备高端柱面值。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdeRegs.bDriveHeadReg">
            <summary>
            获取IDE设备的头信息。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdeRegs.bCommandReg">
            <summary>
            获取IDE设备的真正命令。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdeRegs.bReserved">
            <summary>
            保留内容，此值应设置为 <b>0</b> 。
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Win32.SendCmdInParams">
            <summary>
            保存执行 <b>DeviceIoControl</b> 函数时向系统提交的执行操作命令。
            </summary>
            <seealso cref="T:DotNet.Utilities.Win32.SendCmdInParams"/>
            <remarks>此数据结构定义在 <b>WinIoCtl.h</b> 文件名为 <b>_SENDCMDINPARAMS</b> 中。</remarks>
        </member>
        <member name="F:DotNet.Utilities.Win32.SendCmdInParams.cBufferSize">
            <summary>
            输出的数据缓冲大小。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.SendCmdInParams.irDriveRegs">
            <summary>
            保存向系统发送的磁盘设备命令的数据结构。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.SendCmdInParams.bDriveNumber">
            <summary>
            希望系统控制的物理磁盘的编号。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.SendCmdInParams.bReserved">
            <summary>
            保留的数据，不使用。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.SendCmdInParams.dwReserved">
            <summary>
            保留的数据，不使用。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.SendCmdInParams.bBuffer">
            <summary>
            保存当前 <b>SendCmdInParams</b> 结构填充数据后的大小。
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:DotNet.Utilities.Win32.DriverStatus" -->
        <member name="F:DotNet.Utilities.Win32.DriverStatus.bDriverError">
            <summary>
            如果检查的IDE设备发生错误，保存的错误代码，<b>0</b> 表示没有错误。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverStatus.bIDEStatus">
            <summary>
            IDE设备被注册的错误内容。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverStatus.bReserved">
            <summary>
            保留的数据，不使用。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.DriverStatus.dwReserved">
            <summary>
            保留的数据，不使用。
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Win32.SendCmdOutParams">
            <summary>
            表示当执行 <b>DeviceIoControl</b> 函数后保存系统根据查询命令返回的磁盘设备信息的数据结构。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.SendCmdOutParams.cBufferSize">
            <summary>
            表示所有二进制信息的缓存大小。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.SendCmdOutParams.DriverStatus">
            <summary>
            表示查询到设备的错误信息状态。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.SendCmdOutParams.bBuffer">
            <summary>
            表示系统返回的设备硬件信息的二进制数据结构。
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Win32.IdSector">
            <summary>
            当执行 <b>DeviceIoControl</b> 函数后系统返回的 <b>SendCmdOutParams</b> 结构中
            保存磁盘设备的硬件信息的数据结构。
            </summary>
            <seealso cref="T:DotNet.Utilities.Win32.SendCmdInParams"/>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wGenConfig">
            <summary>
            设备通用配置信息。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wNumCyls">
            <summary>
            设备的柱面数。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wReserved">
            <summary>
            保留内容，不使用。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wNumHeads">
            <summary>
            设备的磁头数目。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wBytesPerTrack">
            <summary>
            设备的磁道数目。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wBytesPerSector">
            <summary>
            设备的扇区数目。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wSectorsPerTrack">
            <summary>
            设备厂商设定的扇区磁道数目。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wVendorUnique">
            <summary>
            设备的出品厂商名称。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.sSerialNumber">
            <summary>
            设备出品厂商的全球唯一编码。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wBufferType">
            <summary>
            设备的缓存类型。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wBufferSize">
            <summary>
            设备缓存容量（单位是byte）。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wECCSize">
            <summary>
            设备的错误检查和纠正（ECC）数据的大小。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.sFirmwareRev">
            <summary>
            设备的固件版本。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.sModelNumber">
            <summary>
            设备的型号。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wMoreVendorUnique">
            <summary>
            设备厂商名称的扩展内容（如果有）。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wDoubleWordIO">
            <summary>
            设备双指令输入输出模式。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wCapabilities">
            <summary>
            设备的容量大小（单位Byte）。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wReserved1">
            <summary>
            第一个保留的内容，不使用。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wPIOTiming">
            <summary>
            设备的PIO模式巡道时间。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wDMATiming">
            <summary>
            设备DMA 模式巡道时间。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wBS">
            <summary>
            设备的总线类型，如SCSI,IDE等。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wNumCurrentCyls">
            <summary>
            设备的当前柱面数量。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wNumCurrentHeads">
            <summary>
            设备当前磁头数量。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wNumCurrentSectorsPerTrack">
            <summary>
            设备的当前扇区的磁道数量。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.ulCurrentSectorCapacity">
            <summary>
            设备的当前扇区容量（单位byte）。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wMultSectorStuff">
            <summary>
            多扇区读写模式支持。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.ulTotalAddressableSectors">
            <summary>
            用户是否可自定义扇区地址(LBA模式）支持。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wSingleWordDMA">
            <summary>
            单指令DMA模式。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.wMultiWordDMA">
            <summary>
            多指令DMA模式。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.IdSector.bReserved">
            <summary>
            保留内容，不使用。
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Win32.RECT">
            <summary>
            
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Win32.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:DotNet.Utilities.Win32.RECT.#ctor(System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="F:DotNet.Utilities.Win32.RECT.left">
            <summary>
            
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.RECT.top">
            <summary>
            
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.RECT.right">
            <summary>
            
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.RECT.bottom">
            <summary>
            
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Win32.RECT.FromXYWH(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="P:DotNet.Utilities.Win32.RECT.Size">
            <summary>
            
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Win32.SCROLLINFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Win32.MF_BYPOSITION">
            <summary>
            Win32 API 常数，指示在使用 <see cref="M:DotNet.Utilities.Win32.RemoveMenu(System.IntPtr,System.Int32,System.Int32)"/> 函数时指定使用索引数而不是使用ID。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Win32.#cctor">
            <summary>
            执行当前类在使用前的初始化操作。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Win32.GetHddInformation">
            <summary>
            获取当前用户物理磁盘的性能信息。
            </summary>
            <returns>一个 <see cref="T:DotNet.Utilities.Win32.HDiskInfo"/> 结构，它保存了物理硬盘的性能数据。</returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.ScrollWindow(System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32,DotNet.Utilities.Win32.RECT@,DotNet.Utilities.Win32.RECT@)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="nXAmount"></param>
            <param name="nYAmount"></param>
            <param name="rectScrollRegion"></param>
            <param name="rectClip"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.SetScrollPos(System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="nBar"></param>
            <param name="nPos"></param>
            <param name="bRedraw"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.SetScrollInfo(System.Runtime.InteropServices.HandleRef,System.Int32,DotNet.Utilities.Win32.SCROLLINFO,System.Boolean)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="fnBar"></param>
            <param name="si"></param>
            <param name="redraw"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.GetDeviceCaps(System.Runtime.InteropServices.HandleRef,System.Int32)">
            <summary>
            
            </summary>
            <param name="hDC"></param>
            <param name="nIndex"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.LOWORD(System.Int32)">
            <summary>
            
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Win32.LOWORD(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.Assistant">
            <summary>
            Assistant 的摘要说明。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Assistant.CreateTag(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            创建显示图像的标签(flash加点击)
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Assistant.CreateTag2(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            创建显示图像的标签(flash无点击)
            </summary>		
        </member>
        <member name="M:DotNet.Utilities.Assistant.CreateTag(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建显示图像的标签(重载)，无宽高限制，(flash加点击)
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Assistant.CreateTag2(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建显示图像的标签(重载)，无宽高限制，(flash无点击)
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Assistant.CreateTagOld(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            创建显示图像的标签
            </summary>
            <param name="filename"></param>
            <param name="desc"></param>
            <param name="FileType"></param>
            <param name="LinkURL"></param>
            <param name="Width"></param>
            <param name="High"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Assistant.GetRandomCode(System.String,System.Int32)">
            <summary>
            从字符串里随机得到，规定个数的字符串.
            </summary>
            <param name="allChar"></param>
            <param name="CodeCount"></param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.BindDataControl">
            <summary>
            数据展示控件 绑定数据类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.BindDataControl.BindDataList(System.Web.UI.Control,System.Data.DataView)">
            <summary>
            简单绑定DataList
            </summary>
            <param name="ctrl">控件ID</param>
            <param name="mydv">数据视图</param>
        </member>
        <member name="M:DotNet.Utilities.BindDataControl.BindDataReaderList(System.Web.UI.Control,System.Data.SqlClient.SqlDataReader)">
            <summary>
            SqlDataReader简单绑定DataList
            </summary>
            <param name="ctrl">控件ID</param>
            <param name="mydv">数据视图</param>
        </member>
        <member name="M:DotNet.Utilities.BindDataControl.BindGridView(System.Web.UI.Control,System.Data.DataView)">
            <summary>
            简单绑定GridView
            </summary>
            <param name="ctrl">控件ID</param>
            <param name="mydv">数据视图</param>
        </member>
        <member name="M:DotNet.Utilities.BindDataControl.BindRepeater(System.Web.UI.Control,System.Data.DataView)">
            <summary>
            绑定服务器控件 简单绑定Repeater
            </summary>
            <param name="ctrl">控件ID</param>
            <param name="mydv">数据视图</param>
        </member>
        <member name="T:DotNet.Utilities.ConvertHelper">
            <summary>
            处理数据类型转换，数制转换、编码转换相关的类
            </summary>    
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.RepairZero(System.String,System.Int32)">
            <summary>
            指定字符串的固定长度，如果字符串小于固定长度，
            则在字符串的前面补足零，可设置的固定长度最大为9位
            </summary>
            <param name="text">原始字符串</param>
            <param name="limitedLength">字符串的固定长度</param>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            使用指定字符集将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            使用指定字符集将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.BytesToInt32(System.Byte[])">
            <summary>
            将byte[]转换成int
            </summary>
            <param name="data">需要转换成整数的byte数组</param>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.IsNumeric(System.String)">
            <summary>判断是否为数字类型,包括[+-]号,小数字
            包括（boolean/byte/int16/int32/int64/single/double/decimal）
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.IsNumeric(System.Object)">
            <summary>判断是否为数字类型,包括[+-]号,小数字
            包括（boolean/byte/int16/int32/int64/single/double/decimal）
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.IsInt(System.String)">
            <summary>判断是否为整型数字(int32),不包括-</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.IsInt(System.Object)">
            <summary>判断是否为整型数字,包括（int32）</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.IsLong(System.String)">
            <summary>判断是否为整型数字,包括（int64）</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.IsLong(System.Object)">
            <summary>判断是否为整型数字,包括（int64）</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.IsFloat(System.String)">
            <summary>判断是否为浮点数字,用于货币,数量,包括小数字,但不包[+-]号,最多18位
            包括（single/double/decimal）
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.IsFloat(System.Object)">
            <summary>判断是否为浮点数字,用于货币,数量,包括小数字,但不包[+-]号
            包括（single/double/decimal）
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Cint(System.String,System.Int32)">
            <summary>把string 转 int32 ,从左边继位检查转换(不管输入的是小数,还是字母)</summary>
            <param name="str"></param>
            <param name="defValue"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Cint(System.Object)">
            <summary>把string 转 int32 ,从左边继位检查转换(不管输入的是小数,还是字母)</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.CintMinValue(System.String,System.Int32)">
            <summary>把string 转 int32,判断是否小于minValue,小于返回minValue</summary>
            <param name="str"></param>
            <param name="minValue">当Value少于该值时,返回该值</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.CintMinValue(System.Object,System.Int32)">
            <summary>把string 转 int32,判断是否小于minValue,小于返回minValue</summary>
            <param name="str"></param>
            <param name="minValue">当Value少于该值时,返回该值</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Cint0(System.String)">
            <summary>把string 转 int32,小于0返回0,否则返回int值</summary>
            <param name="str"></param>
            <returns>返回>=0的int型</returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Cint0(System.Object)">
            <summary>把string 转 int32,小于0返回0,否则返回int值</summary>
            <param name="str"></param>
            <returns>返回>=0的int型</returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Cint1(System.String)">
            <summary>把string 转 int32,小于1返回1,否则返回int值</summary>
            <param name="str"></param>
            <returns>返回>=1的int型</returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Cint1(System.Object)">
            <summary>把string 转 int32,小于0返回0,否则返回int值</summary>
            <param name="str"></param>
            <returns>返回>=1的int型</returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Ctinyint(System.String)">
            <summary>不等于"1",就为"0",用于审核之类的</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Ctinyint(System.Object)">
            <summary>不等于"1",就为"0",用于审核之类的</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Clng(System.String)">
            <summary>把string 转 long/int64 ,从左边继位检查转换(不管输入的是小数,还是字母)</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Clng(System.Object)">
            <summary>把string 转 long/int64 ,从左边继位检查转换(不管输入的是小数,还是字母)</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Cdbl(System.String)">
            <summary>把string 转 Double ,从左边继位检查转换(不管输入的是小数,还是字母)</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Cdbl(System.Object)">
            <summary>把string 转 Double ,从左边继位检查转换(不管输入的是小数,还是字母)</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Cdbl0(System.String)">
            <summary>把string 转 Double ,小于0返回0,否则返回int值</summary>
            <param name="str"></param>
            <returns>返回>=0的int型</returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.Cdbl0(System.Object)">
            <summary>把string 转 Double ,小于0返回0,否则返回int值</summary>
            <param name="str"></param>
            <returns>返回>=0的int型</returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.MinInt(System.Int32,System.Int32)">
            <summary>限制数值,不得少于 iMin ,比如分页数,不能少于 1</summary>
            <param name="str"></param>
            <param name="iMin"></param>
            <returns></returns>
            
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.MinDbl(System.Double,System.Double)">
            <summary>限制数值,不得少于 iMin ,比如分页数,不能少于 1</summary>
            <param name="str"></param>
            <param name="iMin"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.MinDbl(System.Object,System.Double)">
            <summary>限制数值,不得少于 iMin ,比如分页数,不能少于 1</summary>
            <param name="str"></param>
            <param name="iMin"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.StringToByte(System.String,System.Int32)">
            <summary>字符串转为Btye类型
            </summary>
            <param name="str">字符串值</param>
            <param name="value">值，请输入0或1</param>
            <returns>byte值</returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.StringToByteArray(System.String)">
            <summary>将String 转为 byte[] </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.ByteArrayToString(System.Byte[])">
            <summary>将byte[] 转为  String</summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.HexStringToByteArray(System.String)">
            <summary>将Hex String 转为 byte[] </summary>
            <param name="hexString"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertHelper.ByteArrayToHexString(System.Byte[])">
            <summary>将byte[] 转为 Hex String</summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.CacheHelper.GetCache(System.String)">
            <summary>
            获取数据缓存
            </summary>
            <param name="CacheKey">键</param>
        </member>
        <member name="M:DotNet.Utilities.CacheHelper.SetCache(System.String,System.Object)">
            <summary>
            设置数据缓存
            </summary>
        </member>
        <member name="M:DotNet.Utilities.CacheHelper.SetCache(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置数据缓存
            </summary>
        </member>
        <member name="M:DotNet.Utilities.CacheHelper.SetCache(System.String,System.Object,System.DateTime,System.TimeSpan)">
            <summary>
            设置数据缓存
            </summary>
        </member>
        <member name="M:DotNet.Utilities.CacheHelper.RemoveOneCache(System.String)">
            <summary>清除单一键缓存</summary>
            <param name="cacheKey">缓存名称</param>
        </member>
        <member name="M:DotNet.Utilities.CacheHelper.RemoveAllCache(System.String)">
            <summary>
            移除指定数据缓存
            </summary>
        </member>
        <member name="M:DotNet.Utilities.CacheHelper.RemoveAllCache">
            <summary>
            移除全部缓存
            </summary>
        </member>
        <member name="M:DotNet.Utilities.CacheHelper.RemoveManagersAllCache">
            <summary>清除所有缓存</summary>
        </member>
        <member name="M:DotNet.Utilities.CacheHelper.ShowAllCache">
            <summary>以列表形式返回已存在的所有缓存</summary>
            <returns></returns> 
        </member>
        <member name="M:DotNet.Utilities.CookieHelper.ClearCookie(System.String)">
            <summary>
            清除指定Cookie
            </summary>
            <param name="cookiename">cookiename</param>
        </member>
        <member name="M:DotNet.Utilities.CookieHelper.GetCookieValue(System.String)">
            <summary>
            获取指定Cookie值
            </summary>
            <param name="cookiename">cookiename</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.CookieHelper.GetCookieValue(System.String,System.String)">
            <summary>读cookie值,Cookies[key]
            </summary>
            <param name="cookiename">名称</param>
            <param name="key">key</param>
            <returns>cookie值</returns>
        </member>
        <member name="M:DotNet.Utilities.CookieHelper.SetCookie(System.String,System.String)">
            <summary>
            添加一个Cookie（1年后过期）
            </summary>
            <param name="cookiename"></param>
            <param name="cookievalue"></param>
        </member>
        <member name="M:DotNet.Utilities.CookieHelper.SetCookie(System.String,System.String,System.DateTime)">
            <summary>
            添加一个Cookie,带过期时间
            </summary>
            <param name="cookiename">cookie名</param>
            <param name="cookievalue">cookie值</param>
            <param name="expires">过期时间 DateTime</param>
        </member>
        <member name="M:DotNet.Utilities.CookieHelper.SetCookie(System.String,System.String,System.String)">
            <summary>写cookie值,Cookies[key]（1年后过期）
            </summary>
            <param name="cookiename">名称</param>
            <param name="key">key</param>
            <param name="cookievalue">值</param>
        </member>
        <member name="M:DotNet.Utilities.CookieHelper.SetCookie(System.String,System.String,System.String,System.DateTime)">
            <summary>写cookie值,Cookies[key],带过期时间
            </summary>
            <param name="cookiename">名称</param>
            <param name="key">key</param>
            <param name="cookievalue">值</param>
            <param name="expires">过期时间(分钟)</param>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetFormString(System.String,System.Boolean)">
            <summary>获得Post提交的参数值</summary>
            <param name="strName">表单参数</param>
            <param name="isFilterXss">是否过滤XSS</param>
            <returns>表单参数的值</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetQueryString(System.String,System.Boolean)">
            <summary> 获得Get提交的参数值 </summary>
            <param name="strName">Url参数</param>
            <param name="isFilterXss">是否过滤XSS</param>
            <returns>Url参数的值</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.PostText(System.String,System.Int32,System.Boolean)">
            <summary>获得Post提交的参数值,带截取和sql注入过滤</summary>
            <param name="strName">表单参数</param>
            <param name="minLen">截取的长度(字数)</param>
            <param name="isFilterXss">是否过滤XSS</param>
            <returns>表单参数的值(sql过滤,截取后)</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetText(System.String,System.Int32,System.Boolean)">
            <summary>获得Get提交的参数值,带截取和sql注入过滤</summary>
            <param name="strName">表单参数</param>
            <param name="minLen">截取的长度(字数)</param>
            <param name="isFilterXss">是否过滤XSS</param>
            <returns>表单参数的值(sql过滤,截取后)</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetKeyChar(System.String,System.Int32)">
            <summary>获得Get提交的参数值,判断是否abcdefghijklmnopqrstuvwxyz0123456789组成的,是返回,否返回""</summary>
            <param name="strName">表单参数</param>
            <param name="minLen">截取的长度(字数)</param>
            <returns>返回int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.PostInt(System.String)">
            <summary>获得Post提交的参数值,判断是否int,是返回,否返回0</summary>
            <param name="strName">表单参数</param>
            <returns>返回int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.PostIntMinValue(System.String,System.Int32)">
            <summary>获得Post提交的参数值,判断是否小于minValue,小于返回minValue</summary>
            <param name="strName">表单参数</param>
            <param name="minValue">当Value少于该值时,返回该值</param>
            <returns>返回int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.PostInt0(System.String)">
            <summary>获得Post提交的参数值,小于0返回0,否则返回int值</summary>
            <param name="strName">表单参数</param>
            <returns>返回 大于等于0的int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.PostInt1(System.String)">
            <summary>获得Post提交的参数值,小于1返回1,否则返回int值</summary>
            <param name="strName">表单参数</param>
            <returns>返回 大于等于1的int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.PostLong(System.String)">
            <summary>获得Post提交的参数值,判断是否Long,是返回,否返回0</summary>
            <param name="strName">表单参数</param>
            <returns>返回int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.PostLongMinValue(System.String,System.Int64)">
            <summary>获得Post提交的参数值,判断是否小于minValue,小于返回minValue</summary>
            <param name="strName">表单参数</param>
            <param name="minValue">当Value少于该值时,返回该值</param>
            <returns>返回int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.PostLong0(System.String)">
            <summary>获得Post提交的参数值,小于0返回0,否则返回int值</summary>
            <param name="strName">表单参数</param>
            <returns>返回 大于等于0的int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.PostLong1(System.String)">
            <summary>获得Post提交的参数值,小于1返回1,否则返回int值</summary>
            <param name="strName">表单参数</param>
            <returns>返回 大于等于1的int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetInt(System.String)">
            <summary>获得Get提交的参数值,判断是否int,是返回,否返回"0"</summary>
            <param name="strName">表单参数</param>
            <returns>返回int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetIntMinValue(System.String,System.Int32)">
            <summary>获得Get提交的参数值,判断是否小于minValue,小于返回minValue</summary>
            <param name="strName">表单参数</param>
            <param name="minValue">当Value少于该值时,返回该值</param>
            <returns>返回int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetInt0(System.String)">
            <summary>获得Get提交的参数值,小于0返回0,否则返回int值</summary>
            <param name="strName">表单参数</param>
            <returns>返回 大于等于0的int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetInt1(System.String)">
            <summary>获得Get提交的参数值,小于1返回1,否则返回int值</summary>
            <param name="strName">表单参数</param>
            <returns>返回 大于等于1的int型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.PostDouble(System.String)">
            <summary>获得Post提交的参数值,判断是否double,是返回,否返回0</summary>
            <param name="strName">表单参数</param>
            <returns>返回double型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.PostDouble0(System.String)">
            <summary>获得Post提交的参数值,判断是否double,是返回,否返回0</summary>
            <param name="strName">表单参数</param>
            <returns>返回double型</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetString(System.String,System.Boolean)">
            <summary>获得Url或表单参数的值(不区分Post或Get提交,同样都取值,但Get优先处理)</summary>
            <param name="strName">参数</param>
            <param name="isFilterXss">是否过滤XSS</param>
            <returns>Url或表单参数的值</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetFormAll(System.Web.HttpContext)">
            <summary>获得Post提交的全部值</summary>
            <returns>获得Post提交的全部值</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetServerString(System.String)">
            <summary>返回指定的服务器变量信息</summary>
            <param name="strName">服务器变量名</param>
            <returns>服务器变量信息</returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.ChkSrcPost">
            <summary>检查输入口,是否为本服务器</summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetRequestHost">
            <summary>取得当前页面的域名</summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetRequestHost2">
            <summary>取得当前页面的域名</summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.RequestHelper.GetRequestFileName">
            <summary>取得当前页面的路径</summary>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.SessionHelper">
            <summary>
            Session 操作类
            1、GetSession(string name)根据session名获取session对象
            2、SetSession(string name, object val)设置session
            </summary>
        </member>
        <member name="M:DotNet.Utilities.SessionHelper.GetSession(System.String)">
            <summary>
            根据session名获取session对象
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.SessionHelper.SetSession(System.String,System.Object)">
            <summary>
            设置session
            </summary>
            <param name="name">session 名</param>
            <param name="val">session 值</param>
        </member>
        <member name="M:DotNet.Utilities.SessionHelper.ClearSession">
            <summary>
            清空所有的Session
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.SessionHelper.RemoveSession(System.String)">
            <summary>
            删除一个指定的ession
            </summary>
            <param name="name">Session名称</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.SessionHelper.RemoveAllSession(System.String)">
            <summary>
            删除所有的ession
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.SessionHelper2.Add(System.String,System.String)">
            <summary>
            添加Session，调动有效期为20分钟
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValue">Session值</param>
        </member>
        <member name="M:DotNet.Utilities.SessionHelper2.Adds(System.String,System.String[])">
            <summary>
            添加Session，调动有效期为20分钟
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValues">Session值数组</param>
        </member>
        <member name="M:DotNet.Utilities.SessionHelper2.Add(System.String,System.String,System.Int32)">
            <summary>
            添加Session
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValue">Session值</param>
            <param name="iExpires">调动有效期（分钟）</param>
        </member>
        <member name="M:DotNet.Utilities.SessionHelper2.Adds(System.String,System.String[],System.Int32)">
            <summary>
            添加Session
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValues">Session值数组</param>
            <param name="iExpires">调动有效期（分钟）</param>
        </member>
        <member name="M:DotNet.Utilities.SessionHelper2.Get(System.String)">
            <summary>
            读取某个Session对象值
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <returns>Session对象值</returns>
        </member>
        <member name="M:DotNet.Utilities.SessionHelper2.Gets(System.String)">
            <summary>
            读取某个Session对象值数组
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <returns>Session对象值数组</returns>
        </member>
        <member name="M:DotNet.Utilities.SessionHelper2.Del(System.String)">
            <summary>
            删除某个Session对象
            </summary>
            <param name="strSessionName">Session对象名称</param>
        </member>
        <member name="T:DotNet.Utilities.CsvHelper">
            <summary>
            CSV文件转换类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.CsvHelper.dt2csv(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            导出报表为Csv
            </summary>
            <param name="dt">DataTable</param>
            <param name="strFilePath">物理路径</param>
            <param name="tableheader">表头</param>
            <param name="columname">字段标题,逗号分隔</param>
        </member>
        <member name="M:DotNet.Utilities.CsvHelper.csv2dt(System.String,System.Int32,System.Data.DataTable)">
            <summary>
            将Csv读入DataTable
            </summary>
            <param name="filePath">csv文件路径</param>
            <param name="n">表示第n行是字段title,第n+1行是记录开始</param>
        </member>
        <member name="T:DotNet.Utilities.DataTableHelper">
            <summary>
            对DataTable进行处理
            </summary>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.DataTable_Find_Value(System.Data.DataTable,System.String,System.String)">
            <summary>从DataTable查找指定值</summary>
            <param name="dt">要查找的DataTable</param>
            <param name="where">条件</param>
            <param name="retField">返回值的字段名</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.DataTable_SelectDataRow(System.Data.DataTable,System.String,System.String)">
            <summary>从DataTable查找指定行</summary>
            <param name="dt">要查找的DataTable</param>
            <param name="str">比较条件：当前的值，比如：ClassID = 1</param>
            <param name="findField">查找的字段："ClassID"</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.DataTable_GetIdList(System.Data.DataTable,System.String,System.String)">
            <summary>从DataTable查找指定id list</summary>
            <param name="dt">要查找的DataTable</param>
            <param name="sWhere">在dataTable中查找到定条件的记录，并返回新的DataTable，例如： IsPost=1 and IsShow=1</param>
            <param name="retField">返回的字段："ClassID"</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.GetFilterData(System.Data.DataTable,System.String,System.String,System.String,System.String)">
            <summary>
            在dataTable中查找到定条件的记录，并返回新的DataTable
            </summary>
            <param name="dt">数据表</param>
            <param name="colName">要找查的名称（条件名，为空时表示查询全部）</param>
            <param name="colValue">要查找的值</param>
            <param name="sortName">排序字段名</param>
            <param name="orderby">升序或降序（Asc/Desc）</param>
            <returns>返回筛选后的数据表</returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.GetFilterData(System.Data.DataTable,System.String,System.String)">
            <summary>
            筛选函数，将数据表里面指定的值查找出来
            </summary>
            <param name="dt">数据表</param>
            <param name="wheres">条件，例：Id=100 and xx=20</param>
            <param name="sort">排序，例：Id Desc</param>
            <returns>返回筛选后的数据表</returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.GetColList(System.Data.DataTable,System.String)">
            <summary>根据DataTable,返回指定列数据列表，用“，”进行分隔</summary>
            <param name="dt">DataTable</param>
            <param name="colName">列名</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.GetArrayString(System.Data.DataTable,System.String)">
            <summary>根据DataTable,返回指定列数据的string[]</summary>
            <param name="dt">DataTable</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.GetArrayInt(System.Data.DataTable,System.String)">
            <summary>根据DataTable,返回指定列数据的int[]</summary>
            <param name="dt">DataTable</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.GetColumnsString(System.Data.DataTable)">
            <summary>根据DataTable,返回第一行,各列数据到string[]</summary>
            <param name="dt">DataTable</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.GetArrayString(System.Data.DataTable)">
            <summary>根据DataTable,返回n行n列的数据到string[,]</summary>
            <param name="dt">DataTable</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.DataTableTidyUp(System.Data.DataTable,System.String,System.String)">
            <summary>整理dataTable数据，以便于在有层次感的数据容器中使用
            </summary>
            <param name="dtable">DataTable数据源</param>
            <param name="pkFiled">主键ID列名</param>
            <param name="parentIdFiled">父级ID列名</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.DataTableTidyUp(System.Data.DataTable,System.String,System.String,System.Int32)">
            <summary>
            整理dataTable数据，以便于在有层次感的数据容器中使用
            </summary>
            <param name="dtable">DataTable数据源</param>
            <param name="pkFiled">主键ID列名</param>
            <param name="parentIdFiled">父级ID列名</param>
            <param name="parentId">父ID值，用于查询分类列表时，只显示指定一级分类下面的全部分类</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.DataTableTidyUp2(System.Data.DataTable,System.String,System.String,System.Int32,System.String)">
            <summary>
            整理dataTable数据，以便于在有层次感的数据容器中使用    权限使用
            </summary>
            <param name="dtable">DataTable数据源</param>
            <param name="pkFiled">主键ID列名</param>
            <param name="parentIdFiled">父级ID列名</param>
            <param name="parentId">父ID值，用于查询分类列表时，只显示指定一级分类下面的全部分类</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.DataTableTidyUp1(System.Data.DataTable,System.String,System.String,System.Int32,System.String)">
            <summary>
            整理dataTable数据，以便于在有层次感的数据容器中使用    权限使用
            </summary>
            <param name="dtable">DataTable数据源</param>
            <param name="pkFiled">主键ID列名</param>
            <param name="parentIdFiled">父级ID列名</param>
            <param name="parentId">父ID值，用于查询分类列表时，只显示指定一级分类下面的全部分类</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.DataTableTidyUp4(System.Data.DataTable,System.String,System.String,System.Int32)">
            <summary>
            整理dataTable数据，以便于在有层次感的数据容器中使用    权限使用
            </summary>
            <param name="dtable">DataTable数据源</param>
            <param name="pkFiled">主键ID列名</param>
            <param name="parentIdFiled">父级ID列名</param>
            <param name="parentId">父ID值，用于查询分类列表时，只显示指定一级分类下面的全部分类</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.DataSetTidyUp(System.Data.DataTable,System.String,System.String)">
            <summary>整理dataTable数据，以便于在有层次感的数据容器中使用
            </summary>
            <param name="dtable">DataTable数据源</param>
            <param name="pkFiled">主键ID列名</param>
            <param name="parentIDFiled">父级ID列名</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.DataTableTreeSort(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>整理dataTable数据，以便于在有层次感的数据容器中使用，</summary>
            <param name="dtable">DataTable数据源</param>
            <param name="pkFiled">主键ID列名</param>
            <param name="parentIdFiled">父级ID列名</param>
            <param name="sortName">ParentID asc,SortId asc</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.Get_Html_CheckBox_Array(System.String,System.String[0:,0:],System.String,System.String)">
            <summary>根据idList，输出复选框 CheckBox</summary>
            <param name="name">复选框指定名称</param>
            <param name="arr">string[]</param>
            <param name="idList"></param>
            <param name="sFlag">后缀符号</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.Get_Html_CheckBox(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary> 输出 checked 控件的html </summary>
            <param name="sId">checked 控件的id</param>
            <param name="sName">checked 控件的name</param>
            <param name="sValue">当前值</param>
            <param name="sText">显示文本</param>
            <param name="bSel">true=已经选择,false =没有选择</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.Get_Html_CheckBox_DataTable(System.String,System.String,System.String,System.Data.DataTable,System.String)">
            <summary>根据idList，输出复选框 CheckBox</summary>
            <param name="sIdList">当前选择的值 id list</param>
            <param name="sId">checked 控件的id</param>
            <param name="sName">checked 控件的name</param>
            <param name="dt">datatable</param>
            <param name="sFlag"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataTableHelper.Get_OptionHtml(System.String,System.Data.DataTable,System.String)">
            <summary>
            '输出option 下的列表的html (注:不包括select,只输出option)
            Get_OptionHtml("男",string[,{id,name}])
            </summary>
            <param name="sValue">当前值</param>
            <param name="dt">dt</param>
            <param name="sFlag">后缀符号，例如：年、元等</param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.MySecurity">
            <summary>
            MySecurity(安全类) 的摘要说明。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.MySecurity.#ctor">
            <summary>
            初始化安全类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.MySecurity.SEncryptString(System.String,System.String)">
            <summary>
            加密字符串
            </summary>
            <param name="inputStr">输入字符串</param>
            <param name="keyStr">密码，可以为“”</param>
            <returns>输出加密后字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.MySecurity.EncryptString(System.String,System.String)">
            <summary>
            加密字符串
            </summary>
            <param name="inputStr">输入字符串</param>
            <param name="keyStr">密码，可以为“”</param>
            <returns>输出加密后字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.MySecurity.SEncryptString(System.String)">
            <summary>
            加密字符串 密钥为系统默认
            </summary>
            <param name="inputStr">输入字符串</param>
            <returns>输出加密后字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.MySecurity.EncryptFile(System.String,System.String,System.String)">
            <summary>
            加密文件
            </summary>
            <param name="filePath">输入文件路径</param>
            <param name="savePath">加密后输出文件路径</param>
            <param name="keyStr">密码，可以为“”</param>
            <returns></returns>  
        </member>
        <member name="M:DotNet.Utilities.MySecurity.SDecryptString(System.String,System.String)">
            <summary>
            解密字符串
            </summary>
            <param name="inputStr">要解密的字符串</param>
            <param name="keyStr">密钥</param>
            <returns>解密后的结果</returns>
        </member>
        <member name="M:DotNet.Utilities.MySecurity.SDecryptString(System.String)">
            <summary>
             解密字符串 密钥为系统默认
            </summary>
            <param name="inputStr">要解密的字符串</param>
            <returns>解密后的结果</returns>
        </member>
        <member name="M:DotNet.Utilities.MySecurity.DecryptString(System.String,System.String)">
            <summary>
            解密字符串
            </summary>
            <param name="inputStr">要解密的字符串</param>
            <param name="keyStr">密钥</param>
            <returns>解密后的结果</returns>
        </member>
        <member name="M:DotNet.Utilities.MySecurity.DecryptFile(System.String,System.String,System.String)">
            <summary>
            解密文件
            </summary>
            <param name="filePath">输入文件路径</param>
            <param name="savePath">解密后输出文件路径</param>
            <param name="keyStr">密码，可以为“”</param>
            <returns></returns>    
        </member>
        <member name="M:DotNet.Utilities.MySecurity.MD5(System.String)">
            <summary>
            128位MD5算法加密字符串
            </summary>
            <param name="text">要加密的字符串</param>    
        </member>
        <member name="M:DotNet.Utilities.MySecurity.MD5(System.Byte[])">
            <summary>
            128位MD5算法加密Byte数组
            </summary>
            <param name="data">要加密的Byte数组</param>    
        </member>
        <member name="M:DotNet.Utilities.MySecurity.EncodeBase64(System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="text">要加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MySecurity.DecodeBase64(System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="text">要解密的字符串</param>
        </member>
        <member name="M:DotNet.Utilities.Ras.#ctor(DotNet.Utilities.Ras.ConnectionNotify,System.Double)">
            <summary>
            
            </summary>
            <param name="ConnectionDelegate">连接通知委托</param>
            <param name="interval"></param>
        </member>
        <member name="M:DotNet.Utilities.Ras.CreateEntry(System.Int32,System.String@)">
            <summary>
            创建条目
            </summary>
            <param name="hWnd">柄</param>
            <param name="strError">错误</param>
            <returns>结果</returns>
        </member>
        <member name="M:DotNet.Utilities.Ras.DeleteEntry(System.String,System.String@)">
            <summary>
            删除条目
            </summary>
            <param name="strEntryName">条目名称</param>
            <param name="strError">错误</param>
            <returns>结果</returns>
        </member>
        <member name="M:DotNet.Utilities.Ras.DialUp(System.String,System.String@)">
            <summary>
            拨号
            </summary>
            <param name="strEntryName">条目名称</param>
            <param name="strError">错误</param>
            <returns>结果</returns>
        </member>
        <member name="M:DotNet.Utilities.Ras.EditEntry(System.Int32,System.String,System.String@)">
            <summary>
            编辑条目
            </summary>
            <param name="hWnd">柄</param>
            <param name="strEntryName">条目名称</param>
            <param name="strError">错误</param>
            <returns>结果</returns>
        </member>
        <member name="M:DotNet.Utilities.Ras.GetDefaultEntry(System.String@,System.String@)">
            <summary>
            获取默认条目
            </summary>
            <param name="strEntry">条目</param>
            <param name="strError">错误</param>
            <returns>结果</returns>
        </member>
        <member name="M:DotNet.Utilities.Ras.GetEntries(System.String[]@,System.String@)">
            <summary>
            得到条目
            </summary>
            <param name="strEntryName">条目名称</param>
            <param name="strError">错误</param>
            <returns>结果</returns>
        </member>
        <member name="M:DotNet.Utilities.Ras.GetEntryParams(System.String,System.String@,System.String@,System.String@,System.Boolean@,System.String@)">
            <summary>
            获得入口参数
            </summary>
            <param name="strEntryName">条目名称</param>
            <param name="strPhoneNumber">电话号码</param>
            <param name="strUserName">用户名</param>
            <param name="strPassword">密码</param>
            <param name="bRememberPassword">记住密码</param>
            <param name="strError">错误</param>
            <returns>结果</returns>
        </member>
        <member name="M:DotNet.Utilities.Ras.GetErrorString(System.Int32)">
            <summary>
            获得错误
            </summary>
            <param name="nErrorValue"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Ras.HangUp(System.String@)">
            <summary>
            挂断
            </summary>
            <param name="strError">错误</param>
            <returns>结果</returns>
        </member>
        <member name="M:DotNet.Utilities.Ras.RasDialFunc(System.UInt32,DotNet.Utilities.Ras.RASCONNSTATE,System.Int32)">
            <summary>
            拨
            </summary>
            <param name="unMsg"></param>
            <param name="rasconnstate"></param>
            <param name="dwError"></param>
        </member>
        <member name="M:DotNet.Utilities.Ras.RenameEntry(System.String,System.String,System.String@)">
            <summary>
            重命名输入
            </summary>
            <param name="strOldEntry">旧的条目</param>
            <param name="strNewEntry">新的条目</param>
            <param name="strError">错误</param>
            <returns>结果</returns>
        </member>
        <member name="M:DotNet.Utilities.Ras.SetDefaultEntry(System.String)">
            <summary>
            设置默认条目
            </summary>
            <param name="strEntry"></param>
        </member>
        <member name="M:DotNet.Utilities.Ras.SetEntryParams(System.String,System.String,System.String,System.String,System.Boolean,System.String@)">
            <summary>
            设置输入参数个数
            </summary>
            <param name="strEntryName">条目名称</param>
            <param name="strPhoneNumber">电话号码</param>
            <param name="strUserName">用户名</param>
            <param name="strPassword">密码</param>
            <param name="bRememberPassword">记住密码</param>
            <param name="strError">错误</param>
            <returns>结果</returns>
        </member>
        <member name="M:DotNet.Utilities.Ras.TimerEvent(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            计时器事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:DotNet.Utilities.Ras.ConnectionNotify">
            <summary>
            嵌套类型
            </summary>
            <param name="strNotify"></param>
            <param name="bConnect"></param>
        </member>
        <member name="T:DotNet.Utilities.Ras.RasDialEvent">
            <summary>
            拨事件
            </summary>
            <param name="unMsg">显示</param>
            <param name="rasconnstate"></param>
            <param name="dwError">错误</param>
        </member>
        <member name="T:DotNet.Utilities.Json.JsonHelper">
            <summary>Json的封装函数</summary>
        </member>
        <member name="M:DotNet.Utilities.Json.JsonHelper.IsJson(System.String)">
            <summary>检查字符串是否json格式</summary>
            <param name="jText"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Json.JsonHelper.IsJsonRs(System.String)">
            <summary>检查字符串是否json格式数组</summary>
            <param name="jText"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Json.JsonHelper.Fmt_Null(System.String)">
            <summary>格式化 json</summary>
            <param name="jText"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Json.JsonHelper.Fmt_Rs(System.String)">
            <summary>格式化 json ，删除左右二边的[]</summary>
            <param name="jText"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Json.JsonHelper.ToJson(System.Object)">
            <summary>序列化</summary>
            <param name="obj">object </param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Json.JsonHelper.ToJson_FromSQL(System.Data.DataTable)">
            <summary>序列化--sql</summary>
            <param name="dt">DataTable</param>
            <returns></returns>   
        </member>
        <member name="M:DotNet.Utilities.Json.JsonHelper.ToDataTable(System.String)">
            <summary>反序列化</summary>
            <param name="jText"></param>
            <returns></returns>      
        </member>
        <member name="M:DotNet.Utilities.Json.JsonHelper.ToObject``1(System.String)">
            <summary>反序列化</summary>
            <typeparam name="T">类型</typeparam>
            <param name="jText">json字符串</param>
            <returns>类型数据</returns>
        </member>
        <member name="T:DotNet.Utilities.Log.LogHelper">
            <summary>  
            LogHelper的摘要说明。   
            </summary>   
        </member>
        <member name="F:DotNet.Utilities.Log.LogHelper.Loginfo">
            <summary>
            静态只读实体对象info信息
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Log.LogHelper.Logerror">
            <summary>
             静态只读实体对象error信息
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Log.LogHelper.WriteLog(System.String)">
            <summary>
             添加info信息
            </summary>
            <param name="info">自定义日志内容说明</param>
        </member>
        <member name="M:DotNet.Utilities.Log.LogHelper.WriteLog(System.String,System.Exception)">
            <summary>
            添加异常信息
            </summary>
            <param name="info">自定义日志内容说明</param>
            <param name="ex">异常信息</param>
        </member>
        <member name="T:DotNet.Utilities.ClientHelper">
            <summary>
            客户端信息获取类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.#ctor(System.Web.HttpRequest)">
            <summary>构造函数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetBrowserOS">
            <summary>返回浏览器操作系统名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetBrowserIP">
            <summary>返回浏览器IP
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetBrowserSupportJava">
            <summary> 返回浏览器是否支持Java
             </summary>
             <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetBrowserName">
            <summary>返回浏览器IE版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetBrowserNETCLR">
            <summary>返回浏览器.NET版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetBrowserSupportCookies">
            <summary>返回浏览器是否支持Cookies
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetSystem">
            <summary>获取客户端使用的系统</summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetSysClass">
            <summary>判断系统属于win16还是win32,还是其他
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetBrowserInfo">
            <summary>获取客户端浏览器信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetBrowserIdentifying">
            <summary>获取浏览器的标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetBrowserVersion">
            <summary>获取浏览器的版本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetBrowerMajorVersion">
            <summary>获取浏览器的主版本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetBrowserMinorVersion">
            <summary>获取浏览器的次版本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsBrowserBeta">
            <summary>判断浏览器是否为测试版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsBrowserAOL">
            <summary>是否是 America Online(美国在线服务)浏览器</summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetNetClrVersion">
            <summary>客户端安装的 .NET Framework 版本</summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsCrawler">
            <summary>是否为是搜索引擎的网络爬虫
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsMobileDevice">
            <summary>
            是否为移动设备
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsMobileDevice(System.String)">
            <summary>
            是否为移动设备
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetScreenBitDepth">
            <summary>显示的颜色深度
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetScreenCharactersWidth">
            <summary>显示的近似宽度（以字符行为单位)
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetScreenCharactersHeight">
            <summary>显示的近似高度（以字符行为单位）
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetScreenPixelsWidth">
            <summary>显示的近似宽度（以像素行为单位）
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetScreenPixelsHeight">
            <summary>显示的近似高度（以像素行为单位）
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsSupportsCss">
            <summary>是否支持 CSS
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsActiveXControls">
            <summary>是否支持 ActiveX 控件
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsJavaApplets">
            <summary>是否支持 JavaApplets
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsJavaScript">
            <summary>是否支持javascript
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetJScriptVersion">
            <summary>获取javascript版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsVBScript">
            <summary>是否支持VBScript脚本
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsCookies">
            <summary>是否支持Cookie
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetMSDomVersion">
            <summary>支持的 MSHTML 的 DOM 版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetW3CDomVersion">
            <summary>支持的 W3C 的 DOM 版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsSupportsXmlHttp">
            <summary>是否支持通过 HTTP 接收 XML
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsFrames">
            <summary>是否支持框架
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetMaximumHrefLength">
            <summary>超链接 a 属性 href 值的最大长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsTables">
            <summary>是否支持表格
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetMobileDeviceManufacturer">
            <summary>返回移动设备制造商的名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsCanInitiateVoiceCall">
            <summary>该浏览器设备是否能够启动语音呼叫
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsCanSendMail">
            <summary>判断浏览器是否支持Html中mailto发送电子邮件
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsCDF">
            <summary>判断浏览器是否支持Web广播的频道定义格式
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetEcmaScriptVersion">
            <summary>获取浏览器EcmaScriptVersion支持的版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetInputType">
            <summary>返回浏览器支持可输入的类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsAlikeBrowser(System.String)">
            <summary>判断当前浏览器是否与指定的浏览器相同
            </summary>
            <param name="BrowserName">指定进行对比的浏览器</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetNumberOfSoftkeys">
            <summary>返回移动设备上软键的数目
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetPreferredRequestEncoding">
            <summary> 获取浏览器请求的首选编码
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetPreferredResponseEncoding">
            <summary>获取浏览器响应的首选编码
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsSupportsCallback">
            <summary>浏览器是否支持回调脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetBrowserType">
            <summary>获取浏览器的名称+主（整数）版本号
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsSearchEnginesGet(System.String)">
            <summary>
            判断是否为搜索引擎
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.IsSearchEnginesGet">
            <summary>
            判断是否为搜索引擎
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.GetIP">
            <summary> 获得当前页面客户端的IP </summary>
            <returns>当前页面客户端的IP</returns>
        </member>
        <member name="M:DotNet.Utilities.ClientHelper.ToString">
            <summary>
            将所以客户端收集的信息输出来
            </summary>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.Uploader">
            <summary>上传文件,针对图片文件加水印(图片水印)<para/>
            原始图(不作任何操作，不水印，不放缩)，返回文件名：2008090201o.jpg<para/>
            大图(终页放大)，返回文件名：2008090201b.jpg<para/>
            中图(终页图)，返回文件名：2008090201m.jpg<para/>
            小图(微型图)，返回文件名：2008090201s.jpg<para/>
            第五size(推荐页图)，返回文件名：2008090201h.jpg<para/>
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.IsEnabled">
            <summary>是否允许上传文件</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.IsChkSrcPost">
            <summary>是否检查提交来源</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.CutType">
            <summary>图片：0=按比例生成宽高，1=固定图片宽高，2=固定背景宽高，图片按比例生成</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader._errMsg">
            <summary>出错信息</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.AllowedExt">
            <summary>充许上传的文件类型,不要随意增加内容!(注:一定要使用,分隔)</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader._DeniedExt">
            <summary>禁止上传的文件类型,不要随意删减内容!(注:一定要使用,分隔)</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader._maxSize">
            <summary>充许上传的文件大小(单位:KB)，默认:500KB </summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.FilePostName">
            <summary>form file控件的名称</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader._savePath">
            <summary>保存路径</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader._isFixPic">
            <summary>是否限制上传的图片大小(列表图)，默认：flase</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader._isBigPic">
            <summary>生成大图()，默认：flase</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader._isMidPic">
            <summary>生成中型(终页显示)，默认：flase</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader._isMinPic">
            <summary>生成微型(推荐显示)，默认：flase</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader._isHotPic">
            <summary>生成微型(首页显示)，默认：flase</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.IsWaterPic">
            <summary>生成图片水印</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.WaterPicPath">
            <summary>图片水印的Logo地址:使用相对根目录的方式("/images/Water.png")</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.FileExt">
            <summary>上传图片的扩展名（全部会转为小写）</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.SrcName">
            <summary>上传图片的原始文件名称（包含扩展名） </summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.SrcWidth">
            <summary>图片文件的原始宽</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.SrcHeight">
            <summary>图片文件的原始高</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.NewWidth">
            <summary>上传后，生图片的宽（列表的宽）</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.NewHeight">
            <summary>上传后，生图片的高（列表的高）</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.NewFile">
            <summary>上传后,随机生成的新文件名:"120514064733805.jpg"</summary>
        </member>
        <member name="F:DotNet.Utilities.Uploader.NewPath">
            <summary>上传后,新文件路径（包括文件名和扩展名）"/upload/n/0908/120514064733805.jpg"</summary>
        </member>
        <member name="P:DotNet.Utilities.Uploader.DeniedExt">
            <summary>取得DeniedExt</summary>
        </member>
        <member name="P:DotNet.Utilities.Uploader.SavePath">
            <summary>上传文件的保存路径</summary>
        </member>
        <member name="P:DotNet.Utilities.Uploader.MaxSize">
            <summary>充许上传的文件大小(单位:KB)<para/>
            默认值:500, 范围:( 1＜value＜512000 ),512000=500Mb
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Uploader.SetPic(System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>大型图(原始图)，设置参数</summary>
             <param name="isFix">ture=生成，false=不处理</param>
             <param name="ww">最大宽度, 默认:700</param>
             <param name="hh">最大高度, 默认:1500</param>
             <param name="qty">质量:50-100 or 0（大于0，为控制质量）</param>
             <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Uploader.SetBig(System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>大型图(原始图)，设置参数</summary>
             <param name="isFix">ture=生成，false=不处理</param>
             <param name="ww">最大宽度</param>
             <param name="hh">最大高度</param>
             <param name="qty">质量:50-100 or 0（大于0，为控制质量）</param>
             <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Uploader.SetMid(System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>中型图，设置参数</summary>
             <param name="isFix">ture=生成，false=不处理</param>
             <param name="ww">最大宽度, 默认:320</param>
             <param name="hh">最大高度, 默认:320</param>
             <param name="qty">质量:50-100 or 0（大于0，为控制质量）</param>
             <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Uploader.SetMin(System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>微型图，设置参数</summary>
             <param name="isFix">ture=生成，false=不处理</param>
             <param name="ww">最大宽度, 默认:50</param>
             <param name="hh">最大高度, 默认:50</param>
             <param name="qty">质量:50-100 or 0（大于0，为控制质量）</param>
             <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Uploader.SetHot(System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>微型图，设置参数</summary>
             <param name="isFix">ture=生成，false=不处理</param>
             <param name="ww">最大宽度, 默认:50</param>
             <param name="hh">最大高度, 默认:50</param>
             <param name="qty">质量:50-100 or 0（大于0，为控制质量）</param>
             <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Uploader.GetFileSize">
            <summary>上传后,取得新文件大小（单位KB）</summary>
        </member>
        <member name="M:DotNet.Utilities.Uploader.GetErrMsg">
            <summary>上传失败后,取得出错信息</summary>
        </member>
        <member name="M:DotNet.Utilities.Uploader.#ctor">
            <summary>构造函数</summary>
        </member>
        <member name="M:DotNet.Utilities.Uploader.UploadFile(System.Web.HttpPostedFile)">
            <summary>上传文件，并按设置生成缩略图，水印</summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Uploader.SendResponse(System.Int32,System.String)">
            <summary>向页面输出js提示</summary>
            <param name="errorNumber"></param>
            <param name="customMsg"></param>
        </member>
        <member name="M:DotNet.Utilities.Uploader.checkAllowedExt(System.String)">
            <summary>检查是否充许该文件类型上传</summary>
            <param name="sFileExt"></param>
        </member>
        <member name="M:DotNet.Utilities.Uploader.MakeThumbImage(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>生成缩略图</summary>
            <param name="srcFile">原图片路径(服务器路径d:\web\upload\100.jpg)</param>
            <param name="decFile">缩略图路径(服务器路径d:\web\upload\100.jpg)</param>
            <param name="iMaxWidth">限制的宽度</param>
            <param name="iMaxHeight">限制的高度</param>
            <param name="highQuality">如果大于0，使用质量控制(50-100)</param>   
            <param name="CutType">0=按比例生成宽高，1=固定图片宽高，2=固定背景宽高，图片按比例生成</param>
        </member>
        <member name="M:DotNet.Utilities.Uploader.MakeWaterPic(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>在图片上生成图片水印</summary>        
            <param name="srcFile">要添加水印的图片</param>  
            <param name="top">上边距 为0时下边距生效</param>
            <param name="bottom">下边距 上边距为0时生效</param>
            <param name="left">左边距 为0时右边距生效</param>
            <param name="right">右边距 左边距为0时生效</param>
            <param name="limitWidth">原图小于该宽度,将不添加水印</param>
            <param name="HighQuality">如果大于0，使用质量控制(50-100)</param>
            <param name="_WaterPicPath">水印图片所在地址,默认:"/images/Water.png"</param>
        </member>
        <member name="M:DotNet.Utilities.Uploader.Get_Pic_WW_HH(System.String,System.Int32@,System.Int32@)">
            <summary>取得图片文件的宽高</summary>
            <param name="srcFile"></param>
            <param name="ww">取得图片的宽度</param>
            <param name="hh">取得图片的高度</param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.EnumFormula">
            <summary>
            EnumFormula
            </summary>
        </member>
        <member name="T:DotNet.Utilities.FormulaDeal">
            <summary>
            FormulaDeal
            </summary>
        </member>
        <member name="T:DotNet.Utilities.FTPClient">
            <summary>
            FTP 操作类客户端
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.#ctor">
            <summary>
            缺省构造函数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.#ctor(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:DotNet.Utilities.FTPClient.strMsg">
            <summary>
            服务器返回的应答信息(包含应答码)
            </summary>
        </member>
        <member name="F:DotNet.Utilities.FTPClient.strReply">
            <summary>
            服务器返回的应答信息(包含应答码)
            </summary>
        </member>
        <member name="F:DotNet.Utilities.FTPClient.iReplyCode">
            <summary>
            服务器返回的应答码
            </summary>
        </member>
        <member name="F:DotNet.Utilities.FTPClient.socketControl">
            <summary>
            进行控制连接的socket
            </summary>
        </member>
        <member name="F:DotNet.Utilities.FTPClient.trType">
            <summary>
            传输模式
            </summary>
        </member>
        <member name="F:DotNet.Utilities.FTPClient.BLOCK_SIZE">
            <summary>
            接收和发送数据的缓冲区
            </summary>
        </member>
        <member name="F:DotNet.Utilities.FTPClient.ASCII">
            <summary>
            编码方式
            </summary>
        </member>
        <member name="F:DotNet.Utilities.FTPClient.buffer">
            <summary>
            字节数组
            </summary>
        </member>
        <member name="P:DotNet.Utilities.FTPClient.RemoteHost">
            <summary>
            FTP服务器IP地址
            </summary>
        </member>
        <member name="P:DotNet.Utilities.FTPClient.RemotePort">
            <summary>
            FTP服务器端口
            </summary>
        </member>
        <member name="P:DotNet.Utilities.FTPClient.RemotePath">
            <summary>
            当前服务器目录
            </summary>
        </member>
        <member name="P:DotNet.Utilities.FTPClient.RemoteUser">
            <summary>
            登录用户账号
            </summary>
        </member>
        <member name="P:DotNet.Utilities.FTPClient.RemotePass">
            <summary>
            用户登录密码
            </summary>
        </member>
        <member name="P:DotNet.Utilities.FTPClient.Connected">
            <summary>
            是否登录
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.Connect">
            <summary>
            建立连接 
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.DisConnect">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="T:DotNet.Utilities.FTPClient.TransferType">
            <summary>
            传输模式:二进制类型、ASCII类型
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.SetTransferType(DotNet.Utilities.FTPClient.TransferType)">
            <summary>
            设置传输模式
            </summary>
            <param name="ttType">传输模式</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.GetTransferType">
            <summary>
            获得传输模式
            </summary>
            <returns>传输模式</returns>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.Dir(System.String)">
            <summary>
            获得文件列表
            </summary>
            <param name="strMask">文件名的匹配字符串</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.GetFileSize(System.String)">
            <summary>
            获取文件大小
            </summary>
            <param name="strFileName">文件名</param>
            <returns>文件大小</returns>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.GetFileInfo(System.String)">
            <summary>
            获取文件信息
            </summary>
            <param name="strFileName">文件名</param>
            <returns>文件大小</returns>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.Delete(System.String)">
            <summary>
            删除
            </summary>
            <param name="strFileName">待删除文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.Rename(System.String,System.String)">
            <summary>
            重命名(如果新文件名与已有文件重名,将覆盖已有文件)
            </summary>
            <param name="strOldFileName">旧文件名</param>
            <param name="strNewFileName">新文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.Get(System.String,System.String)">
            <summary>
            下载一批文件
            </summary>
            <param name="strFileNameMask">文件名的匹配字符串</param>
            <param name="strFolder">本地目录(不得以\结束)</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.Get(System.String,System.String,System.String)">
            <summary>
            下载一个文件
            </summary>
            <param name="strRemoteFileName">要下载的文件名</param>
            <param name="strFolder">本地目录(不得以\结束)</param>
            <param name="strLocalFileName">保存在本地时的文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.GetNoBinary(System.String,System.String,System.String)">
            <summary>
            下载一个文件
            </summary>
            <param name="strRemoteFileName">要下载的文件名</param>
            <param name="strFolder">本地目录(不得以\结束)</param>
            <param name="strLocalFileName">保存在本地时的文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.Put(System.String,System.String)">
            <summary>
            上传一批文件
            </summary>
            <param name="strFolder">本地目录(不得以\结束)</param>
            <param name="strFileNameMask">文件名匹配字符(可以包含*和?)</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.Put(System.String)">
            <summary>
            上传一个文件
            </summary>
            <param name="strFileName">本地文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.PutByGuid(System.String,System.String)">
            <summary>
            上传一个文件
            </summary>
            <param name="strFileName">本地文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.MkDir(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="strDirName">目录名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.RmDir(System.String)">
            <summary>
            删除目录
            </summary>
            <param name="strDirName">目录名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.ChDir(System.String)">
            <summary>
            改变目录
            </summary>
            <param name="strDirName">新的工作目录名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.ReadReply">
            <summary>
            将一行应答字符串记录在strReply和strMsg,应答码记录在iReplyCode
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.CreateDataSocket">
            <summary>
            建立进行数据连接的socket
            </summary>
            <returns>数据连接socket</returns>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.CloseSocketConnect">
            <summary>
            关闭socket连接(用于登录以前)
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.ReadLine">
            <summary>
            读取Socket返回的所有字符串
            </summary>
            <returns>包含应答码的字符串行</returns>
        </member>
        <member name="M:DotNet.Utilities.FTPClient.SendCommand(System.String)">
            <summary>
            发送命令并获取应答码和最后一行应答字符串
            </summary>
            <param name="strCommand">命令</param>
        </member>
        <member name="T:DotNet.Utilities.FTPHelper">
            <summary>
            FTP帮助类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.#ctor(System.String,System.String,System.String,System.String)">
            <summary>  
            连接FTP服务器
            </summary>  
            <param name="FtpServerIP">FTP连接地址</param>  
            <param name="FtpRemotePath">指定FTP连接成功后的当前目录, 如果不指定即默认为根目录</param>  
            <param name="FtpUserID">用户名</param>  
            <param name="FtpPassword">密码</param>  
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.Upload(System.String)">
            <summary>  
            上传  
            </summary>   
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.Download(System.String,System.String)">
            <summary>  
            下载  
            </summary>   
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.Delete(System.String)">
            <summary>  
            删除文件  
            </summary>  
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.GetFilesDetailList">
            <summary>  
            获取当前目录下明细(包含文件和文件夹)  
            </summary>  
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.GetAllList(System.String)">
            <summary>  
            获取FTP文件列表(包括文件夹)
            </summary>   
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.GetFileList(System.String)">
            <summary>  
            获取当前目录下文件列表(不包括文件夹)  
            </summary>  
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.FileExist(System.String)">
            <summary>  
            判断当前目录下指定的文件是否存在  
            </summary>  
            <param name="RemoteFileName">远程文件名</param>  
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.MakeDir(System.String)">
            <summary>  
            创建文件夹  
            </summary>   
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.GetFileSize(System.String)">
            <summary>  
            获取指定文件大小  
            </summary>  
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.ReName(System.String,System.String)">
            <summary>  
            更改文件名  
            </summary> 
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.MovieFile(System.String,System.String)">
            <summary>  
            移动文件  
            </summary>  
        </member>
        <member name="M:DotNet.Utilities.FTPHelper.GotoDirectory(System.String,System.Boolean)">
            <summary>  
            切换当前目录  
            </summary>  
            <param name="IsRoot">true:绝对路径 false:相对路径</param>   
        </member>
        <member name="T:DotNet.Utilities.FTPOperater">
            <summary>
            FTP操作类
            </summary>
        </member>
        <member name="P:DotNet.Utilities.FTPOperater.Ftp">
            <summary>
            全局FTP访问变量
            </summary>
        </member>
        <member name="P:DotNet.Utilities.FTPOperater.Server">
            <summary>
            Ftp服务器
            </summary>
        </member>
        <member name="P:DotNet.Utilities.FTPOperater.User">
            <summary>
            Ftp用户
            </summary>
        </member>
        <member name="P:DotNet.Utilities.FTPOperater.Pass">
            <summary>
            Ftp密码
            </summary>
        </member>
        <member name="P:DotNet.Utilities.FTPOperater.FolderZJ">
            <summary>
            Ftp密码
            </summary>
        </member>
        <member name="P:DotNet.Utilities.FTPOperater.FolderWX">
            <summary>
            Ftp密码
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FTPOperater.GetList(System.String)">
            <summary>
            得到文件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.FTPOperater.GetFile(System.String,System.String,System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="ftpFolder">ftp目录</param>
            <param name="ftpFileName">ftp文件名</param>
            <param name="localFolder">本地目录</param>
            <param name="localFileName">本地文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPOperater.AddMSCFile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            修改文件
            </summary>
            <param name="ftpFolder">本地目录</param>
            <param name="ftpFileName">本地文件名temp</param>
            <param name="localFolder">本地目录</param>
            <param name="localFileName">本地文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPOperater.DelFile(System.String,System.String)">
            <summary>
            删除文件
            </summary>
            <param name="ftpFolder">ftp目录</param>
            <param name="ftpFileName">ftp文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPOperater.PutFile(System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="ftpFolder">ftp目录</param>
            <param name="ftpFileName">ftp文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPOperater.GetFileNoBinary(System.String,System.String,System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="ftpFolder">ftp目录</param>
            <param name="ftpFileName">ftp文件名</param>
            <param name="localFolder">本地目录</param>
            <param name="localFileName">本地文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPOperater.GetFileInfo(System.String,System.String)">
            <summary>
            得到FTP上文件信息
            </summary>
            <param name="ftpFolder">FTP目录</param>
            <param name="ftpFileName">ftp文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPOperater.CanConnect">
            <summary>
            测试FTP服务器是否可登陆
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FTPOperater.GetFileInfoConnected(System.String,System.String)">
            <summary>
            得到FTP上文件信息
            </summary>
            <param name="ftpFolder">FTP目录</param>
            <param name="ftpFileName">ftp文件名</param>
        </member>
        <member name="M:DotNet.Utilities.FTPOperater.GetFileList(System.String,System.String)">
            <summary>
            得到文件列表
            </summary>
            <param name="ftpFolder">FTP目录</param>
            <returns>FTP通配符号</returns>
        </member>
        <member name="M:DotNet.Utilities.FTPOperater.getFtpClient">
             <summary>
            得到FTP传输对象
             </summary>
        </member>
        <member name="M:DotNet.Utilities.GridViewHelper.GetStrPartly(System.String,System.Int32)">
            <summary>
            截取内容长度
            </summary>
            <param name="o_Str">原字符串</param>
            <param name="len">截取长度</param>
            <returns>截取后字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.GridViewHelper.GetCellText(System.Web.UI.WebControls.TableCell)">
            <summary>
            获取单元格内容
            </summary>
            <param name="cell">TableCell</param>
            <returns>内容</returns>
        </member>
        <member name="M:DotNet.Utilities.GridViewHelper.SetCellText(System.Web.UI.WebControls.TableCell,System.Int32)">
            <summary>
            设置单元格内容
            </summary>
            <param name="cell">TableCell</param>
            <param name="maxLen">最大长度</param>
        </member>
        <member name="M:DotNet.Utilities.GridViewHelper.GridView2DataTable(System.Web.UI.WebControls.GridView)">
            <summary>
            从GridView的数据生成DataTable
            </summary>
            <param name="gv">GridView对象</param>
        </member>
        <member name="M:DotNet.Utilities.GridViewHelper.ToDataTable(System.Collections.IList)">
            <summary>
            将集合类转换成DataTable
            </summary>
            <param name="list">集合</param>
        </member>
        <member name="M:DotNet.Utilities.GridViewHelper.ToDataTable``1(System.Collections.Generic.IList{``0},System.String[])">
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <param name="propertyName">需要返回的列的列名</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="M:DotNet.Utilities.GridViewHelper.GetSelectedKey(FineUI.Grid,System.Boolean)">
            <summary>获取grid选中的行中的key</summary>
            <param name="grid">Grid控件</param>
            <param name="isMemoryPaging">true＝内存分页，false=数据分页</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.GridViewHelper.GetSelectedKeyAll(FineUI.Grid,System.Boolean)">
            <summary>获取grid选中的行中的key(单选项，表格中主键绑定多个字段)</summary>
            <param name="grid">Grid控件</param>
            <param name="isMemoryPaging">true＝内存分页，false=数据分页</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.GridViewHelper.GetSelectedKeyArray(FineUI.Grid,System.Boolean)">
            <summary>获取grid选中的行中的key</summary>
            <param name="grid">Grid控件</param>
            <param name="isMemoryPaging">true＝内存分页，false=数据库分页</param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.HttpCookieHelper">
            <summary>
            Cookie操作帮助类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.HttpCookieHelper.GetCookieList(System.String)">
            <summary>
            根据字符生成Cookie列表
            </summary>
            <param name="cookie">Cookie字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.HttpCookieHelper.GetCookieValue(System.String,System.String)">
            <summary>
            根据Key值得到Cookie值,Key不区分大小写
            </summary>
            <param name="Key">key</param>
            <param name="cookie">字符串Cookie</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.HttpCookieHelper.CookieFormat(System.String,System.String)">
            <summary>
            格式化Cookie为标准格式
            </summary>
            <param name="key">Key值</param>
            <param name="value">Value值</param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.CookieItem">
            <summary>
            Cookie对象
            </summary>
        </member>
        <member name="P:DotNet.Utilities.CookieItem.Key">
            <summary>
            键
            </summary>
        </member>
        <member name="P:DotNet.Utilities.CookieItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:DotNet.Utilities.HttpHelper">
            <summary>
            Http连接操作帮助类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.HttpHelper.GetHtml(DotNet.Utilities.HttpItem)">
            <summary>
            根据相传入的数据，得到相应页面数据
            </summary>
            <param name="item">参数类对象</param>
            <returns>返回HttpResult类型</returns>
        </member>
        <member name="M:DotNet.Utilities.HttpHelper.GetMemoryStream(System.IO.Stream)">
            <summary>
            4.0以下.net版本取数据使用
            </summary>
            <param name="streamResponse">流</param>
        </member>
        <member name="M:DotNet.Utilities.HttpHelper.SetRequest(DotNet.Utilities.HttpItem)">
             <summary>
             为请求准备参数
             </summary>
            <param name="item">参数列表</param>
        </member>
        <member name="M:DotNet.Utilities.HttpHelper.SetCer(DotNet.Utilities.HttpItem)">
            <summary>
            设置证书
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:DotNet.Utilities.HttpHelper.SetCerList(DotNet.Utilities.HttpItem)">
            <summary>
            设置多个证书
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:DotNet.Utilities.HttpHelper.SetCookie(DotNet.Utilities.HttpItem)">
            <summary>
            设置Cookie
            </summary>
            <param name="item">Http参数</param>
        </member>
        <member name="M:DotNet.Utilities.HttpHelper.SetPostData(DotNet.Utilities.HttpItem)">
            <summary>
            设置Post数据
            </summary>
            <param name="item">Http参数</param>
        </member>
        <member name="M:DotNet.Utilities.HttpHelper.SetProxy(DotNet.Utilities.HttpItem)">
            <summary>
            设置代理
            </summary>
            <param name="item">参数对象</param>
        </member>
        <member name="M:DotNet.Utilities.HttpHelper.CheckValidationResult(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            回调验证证书问题
            </summary>
            <param name="sender">流对象</param>
            <param name="certificate">证书</param>
            <param name="chain">X509Chain</param>
            <param name="errors">SslPolicyErrors</param>
            <returns>bool</returns>
        </member>
        <member name="T:DotNet.Utilities.HttpItem">
            <summary>
            Http请求参考类
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.URL">
            <summary>
            请求URL必须填写
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.Method">
            <summary>
            请求方式默认为GET方式,当为POST方式时必须设置Postdata的值
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.Timeout">
            <summary>
            默认请求超时时间
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.ReadWriteTimeout">
            <summary>
            默认写入Post数据超时间
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.KeepAlive">
            <summary>
             获取或设置一个值，该值指示是否与 Internet 资源建立持久性连接默认为true。
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.Accept">
            <summary>
            请求标头值 默认为text/html, application/xhtml+xml, */*
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.ContentType">
            <summary>
            请求返回类型默认 text/html
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.UserAgent">
            <summary>
            客户端访问信息默认Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.Encoding">
            <summary>
            返回数据编码默认为NUll,可以自动识别,一般为utf-8,gbk,gb2312
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.PostDataType">
            <summary>
            Post的数据类型
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.Postdata">
            <summary>
            Post请求时要发送的字符串Post数据
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.PostdataByte">
            <summary>
            Post请求时要发送的Byte类型的Post数据
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.CookieCollection">
            <summary>
            Cookie对象集合
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.Cookie">
            <summary>
            请求时的Cookie
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.Referer">
            <summary>
            来源地址，上次访问地址
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.CerPath">
            <summary>
            证书绝对路径
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.IsToLower">
            <summary>
            是否设置为全文小写，默认为不转化
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.Allowautoredirect">
            <summary>
            支持跳转页面，查询结果将是跳转后的页面，默认是不跳转
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.Connectionlimit">
            <summary>
            最大连接数
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.ProxyUserName">
            <summary>
            代理Proxy 服务器用户名
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.ProxyPwd">
            <summary>
            代理 服务器密码
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.ProxyIp">
            <summary>
            代理 服务IP
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.ResultType">
            <summary>
            设置返回类型String和Byte
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.Header">
            <summary>
            header对象
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DotNet.Utilities.HttpItem.ProtocolVersion" -->
        <member name="P:DotNet.Utilities.HttpItem.Expect100Continue">
            <summary>
             获取或设置一个 System.Boolean 值，该值确定是否使用 100-Continue 行为。如果 POST 请求需要 100-Continue 响应，则为 true；否则为 false。默认值为 true。
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.ClentCertificates">
            <summary>
            设置509证书集合
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpItem.PostEncoding">
            <summary>
            设置或获取Post参数编码,默认的为Default编码
            </summary>
        </member>
        <member name="T:DotNet.Utilities.HttpResult">
            <summary>
            Http返回参数类
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpResult.Cookie">
            <summary>
            Http请求返回的Cookie
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpResult.CookieCollection">
            <summary>
            Cookie对象集合
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpResult.Html">
            <summary>
            返回的String类型数据 只有ResultType.String时才返回数据，其它情况为空
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpResult.ResultByte">
            <summary>
            返回的Byte数组 只有ResultType.Byte时才返回数据，其它情况为空
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpResult.Header">
            <summary>
            header对象
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpResult.StatusDescription">
            <summary>
            返回状态说明
            </summary>
        </member>
        <member name="P:DotNet.Utilities.HttpResult.StatusCode">
            <summary>
            返回状态码,默认为OK
            </summary>
        </member>
        <member name="T:DotNet.Utilities.ResultType">
            <summary>
            返回类型
            </summary>
        </member>
        <member name="F:DotNet.Utilities.ResultType.String">
            <summary>
            表示只返回字符串 只有Html有数据
            </summary>
        </member>
        <member name="F:DotNet.Utilities.ResultType.Byte">
            <summary>
            表示返回字符串和字节流 ResultByte和Html都有数据返回
            </summary>
        </member>
        <member name="T:DotNet.Utilities.PostDataType">
            <summary>
            Post的数据格式默认为string
            </summary>
        </member>
        <member name="F:DotNet.Utilities.PostDataType.String">
            <summary>
            字符串类型，这时编码Encoding可不设置
            </summary>
        </member>
        <member name="F:DotNet.Utilities.PostDataType.Byte">
            <summary>
            Byte类型，需要设置PostdataByte参数的值编码Encoding可设置为空
            </summary>
        </member>
        <member name="F:DotNet.Utilities.PostDataType.FilePath">
            <summary>
            传文件，Postdata必须设置为文件的绝对路径，必须设置Encoding的值
            </summary>
        </member>
        <member name="T:DotNet.Utilities.IpHelper">
            <summary>
            共用工具类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.IpHelper.GetUserIp">
            <summary>
            获得用户IP
            </summary>
        </member>
        <member name="M:DotNet.Utilities.IpHelper.IsIPAddress(System.String)">
            <summary>
            判断是否是IP地址格式 0.0.0.0
            </summary>
            <param name="str1">待判断的IP地址</param>
            <returns>true or false</returns>
        </member>
        <member name="M:DotNet.Utilities.ConvertJson.String2Json(System.String)">
            <summary>
            过滤特殊字符
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ConvertJson.StringFormat(System.String,System.Type)">
            <summary>
            格式化字符型、日期型、布尔型
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ConvertJson.ListToJson``1(System.Collections.Generic.IList{``0})">
            <summary>
            List转换成Json
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ConvertJson.ListToJson``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            List转换成Json 
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ConvertJson.ToJson(System.Object)">
            <summary> 
            对象转换为Json 
            </summary> 
            <param name="jsonObject">对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:DotNet.Utilities.ConvertJson.ToJson(System.Collections.IEnumerable)">
            <summary> 
            对象集合转换Json 
            </summary> 
            <param name="array">集合对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:DotNet.Utilities.ConvertJson.ToArrayString(System.Collections.IEnumerable)">
            <summary> 
            普通集合转换Json 
            </summary> 
            <param name="array">集合对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:DotNet.Utilities.ConvertJson.ToJson(System.Data.DataSet)">
            <summary> 
            DataSet转换为Json 
            </summary> 
            <param name="dataSet">DataSet对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:DotNet.Utilities.ConvertJson.ToJson(System.Data.DataTable)">
            <summary> 
            Datatable转换为Json 
            </summary> 
            <param name="table">Datatable对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:DotNet.Utilities.ConvertJson.ToJson(System.Data.DataTable,System.String)">
            <summary>
            DataTable转换为Json 
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ConvertJson.ToJson(System.Data.Common.DbDataReader)">
            <summary> 
            DataReader转换为Json 
            </summary> 
            <param name="dataReader">DataReader对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="T:DotNet.Utilities.JsHelper">
            <summary>
            客户端脚本输出
            </summary>
        </member>
        <member name="M:DotNet.Utilities.JsHelper.AlertAndRedirect(System.String,System.String)">
            <summary>
            弹出信息,并跳转指定页面。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.JsHelper.AlertAndGoHistory(System.String,System.Int32)">
            <summary>
            弹出信息,并返回历史页面
            </summary>
        </member>
        <member name="M:DotNet.Utilities.JsHelper.Redirect(System.String)">
            <summary>
            直接跳转到指定的页面
            </summary>
        </member>
        <member name="M:DotNet.Utilities.JsHelper.AlertAndParentUrl(System.String,System.String)">
            <summary>
            弹出信息 并指定到父窗口
            </summary>
        </member>
        <member name="M:DotNet.Utilities.JsHelper.ParentRedirect(System.String)">
            <summary>
            返回到父窗口
            </summary>
        </member>
        <member name="M:DotNet.Utilities.JsHelper.BackHistory(System.Int32)">
            <summary>
            返回历史页面
            </summary>
        </member>
        <member name="M:DotNet.Utilities.JsHelper.Alert(System.String)">
            <summary>
            弹出信息
            </summary>
        </member>
        <member name="M:DotNet.Utilities.JsHelper.RegisterScriptBlock(System.Web.UI.Page,System.String)">
            <summary>
            注册脚本块
            </summary>
        </member>
        <member name="T:DotNet.Utilities.MediaHandler">
            <summary>
            处理多媒体的公共类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.MediaHandler.SyncPlayWAV(System.Media.SoundPlayer,System.String)">
            <summary>
            以同步方式播放wav文件
            </summary>
            <param name="sp">SoundPlayer对象</param>
            <param name="wavFilePath">wav文件的路径</param>
        </member>
        <member name="M:DotNet.Utilities.MediaHandler.SyncPlayWAV(System.String)">
            <summary>
            以同步方式播放wav文件
            </summary>
            <param name="wavFilePath">wav文件的路径</param>
        </member>
        <member name="M:DotNet.Utilities.MediaHandler.ASyncPlayWAV(System.Media.SoundPlayer,System.String)">
            <summary>
            以异步方式播放wav文件
            </summary>
            <param name="sp">SoundPlayer对象</param>
            <param name="wavFilePath">wav文件的路径</param>
        </member>
        <member name="M:DotNet.Utilities.MediaHandler.ASyncPlayWAV(System.String)">
            <summary>
            以异步方式播放wav文件
            </summary>
            <param name="wavFilePath">wav文件的路径</param>
        </member>
        <member name="M:DotNet.Utilities.MediaHandler.StopWAV(System.Media.SoundPlayer)">
            <summary>
            
            </summary>
            <param name="sp">SoundPlayer对象</param>
        </member>
        <member name="T:DotNet.Utilities.MediaTypes">
            <summary>
            电子邮件类型类
            </summary>
        </member>
        <member name="T:DotNet.Utilities.MimeEntity">
            <summary>
            This class represents a Mime entity.
            这个类表示一个MIME实体
            </summary>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.EncodedMessage">
            <summary>
            Gets the encoded message.
            获取编码的消息。
            </summary>
            <value>
            编码的消息
            The encoded message.
            </value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.Children">
            <summary>
            Gets the children.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.ContentType">
            <summary>
            Gets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.MediaSubType">
            <summary>
            Gets the type of the media sub.
            </summary>
            <value>The type of the media sub.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.MediaMainType">
            <summary>
            Gets the type of the media main.
            </summary>
            <value>The type of the media main.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.Headers">
            <summary>
            Gets the headers.
            </summary>
            <value>The headers.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.MimeVersion">
            <summary>
            Gets or sets the MIME version.
            </summary>
            <value>The MIME version.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.ContentId">
            <summary>
            Gets or sets the content id.
            </summary>
            <value>The content id.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.ContentDescription">
            <summary>
            Gets or sets the content description.
            </summary>
            <value>The content description.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.ContentDisposition">
            <summary>
            Gets or sets the content disposition.
            </summary>
            <value>The content disposition.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.TransferEncoding">
            <summary>
            Gets or sets the transfer encoding.
            </summary>
            <value>The transfer encoding.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.ContentTransferEncoding">
            <summary>
            Gets or sets the content transfer encoding.
            </summary>
            <value>The content transfer encoding.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.HasBoundary">
            <summary>
            Gets a value indicating whether this instance has boundary.
            </summary>
            <value>
            	<c>true</c> if this instance has boundary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.StartBoundary">
            <summary>
            Gets the start boundary.
            </summary>
            <value>The start boundary.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.EndBoundary">
            <summary>
            Gets the end boundary.
            </summary>
            <value>The end boundary.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:DotNet.Utilities.MimeEntity.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.MimeEntity"/> class.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.#ctor(DotNet.Utilities.MimeEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.MimeEntity"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.SetContentType(System.Net.Mime.ContentType)">
            <summary>
            Sets the type of the content.
            </summary>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.ToMailMessageEx">
            <summary>
            Toes the mail message ex.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.ToMailMessageEx(DotNet.Utilities.MimeEntity)">
            <summary>
            Toes the mail message ex.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.BuildSinglePartMessage(DotNet.Utilities.MimeEntity,DotNet.Utilities.MailMessageEx)">
            <summary>
            Builds the single part message.
            </summary>
            <param name="entity">The entity.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.GetEncoding">
            <summary>
            Gets the body encoding.
            </summary>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.BuildMultiPartMessage(DotNet.Utilities.MimeEntity,DotNet.Utilities.MailMessageEx)">
            <summary>
            Builds the multi part message.
            </summary>
            <param name="entity">The entity.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.SetMessageBody(DotNet.Utilities.MailMessageEx,DotNet.Utilities.MimeEntity)">
            <summary>
            Sets the message body.
            </summary>
            <param name="message">The message.</param>
            <param name="child">The child.</param>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.DecodeBytes(System.Byte[],System.Text.Encoding)">
            <summary>
            Decodes the bytes.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.CreateAlternateView(DotNet.Utilities.MimeEntity)">
            <summary>
            Creates the alternate view.
            </summary>
            <param name="view">The view.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.TrimBrackets(System.String)">
            <summary>
            Trims the brackets.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MimeEntity.CreateAttachment(DotNet.Utilities.MimeEntity)">
            <summary>
            Creates the attachment.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.MimeReader">
            <summary>
            This class is responsible for parsing a string array of lines
            containing a MIME message.
            </summary>
        </member>
        <member name="P:DotNet.Utilities.MimeReader.Lines">
            <summary>
            Gets the lines.
            </summary>
            <value>The lines.</value>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.MimeReader"/> class.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.#ctor(DotNet.Utilities.MimeEntity,System.Collections.Generic.Queue{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.MimeReader"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="lines">The lines.</param>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.MimeReader"/> class.
            </summary>
            <param name="lines">The lines.</param>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.ParseHeaders">
            <summary>
            Parse headers into _entity.Headers NameValueCollection.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.ProcessHeaders">
            <summary>
            Processes mime specific headers.
            </summary>
            <returns>A mime entity with mime specific headers parsed.</returns>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.CreateMimeEntity">
            <summary>
            Creates the MIME entity.
            </summary>
            <returns>A mime entity containing 0 or more children representing the mime message.</returns>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.SetDecodedContentStream">
            <summary>
            Sets the decoded content stream by decoding the EncodedMessage 
            and writing it to the entity content stream.
            </summary>
            <param name="entity">The entity containing the encoded message.</param>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.GetBytes(System.String)">
            <summary>
            Gets a byte[] of content for the provided string.
            </summary>
            <param name="decodedContent">Content.</param>
            <returns>A byte[] containing content.</returns>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.ParseBody">
            <summary>
            Parses the body.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.AddChildEntity(DotNet.Utilities.MimeEntity,System.Collections.Generic.Queue{System.String})">
            <summary>
            Adds the child entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.GetContentType(System.String)">
            <summary>
            Gets the type of the content.
            </summary>
            <param name="contentType">Type of the content.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.GetMediaType(System.String)">
            <summary>
            Gets the type of the media.
            </summary>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.GetMediaMainType(System.String)">
            <summary>
            Gets the type of the media main.
            </summary>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.GetMediaSubType(System.String)">
            <summary>
            Gets the type of the media sub.
            </summary>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MimeReader.GetTransferEncoding(System.String)">
            <summary>
            Gets the transfer encoding.
            </summary>
            <param name="transferEncoding">The transfer encoding.</param>
            <returns></returns>
            <remarks>
            The transfer encoding determination follows the same rules as 
            Peter Huber's article w/ the exception of not throwing exceptions 
            when binary is provided as a transferEncoding.  Instead it is left
            to the calling code to check for binary.
            </remarks>
        </member>
        <member name="T:DotNet.Utilities.QuotedPrintableEncoding">
            <summary>
            This class is based on the QuotedPrintable class written by Bill Gearhart
            </summary>
        </member>
        <member name="T:DotNet.Utilities.ThumbnailMod">
            <summary>
            枚举,生成缩略图模式
            </summary>
        </member>
        <member name="F:DotNet.Utilities.ThumbnailMod.HW">
            <summary>
            HW
            </summary>
        </member>
        <member name="F:DotNet.Utilities.ThumbnailMod.W">
            <summary>
            W
            </summary>
        </member>
        <member name="F:DotNet.Utilities.ThumbnailMod.H">
            <summary>
            H
            </summary>
        </member>
        <member name="F:DotNet.Utilities.ThumbnailMod.Cut">
            <summary>
            Cut
            </summary>
        </member>
        <member name="T:DotNet.Utilities.PicDeal">
            <summary>
            操作图片类, 生成缩略图,添加水印
            </summary>
        </member>
        <member name="M:DotNet.Utilities.PicDeal.MakeThumbnail(System.String,System.Int32,System.Int32,DotNet.Utilities.ThumbnailMod)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PicDeal.AddWaterPic(System.String,System.String)">
            <summary>
            在图片上生成图片水印
            </summary>
            <param name="Path">原服务器图片路径</param>
            <param name="Path_sypf">水印图片路径</param>
        </member>
        <member name="M:DotNet.Utilities.PicDeal.GetImgType">
            <summary>
            公共方法
            </summary>
        </member>
        <member name="M:DotNet.Utilities.PicDeal.ResizeImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            返回新图片尺寸
            </summary>
            <param name="width">原始宽</param>
            <param name="height">原始高</param>
            <param name="maxWidth">新图片最大宽</param>
            <param name="maxHeight">新图片最大高</param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.QueryString">
            <summary>
            QueryString 地址栏参数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.QueryString.Q(System.String)">
            <summary>
            等于Request.QueryString;如果为null 返回 空“” ，否则返回Request.QueryString[name]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.QueryString.F(System.String)">
            <summary>
            等于  Request.Form  如果为null 返回 空“” ，否则返回 Request.Form[name]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.QueryString.QId(System.String)">
            <summary>
            获取url中的id
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.QueryString.StrToId(System.String)">
            <summary>
            获取正确的Id，如果不是正整数，返回0
            </summary>
            <param name="_value"></param>
            <returns>返回正确的整数ID，失败返回0</returns>
        </member>
        <member name="M:DotNet.Utilities.QueryString.IsNumberId(System.String)">
            <summary>
            检查一个字符串是否是纯数字构成的，一般用于查询字符串参数的有效性验证。
            </summary>
            <param name="_value">需验证的字符串。。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:DotNet.Utilities.QueryString.QuickValidate(System.String,System.String)">
            <summary>
            快速验证一个字符串是否符合指定的正则表达式。
            </summary>
            <param name="_express">正则表达式的内容。</param>
            <param name="_value">需验证的字符串。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="P:DotNet.Utilities.QueryString.Current">
            <summary>
            HttpContext Current
            </summary>
        </member>
        <member name="P:DotNet.Utilities.QueryString.Request">
            <summary>
            HttpContext Current  HttpRequest Request   get { return Current.Request;
            </summary>
        </member>
        <member name="P:DotNet.Utilities.QueryString.Response">
            <summary>
             HttpContext Current  HttpRequest Request   get { return Current.Request; HttpResponse Response  return Current.Response;
            </summary>
        </member>
        <member name="T:DotNet.Utilities.SqlHelper">
            <summary>
            数据库的通用访问代码 苏飞修改
            此类为抽象类，
            不允许实例化，在应用时直接调用即可
            </summary>
        </member>
        <member name="F:DotNet.Utilities.SqlHelper.connectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
             <summary>
            执行一个不需要返回值的SqlCommand命令，通过指定专用的连接字符串。
             使用参数数组形式提供参数列表 
             </summary>
             <param name="connectionString">一个有效的数据库连接字符串</param>
             <param name="cmdType">SqlCommand命令类型 (存储过程， T-SQL语句， 等等。)</param>
             <param name="cmdText">存储过程的名字或者 T-SQL 语句</param>
             <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
             <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecteNonQuery(System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
             <summary>
            执行一个不需要返回值的SqlCommand命令，通过指定专用的连接字符串。
             使用参数数组形式提供参数列表 
             </summary>
             <param name="cmdType">SqlCommand命令类型 (存储过程， T-SQL语句， 等等。)</param>
             <param name="cmdText">存储过程的名字或者 T-SQL 语句</param>
             <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
             <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecteNonQueryProducts(System.String,System.Data.SqlClient.SqlParameter[])">
             <summary>
            存储过程专用
             </summary>
             <param name="cmdText">存储过程的名字</param>
             <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
             <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecteNonQueryText(System.String,System.Data.SqlClient.SqlParameter[])">
             <summary>
            Sql语句专用
             </summary>
             <param name="cmdText">T_Sql语句</param>
             <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
             <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.GetTable(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行一条返回结果集的SqlCommand，通过一个已经存在的数据库连接
            使用参数数组提供参数
            </summary>
            <param name="connecttionString">一个现有的数据库连接</param>
            <param name="cmdTye">SqlCommand命令类型</param>
            <param name="cmdText">存储过程的名字或者 T-SQL 语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个表集合(DataTableCollection)表示查询得到的数据集</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.GetTable(System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行一条返回结果集的SqlCommand，通过一个已经存在的数据库连接
            使用参数数组提供参数
            </summary>
            <param name="cmdTye">SqlCommand命令类型</param>
            <param name="cmdText">存储过程的名字或者 T-SQL 语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个表集合(DataTableCollection)表示查询得到的数据集</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.GetTableProducts(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            存储过程专用
            </summary>
            <param name="cmdText">存储过程的名字或者 T-SQL 语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个表集合(DataTableCollection)表示查询得到的数据集</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.GetTableText(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Sql语句专用
            </summary>
            <param name="cmdText"> T-SQL 语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个表集合(DataTableCollection)表示查询得到的数据集</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            为执行命令准备参数
            </summary>
            <param name="cmd">SqlCommand 命令</param>
            <param name="conn">已经存在的数据库连接</param>
            <param name="trans">数据库事物处理</param>
            <param name="cmdType">SqlCommand命令类型 (存储过程， T-SQL语句， 等等。)</param>
            <param name="cmdText">Command text，T-SQL语句 例如 Select * from Products</param>
            <param name="cmdParms">返回带参数的命令</param>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand that returns a resultset against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="connectionString">一个有效的数据库连接字符串</param>
            <param name="cmdType">SqlCommand命令类型 (存储过程， T-SQL语句， 等等。)</param>
            <param name="cmdText">存储过程的名字或者 T-SQL 语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>A SqlDataReader containing the results</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecuteDataSet(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            return a dataset
            </summary>
            <param name="connectionString">一个有效的数据库连接字符串</param>
            <param name="cmdType">SqlCommand命令类型 (存储过程， T-SQL语句， 等等。)</param>
            <param name="cmdText">存储过程的名字或者 T-SQL 语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>return a dataset</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecuteDataSet(System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回一个DataSet
            </summary>
            <param name="cmdType">SqlCommand命令类型 (存储过程， T-SQL语句， 等等。)</param>
            <param name="cmdText">存储过程的名字或者 T-SQL 语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>return a dataset</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecuteDataSetProducts(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回一个DataSet
            </summary>
            <param name="cmdText">存储过程的名字</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>return a dataset</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecuteDataSetText(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回一个DataSet
            </summary>
            <param name="cmdText">T-SQL 语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>return a dataset</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecuteScalar(System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回第一行的第一列
            </summary>
            <param name="cmdType">SqlCommand命令类型 (存储过程， T-SQL语句， 等等。)</param>
            <param name="cmdText">存储过程的名字或者 T-SQL 语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个对象</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecuteScalarProducts(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回第一行的第一列存储过程专用
            </summary>
            <param name="cmdText">存储过程的名字</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个对象</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecuteScalarText(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回第一行的第一列Sql语句专用
            </summary>
            <param name="cmdText">者 T-SQL 语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个对象</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand that returns the first column of the first record against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             Object obj = ExecuteScalar(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">一个有效的数据库连接字符串</param>
            <param name="cmdType">SqlCommand命令类型 (存储过程， T-SQL语句， 等等。)</param>
            <param name="cmdText">存储过程的名字或者 T-SQL 语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand that returns the first column of the first record against an existing database connection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             Object obj = ExecuteScalar(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">一个有效的数据库连接字符串</param>
            <param name="cmdType">SqlCommand命令类型 (存储过程， T-SQL语句， 等等。)</param>
            <param name="cmdText">存储过程的名字或者 T-SQL 语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.CacheParameters(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            add parameter array to the cache
            </summary>
            <param name="cacheKey">Key to the parameter cache</param>
            <param name="cmdParms">an array of SqlParamters to be cached</param>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.GetCachedParameters(System.String)">
            <summary>
            Retrieve cached parameters
            </summary>
            <param name="cacheKey">key used to lookup parameters</param>
            <returns>Cached SqlParamters array</returns>
        </member>
        <member name="M:DotNet.Utilities.SqlHelper.Exists(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            检查是否存在
            </summary>
            <param name="strSql">Sql语句</param>
            <param name="cmdParms">参数</param>
            <returns>bool结果</returns>
        </member>
        <member name="T:DotNet.Utilities.SysHelper">
            <summary>
            系统操作相关的公共类
            </summary>    
        </member>
        <member name="M:DotNet.Utilities.SysHelper.GetPath(System.String)">
            <summary>
            获取文件相对路径映射的物理路径
            </summary>
            <param name="virtualPath">文件的相对路径</param>        
        </member>
        <member name="M:DotNet.Utilities.SysHelper.GetMethodName(System.Int32)">
            <summary>
            获取指定调用层级的方法名
            </summary>
            <param name="level">调用的层数</param>        
        </member>
        <member name="P:DotNet.Utilities.SysHelper.NewGUID">
            <summary>
            获取GUID值
            </summary>
        </member>
        <member name="P:DotNet.Utilities.SysHelper.NewLine">
            <summary>
            获取换行字符
            </summary>
        </member>
        <member name="P:DotNet.Utilities.SysHelper.CurrentAppDomain">
            <summary>
            获取当前应用程序域
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Tools">
            <summary>
            共用工具类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Tools.GetUserIp">
            <summary>
            获得用户IP
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Tools.GetMD5(System.String)">
            <summary>
            根据配置对指定字符串进行 MD5 加密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Tools.StrLength(System.String)">
            <summary>
            得到字符串长度，一个汉字长度为2
            </summary>
            <param name="inputString">参数字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Tools.ClipString(System.String,System.Int32)">
            <summary>
            截取指定长度字符串
            </summary>
            <param name="inputString">要处理的字符串</param>
            <param name="len">指定长度</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.Tools.DateDiff(System.DateTime,System.DateTime)">
            <summary>
            获得两个日期的间隔
            </summary>
            <param name="DateTime1">日期一。</param>
            <param name="DateTime2">日期二。</param>
            <returns>日期间隔TimeSpan。</returns>
        </member>
        <member name="M:DotNet.Utilities.Tools.FormatDate(System.DateTime,System.String)">
            <summary>
            格式化日期时间
            </summary>
            <param name="dateTime1">日期时间</param>
            <param name="dateMode">显示模式</param>
            <returns>0-9种模式的日期</returns>
        </member>
        <member name="M:DotNet.Utilities.Tools.GetRandomTime(System.DateTime,System.DateTime)">
            <summary>
            得到随机日期
            </summary>
            <param name="time1">起始日期</param>
            <param name="time2">结束日期</param>
            <returns>间隔日期之间的 随机日期</returns>
        </member>
        <member name="M:DotNet.Utilities.Tools.HtmlToTxt(System.String)">
            <summary>
            HTML转行成TEXT
            </summary>
            <param name="strHtml"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Tools.IsNullOrEmpty``1(``0)">
            <summary>
            判断对象是否为空，为空返回true
            </summary>
            <typeparam name="T">要验证的对象的类型</typeparam>
            <param name="data">要验证的对象</param>        
        </member>
        <member name="M:DotNet.Utilities.Tools.IsNullOrEmpty(System.Object)">
            <summary>
            判断对象是否为空，为空返回true
            </summary>
            <param name="data">要验证的对象</param>
        </member>
        <member name="M:DotNet.Utilities.Tools.IsIP(System.String)">
            <summary>
            验证IP地址是否合法
            </summary>
            <param name="ip">要验证的IP地址</param>        
        </member>
        <member name="M:DotNet.Utilities.Tools.IsEmail(System.String)">
            <summary>
            验证EMail是否合法
            </summary>
            <param name="email">要验证的Email</param>
        </member>
        <member name="M:DotNet.Utilities.Tools.IsInt(System.String)">
            <summary>
            验证是否为整数 如果为空，认为验证不合格 返回false
            </summary>
            <param name="number">要验证的整数</param>        
        </member>
        <member name="M:DotNet.Utilities.Tools.IsNumber(System.String)">
            <summary>
            验证是否为数字
            </summary>
            <param name="number">要验证的数字</param>        
        </member>
        <member name="M:DotNet.Utilities.Tools.IsDate(System.String@)">
            <summary>
            验证日期是否合法,对不规则的作了简单处理
            </summary>
            <param name="date">日期</param>
        </member>
        <member name="M:DotNet.Utilities.Tools.IsIdCard(System.String)">
            <summary>
            验证身份证是否合法
            </summary>
            <param name="idCard">要验证的身份证</param>        
        </member>
        <member name="M:DotNet.Utilities.Tools.IsValidInput(System.String@)">
            <summary>
            检测客户输入的字符串是否有效,并将原始字符串修改为有效字符串或空字符串。
            当检测到客户的输入中有攻击性危险字符串,则返回false,有效返回true。
            </summary>
            <param name="input">要检测的字符串</param>
        </member>
        <member name="T:DotNet.Utilities.ValidateImg">
            <summary>
            验证码 继承 System.Web.UI.Page ，Session["xk_validate_code"]
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ValidateImg.CreateImage(System.String)">
            <summary>
            创建图片
            </summary>
            <param name="checkCode"></param>
        </member>
        <member name="T:DotNet.Utilities.WebSitePathHelper">
            <summary>
            网站路径操作类
            </summary>
        </member>
        <member name="T:DotNet.Utilities.WebSitePathHelper.SortType">
            <summary>
            
            </summary>
        </member>
        <member name="F:DotNet.Utilities.WebSitePathHelper.SortType.Photo">
            <summary>
            
            </summary>
        </member>
        <member name="F:DotNet.Utilities.WebSitePathHelper.SortType.Article">
            <summary>
            
            </summary>
        </member>
        <member name="F:DotNet.Utilities.WebSitePathHelper.SortType.Diary">
            <summary>
            
            </summary>
        </member>
        <member name="F:DotNet.Utilities.WebSitePathHelper.SortType.Pic">
            <summary>
            
            </summary>
        </member>
        <member name="F:DotNet.Utilities.WebSitePathHelper.SortType.Music">
            <summary>
            
            </summary>
        </member>
        <member name="F:DotNet.Utilities.WebSitePathHelper.SortType.AddressList">
            <summary>
            
            </summary>
        </member>
        <member name="F:DotNet.Utilities.WebSitePathHelper.SortType.Favorite">
            <summary>
            
            </summary>
        </member>
        <member name="M:DotNet.Utilities.WebSitePathHelper.GetWebPath(System.String)">
            <summary>
            根据给出的相对地址获取网站绝对地址
            </summary>
            <param name="localPath">相对地址</param>
            <returns>绝对地址</returns>
        </member>
        <member name="M:DotNet.Utilities.WebSitePathHelper.GetWebPath">
            <summary>
             获取网站绝对地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.WebSitePathHelper.GetFilePath(System.String)">
            <summary>
            根据相对路径或绝对路径获取绝对路径
            </summary>
            <param name="localPath">相对路径或绝对路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="T:DotNet.Utilities.VerificationCode">
            <summary>
            验证码类（后台）
            </summary>
        </member>
        <member name="F:DotNet.Utilities.VerificationCode._CurrentBitmap">
            <summary>生成的图片
            </summary>
        </member>
        <member name="P:DotNet.Utilities.VerificationCode.CurrentBitmap">
            <summary> 验证码图片
            </summary>
        </member>
        <member name="F:DotNet.Utilities.VerificationCode._Code">
            <summary>生成的验证码
            </summary>
        </member>
        <member name="P:DotNet.Utilities.VerificationCode.Code">
            <summary> 验证码
            </summary>
        </member>
        <member name="F:DotNet.Utilities.VerificationCode._CountCode">
            <summary>需要生成的验证码的字符数
            </summary>
        </member>
        <member name="P:DotNet.Utilities.VerificationCode.CountCode">
            <summary>需要生成的验证码的字符数量
            </summary>
        </member>
        <member name="F:DotNet.Utilities.VerificationCode._ImageWidth">
            <summary>生成验证码码图片的宽度
            </summary>
        </member>
        <member name="P:DotNet.Utilities.VerificationCode.ImageWidth">
            <summary>生成验证码图片的宽度
            </summary>
        </member>
        <member name="F:DotNet.Utilities.VerificationCode._ImageHeight">
            <summary>生成验证码图片的高度
            </summary>
        </member>
        <member name="P:DotNet.Utilities.VerificationCode.ImageHeight">
            <summary>生成验证码图片的高度
            
            </summary>
        </member>
        <member name="F:DotNet.Utilities.VerificationCode._NoiseLine">
            <summary>设定图片的噪点线数量
            </summary>
        </member>
        <member name="P:DotNet.Utilities.VerificationCode.NoiseLine">
            <summary>设定图片的噪点线数量
            </summary>
        </member>
        <member name="F:DotNet.Utilities.VerificationCode._NoisePoint">
            <summary> 前景干扰点
            </summary>
        </member>
        <member name="P:DotNet.Utilities.VerificationCode.NoisePoint">
            <summary>设定验证码图片的前景干扰点数量
            </summary>
        </member>
        <member name="F:DotNet.Utilities.VerificationCode._FontSize">
            <summary>字体大小
            </summary>
        </member>
        <member name="P:DotNet.Utilities.VerificationCode.FontSize">
            <summary>字体大小
            </summary>
        </member>
        <member name="M:DotNet.Utilities.VerificationCode.tempcode">
            <summary>
            生成验证码
            </summary>
            <returns>验证码字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.VerificationCode.tempImage">
            <summary>生成验证码图片
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.VerificationCode.RotateImg(System.Drawing.Image,System.Int32)">
            <summary>
            以逆时针为方向对图像进行旋转
            </summary>
            <param name="b">位图流</param>
            <param name="angle">旋转角度[0,360](前台给的)</param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.XmlHelper">
            <summary>
            Xml的操作公共类
            </summary>    
        </member>
        <member name="F:DotNet.Utilities.XmlHelper._filePath">
            <summary>
            XML文件的物理路径
            </summary>
        </member>
        <member name="F:DotNet.Utilities.XmlHelper._xml">
            <summary>
            Xml文档
            </summary>
        </member>
        <member name="F:DotNet.Utilities.XmlHelper._element">
            <summary>
            XML的根节点
            </summary>
        </member>
        <member name="M:DotNet.Utilities.XmlHelper.#ctor(System.String)">
            <summary>
            实例化XmlHelper对象
            </summary>
            <param name="xmlFilePath">Xml文件的相对路径</param>
        </member>
        <member name="M:DotNet.Utilities.XmlHelper.CreateXMLElement">
            <summary>
            创建XML的根节点
            </summary>
        </member>
        <member name="M:DotNet.Utilities.XmlHelper.GetNode(System.String)">
            <summary>
            获取指定XPath表达式的节点对象
            </summary>        
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:DotNet.Utilities.XmlHelper.GetValue(System.String)">
            <summary>
            获取指定XPath表达式节点的值
            </summary>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:DotNet.Utilities.XmlHelper.GetAttributeValue(System.String,System.String)">
            <summary>
            获取指定XPath表达式节点的属性值
            </summary>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
            <param name="attributeName">属性名</param>
        </member>
        <member name="M:DotNet.Utilities.XmlHelper.AppendNode(System.Xml.XmlNode)">
            <summary>
            1. 功能：新增节点。
            2. 使用条件：将任意节点插入到当前Xml文件中。
            </summary>        
            <param name="xmlNode">要插入的Xml节点</param>
        </member>
        <member name="M:DotNet.Utilities.XmlHelper.AppendNode(System.Data.DataSet)">
            <summary>
            1. 功能：新增节点。
            2. 使用条件：将DataSet中的第一条记录插入Xml文件中。
            </summary>        
            <param name="ds">DataSet的实例，该DataSet中应该只有一条记录</param>
        </member>
        <member name="M:DotNet.Utilities.XmlHelper.RemoveNode(System.String)">
            <summary>
            删除指定XPath表达式的节点
            </summary>        
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:DotNet.Utilities.XmlHelper.Save">
            <summary>
            保存XML文件
            </summary>        
        </member>
        <member name="M:DotNet.Utilities.XmlHelper.CreateRootElement(System.String)">
            <summary>
            创建根节点对象
            </summary>
            <param name="xmlFilePath">Xml文件的相对路径</param>        
        </member>
        <member name="M:DotNet.Utilities.XmlHelper.GetValue(System.String,System.String)">
            <summary>
            获取指定XPath表达式节点的值
            </summary>
            <param name="xmlFilePath">Xml文件的相对路径</param>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:DotNet.Utilities.XmlHelper.GetAttributeValue(System.String,System.String,System.String)">
            <summary>
            获取指定XPath表达式节点的属性值
            </summary>
            <param name="xmlFilePath">Xml文件的相对路径</param>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
            <param name="attributeName">属性名</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.XMLLoad">
            <summary>
            导入XML文件
            </summary>
            <param name="XMLPath">XML文件路径</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.XMLLoad(System.String)">
            <summary>
            导入XML文件
            </summary>
            <param name="XMLPath">XML文件路径</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.GetXmlFullPath(System.String)">
            <summary>
            返回完整路径
            </summary>
            <param name="strPath">Xml的路径</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.Read(System.String)">
            <summary>
            读取指定节点的数据
            </summary>
            <param name="node">节点</param>
            使用示列:
            XMLProsess.Read("/Node", "")
            XMLProsess.Read("/Node/Element[@Attribute='Name']")
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.Read(System.String,System.String)">
            <summary>
            读取指定路径和节点的串联值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
            使用示列:
            XMLProsess.Read(path, "/Node", "")
            XMLProsess.Read(path, "/Node/Element[@Attribute='Name']")
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.Read(System.String,System.String,System.String)">
            <summary>
            读取指定路径和节点的属性值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
            使用示列:
            XMLProsess.Read(path, "/Node", "")
            XMLProsess.Read(path, "/Node/Element[@Attribute='Name']", "Attribute")
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.ReadAllChildallValue(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.ReadAllChild(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.GetDataViewByXml(System.String,System.String)">
            <summary> 
            读取XML返回经排序或筛选后的DataView
            </summary>
            <param name="strWhere">筛选条件，如:"name='kgdiwss'"</param>
            <param name="strSort"> 排序条件，如:"Id desc"</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.GetDataSetByXml(System.String)">
            <summary>
            读取XML返回DataSet
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.Insert(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="attribute">属性名，非空时插入该元素属性值，否则插入元素值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node", "Element", "", "Value")
            XMLProsess.Insert(path, "/Node", "Element", "Attribute", "Value")
            XMLProsess.Insert(path, "/Node", "", "Attribute", "Value")
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.Insert(System.String,System.String,System.String,System.String[][])">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="strList">由XML属性名和值组成的二维数组</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.WriteXmlByDataSet(System.String,System.String[],System.String[])">
            <summary>
            插入一行数据
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
            <param name="Columns">要插入行的列名数组，如：string[] Columns = {"name","IsMarried"};</param>
            <param name="ColumnValue">要插入行每列的值数组，如：string[] ColumnValue={"XML大全","false"};</param>
            <returns>成功返回true,否则返回false</returns>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.Update(System.String,System.String)">
            <summary>
            修改指定节点的数据
            </summary>
            <param name="node">节点</param>
            <param name="value">值</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.Update(System.String,System.String,System.String)">
            <summary>
            修改指定节点的数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node","Value")
            XMLProsess.Insert(path, "/Node","Value")
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.Update(System.String,System.String,System.String,System.String)">
            <summary>
            修改指定节点的属性值(静态)
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时修改该节点属性值，否则修改节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node", "", "Value")
            XMLProsess.Insert(path, "/Node", "Attribute", "Value")
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.UpdateXmlRow(System.String,System.String[],System.String[],System.String,System.String)">
            <summary>
            更改符合条件的一条记录
            </summary>
            <param name="strXmlPath">XML文件路径</param>
            <param name="Columns">列名数组</param>
            <param name="ColumnValue">列值数组</param>
            <param name="strWhereColumnName">条件列名</param>
            <param name="strWhereColumnValue">条件列值</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.Delete(System.String,System.String)">
            <summary>
            删除节点值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.Delete(System.String,System.String,System.String)">
            <summary>
            删除数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.DeleteXmlAllRows(System.String)">
            <summary>
            删除所有行
            </summary>
            <param name="strXmlPath">XML路径</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.DeleteXmlRowByIndex(System.String,System.Int32)">
            <summary>
            通过删除DataSet中指定索引行，重写XML以实现删除指定行
            </summary>
            <param name="iDeleteRow">要删除的行在DataSet中的Index值</param>
        </member>
        <member name="M:DotNet.Utilities.XMLProcess.DeleteXmlRows(System.String,System.String,System.String[])">
            <summary>
            删除指定列中指定值的行
            </summary>
            <param name="strXmlPath">XML相对路径</param>
            <param name="strColumn">列名</param>
            <param name="ColumnValue">指定值</param>
        </member>
        <member name="T:DotNet.Utilities.FileDown">
            <summary>
            文件下载类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FileDown.FileNameExtension(System.String)">
            <summary>
            参数为虚拟路径
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FileDown.MapPathFile(System.String)">
            <summary>
            获取物理地址
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FileDown.DownLoadold(System.String)">
            <summary>
            普通下载
            </summary>
            <param name="FileName">文件虚拟路径</param>
        </member>
        <member name="M:DotNet.Utilities.FileDown.DownLoad(System.String)">
            <summary>
            分块下载
            </summary>
            <param name="FileName">文件虚拟路径</param>
        </member>
        <member name="M:DotNet.Utilities.FileDown.ResponseFile(System.Web.HttpRequest,System.Web.HttpResponse,System.String,System.String,System.Int64)">
            <summary>
             输出硬盘文件，提供下载 支持大文件、续传、速度限制、资源占用小
            </summary>
            <param name="_Request">Page.Request对象</param>
            <param name="_Response">Page.Response对象</param>
            <param name="_fileName">下载文件名</param>
            <param name="_fullPath">带文件名下载路径</param>
            <param name="_speed">每秒允许下载的字节数</param>
            <returns>返回是否成功</returns>
        </member>
        <member name="T:DotNet.Utilities.FileUp">
            <summary>
            文件上传类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FileUp.GetBinaryFile(System.String)">
            <summary>
            转换为字节数组
            </summary>
            <param name="filename">文件名</param>
            <returns>字节数组</returns>
        </member>
        <member name="M:DotNet.Utilities.FileUp.ConvertStreamToByteBuffer(System.IO.Stream)">
            <summary>
            流转化为字节数组
            </summary>
            <param name="theStream">流</param>
            <returns>字节数组</returns>
        </member>
        <member name="M:DotNet.Utilities.FileUp.FileSc(System.Web.UI.WebControls.FileUpload,System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="PosPhotoUpload">控件</param>
            <param name="saveFileName">保存的文件名</param>
            <param name="imagePath">保存的文件路径</param>
        </member>
        <member name="M:DotNet.Utilities.FileUp.SaveFile(System.Byte[],System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="binData">字节数组</param>
            <param name="fileName">文件名</param>
            <param name="fileType">文件类型</param>
        </member>
        <member name="T:DotNet.Utilities.SegList">
            <summary>
            分词辅助类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.SegList.Sort">
            <summary>
            按长度排序
            </summary>
        </member>
        <member name="M:DotNet.Utilities.SegList.Sort(DotNet.Utilities.SegList)">
            <summary>
            按长度排序
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Segment">
            <summary>
            分词类
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Segment.m_Separator">
            <summary>
            分隔符
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Segment.strChinese">
            <summary>
            用于验证汉字的正则表达式
            </summary>
        </member>
        <member name="P:DotNet.Utilities.Segment.DicPath">
            <summary>
            基本词典路径
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Segment.SetCache(System.String,System.Object)">
            <summary>
            数据缓存函数
            </summary>
            <param name="key">索引键</param>
            <param name="val">缓存的数据</param>
        </member>
        <member name="M:DotNet.Utilities.Segment.GetCache(System.String)">
            <summary>
            读取缓存
            </summary>
        </member>
        <member name="P:DotNet.Utilities.Segment.NoisePath">
            <summary>
            暂时无用
            </summary>
        </member>
        <member name="P:DotNet.Utilities.Segment.NumberPath">
            <summary>
            数字词典路径
            </summary>
        </member>
        <member name="P:DotNet.Utilities.Segment.WordPath">
            <summary>
            字母词典路径
            </summary>
        </member>
        <member name="P:DotNet.Utilities.Segment.PrefixPath">
            <summary>
            姓名前缀字典 用于纠错姓名
            </summary>
        </member>
        <member name="P:DotNet.Utilities.Segment.EnablePrefix">
            <summary>
            是否开启姓名纠错功能
            </summary>
        </member>
        <member name="P:DotNet.Utilities.Segment.EventTime">
            <summary>
            用时每次进行加载或分词动作后改属性表示为上一次动作所用时间
            已精确到毫秒但分词操作在字符串较短时可能为0
            </summary>
        </member>
        <member name="P:DotNet.Utilities.Segment.Separator">
            <summary>
            分隔符,默认为空格
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Segment.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Segment.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Segment.InitWordDics">
            <summary>
            加载词列表
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Segment.LoadWords(System.String,System.Collections.ArrayList)">
            <summary>
            加载文本词组到ArrayList
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Segment.OutWords">
            <summary>
            输出词列表
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Segment.OutArrayList(System.Collections.ArrayList)">
            <summary>
            输出ArrayList
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Segment.SegmentText(System.String)">
            <summary>
            分词过程,不支持回车 
            </summary>
            <param name="strText">要分词的文本</param>
            <returns>分词后的文本</returns>
        </member>
        <member name="M:DotNet.Utilities.Segment.SegmentText(System.String,System.Boolean)">
            <summary>
            重载分词过程,支持回车
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Segment.GetCharType(System.String)">
            <summary>
            判断字符类型,0为未知,1为数字,2为字母,3为汉字,4为汉字数字
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Segment.SortDic">
            <summary>
            对加载的词典排序并重新写入
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Segment.SortDic(System.Boolean)">
            <summary>
            对加载的词典排序并重新写入
            </summary>
            <param name="Reload">是否重新加载</param>
        </member>
        <member name="M:DotNet.Utilities.Segment.Optimize">
            <summary>
            删除两行完全相同的词,暂时无用!
            </summary>
            <returns>相同词条个数</returns>
        </member>
        <member name="M:DotNet.Utilities.SharpZip.PackFiles(System.String,System.String)">
            <summary>
            压缩
            </summary> 
            <param name="filename"> 压缩后的文件名(包含物理路径)</param>
            <param name="directory">待压缩的文件夹(包含物理路径)</param>
        </member>
        <member name="M:DotNet.Utilities.SharpZip.UnpackFiles(System.String,System.String)">
            <summary>
            解压缩
            </summary>
            <param name="file">待解压文件名(包含物理路径)</param>
            <param name="dir"> 解压到哪个目录中(包含物理路径)</param>
        </member>
        <member name="M:DotNet.Utilities.ClassZip.ZipFileDictory(System.String,ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String)">
            <summary>
            递归压缩文件夹方法
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ClassZip.ZipFileDictory(System.String,System.String,System.Int32)">
            <summary>
            压缩目录
            </summary>
            <param name="FolderToZip">待压缩的文件夹，全路径格式</param>
            <param name="ZipedFile">压缩后的文件名，全路径格式</param>
        </member>
        <member name="M:DotNet.Utilities.ClassZip.ZipFile(System.String,System.String,System.Int32)">
            <summary>
            压缩文件
            </summary>
            <param name="FileToZip">要进行压缩的文件名</param>
            <param name="ZipedFile">压缩后生成的压缩文件名</param>
        </member>
        <member name="M:DotNet.Utilities.ClassZip.Zip(System.String,System.String,System.Int32)">
            <summary>
            压缩
            </summary>
            <param name="FileToZip">待压缩的文件目录</param>
            <param name="ZipedFile">生成的目标文件</param>
            <param name="level">6</param>
        </member>
        <member name="M:DotNet.Utilities.ClassZip.UnZip(System.String,System.String)">
            <summary>
            解压
            </summary>
            <param name="FileToUpZip">待解压的文件</param>
            <param name="ZipedFolder">解压目标存放目录</param>
        </member>
        <member name="M:DotNet.Utilities.ZipHelper.EnZip(System.String,System.String,System.String)">
            <summary>
            压缩
            </summary>
            <param name="zipname">要解压的文件名</param>
            <param name="zippath">要压缩的文件目录</param>
            <param name="dirpath">初始目录</param>
        </member>
        <member name="M:DotNet.Utilities.ZipHelper.DeZip(System.String,System.String)">
            <summary>
            解压缩
            </summary>
            <param name="zipname">要解压的文件名</param>
            <param name="zippath">要解压的文件路径</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式</param>    
        </member>
        <member name="M:DotNet.Utilities.ImageClass.ImageWatermark(System.String,System.String,System.String)">
            <summary>
            图片水印处理方法
            </summary>
            <param name="path">需要加载水印的图片路径（绝对路径）</param>
            <param name="waterpath">水印图片（绝对路径）</param>
            <param name="location">水印位置（传送正确的代码）</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.GetLocation(System.String,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            图片水印位置处理方法
            </summary>
            <param name="location">水印位置</param>
            <param name="img">需要添加水印的图片</param>
            <param name="waterimg">水印图片</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.LetterWatermark(System.String,System.Int32,System.String,System.Drawing.Color,System.String)">
            <summary>
            文字水印处理方法
            </summary>
            <param name="path">图片路径（绝对路径）</param>
            <param name="size">字体大小</param>
            <param name="letter">水印文字</param>
            <param name="color">颜色</param>
            <param name="location">水印位置</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.GetLocation(System.String,System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            文字水印位置的方法
            </summary>
            <param name="location">位置代码</param>
            <param name="img">图片对象</param>
            <param name="width">宽(当水印类型为文字时,传过来的就是字体的大小)</param>
            <param name="height">高(当水印类型为文字时,传过来的就是字符的长度)</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.LDPic(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32)">
            <summary>
            调整光暗
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
            <param name="val">增加或减少的光暗值</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.RePic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            反色处理
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.FD(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            浮雕处理
            </summary>
            <param name="oldBitmap">原始图片</param>
            <param name="Width">原始图片的长度</param>
            <param name="Height">原始图片的高度</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.ResizeImage(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            拉伸图片
            </summary>
            <param name="bmp">原始图片</param>
            <param name="newW">新的宽度</param>
            <param name="newH">新的高度</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.FilPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            滤色处理
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.RevPicLR(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            左右翻转
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.RevPicUD(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            上下翻转
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.Compress(System.String,System.String)">
            <summary>
            压缩到指定尺寸
            </summary>
            <param name="oldfile">原文件</param>
            <param name="newfile">新文件</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.Compress(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            压缩指定尺寸，如果写的和图片大家一样表示大小不变，只是把图片压缩下一些
            </summary>
            <param name="oldfile">原文件</param>
            <param name="newfile">新文件</param>
            <param name="width">长</param>
            <param name="height">高</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.BWPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            转换为黑白图片
            </summary>
            <param name="mybt">要进行处理的图片</param>
            <param name="width">图片的长度</param>
            <param name="height">图片的高度</param>
        </member>
        <member name="M:DotNet.Utilities.ImageClass.GetFrames(System.String,System.String)">
            <summary>
            获取图片中的各帧
            </summary>
            <param name="pPath">图片路径</param>
            <param name="pSavePath">保存路径</param>
        </member>
        <member name="T:DotNet.Utilities.ImageDown">
            <summary>
            图片下载
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ImageDown.GetImgTag(System.String)">
            <summary>
            获取图片标志
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ImageDown.GetImgUrl(System.String)">
            <summary>
            获取图片URL地址
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ImageDown.SaveUrlPics(System.String,System.String)">
            <summary>
            下载图片到本地
            </summary>
            <param name="strHTML">HTML</param>
            <param name="path">路径</param>
            <param name="nowyymm">年月</param>
            <param name="nowdd">日</param>
        </member>
        <member name="T:DotNet.Utilities.FileExtension">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="T:DotNet.Utilities.FileValidation">
            <summary>
            图片检测类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FileValidation.IsAllowedExtension(System.Web.HttpPostedFile,DotNet.Utilities.FileExtension[])">
            <summary>
            是否允许
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FileValidation.IsSecureUploadPhoto(System.Web.HttpPostedFile)">
            <summary>
            上传前的图片是否可靠
            </summary>
        </member>
        <member name="M:DotNet.Utilities.FileValidation.IsSecureUpfilePhoto(System.String)">
            <summary>
            上传后的图片是否安全
            </summary>
            <param name="photoFile">物理地址</param>
        </member>
        <member name="T:DotNet.Utilities.ImageUpload">
            <summary>
            图片上传类
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.Error">
            <summary>
            Error返回值
            1、没有上传的文件
            2、类型不允许
            3、大小超限
            4、未知错误
            0、上传成功。 
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.MaxSize">
            <summary>
            最大单个上传文件
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.FileType">
            <summary>
            所支持的上传类型用";"隔开 
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.SavePath">
            <summary>
            保存文件的实际路径 
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.SaveType">
            <summary>
            上传文件的类型，0代表自动生成文件名
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.FormFile">
            <summary>
            上传控件
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.InFileName">
            <summary>
            非自动生成文件名设置。
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.OutFileName">
            <summary>
            输出文件名
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.OutThumbFileName">
            <summary>
            输出的缩略图文件名
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.Iss">
            <summary>
            是否有缩略图生成.
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.Width">
            <summary>
            获取上传图片的宽度
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.Height">
            <summary>
            获取上传图片的高度
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.sWidth">
            <summary>
            设置缩略图的宽度
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.sHeight">
            <summary>
            设置缩略图的高度
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.IsCreateImg">
            <summary>
            是否生成缩略图
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.IsDraw">
            <summary>
            是否加水印
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.DrawStyle">
            <summary>
            设置加水印的方式
            0:文字水印模式
            1:图片水印模式
            2:不加
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.DrawString_x">
            <summary>
            绘制文本的Ｘ坐标（左上角）
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.DrawString_y">
            <summary>
            绘制文本的Ｙ坐标（左上角）
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.AddText">
            <summary>
            设置文字水印内容
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.Font">
            <summary>
            设置文字水印字体
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.FontSize">
            <summary>
            设置文字水印字的大小
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.FileSize">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ImageUpload.CopyIamgePath">
            <summary>
            图片水印模式下的覆盖图片的实际地址
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ImageUpload.GetExt(System.String)">
            <summary>
            获取文件的后缀名 
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ImageUpload.FileName(System.String)">
            <summary>
            获取输出文件的文件名
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ImageUpload.IsUpload(System.String)">
            <summary>
            检查上传的文件的类型，是否允许上传。
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:DotNet.Utilities.StringHelper" -->
        <member name="M:DotNet.Utilities.StringHelper.GetStrArray(System.String,System.Char,System.Boolean)">
            <summary>
            把字符串按照分隔符转换成 List
            </summary>
            <param name="str">源字符串</param>
            <param name="speater">分隔符</param>
            <param name="toLower">是否转换为小写</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.GetStrArray(System.String)">
            <summary>
            把字符串转 按照, 分割 换为数据
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DotNet.Utilities.StringHelper.GetArrayStr(System.Collections.Generic.List{System.String},System.String)" -->
        <member name="M:DotNet.Utilities.StringHelper.GetArrayStr(System.Collections.Generic.List{System.Int32})">
            <summary>
            得到数组列表以逗号分隔的字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.GetArrayValueStr(System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            得到数组列表以逗号分隔的字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.ReplaceString(System.String,System.String,System.String,System.Boolean)">
            <summary>自定义的替换字符串函数</summary>
            <param name="SourceString">原字符串</param>
            <param name="SearchString">查找的字符串</param>
            <param name="ReplaceString">替换的字符串</param>
            <param name="IsCaseInse">是否区分大小写,true=不区分,false=区分大小写</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.DelLastComma(System.String)">
            <summary>
            删除最后结尾的一个逗号
            </summary>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.DelLastChar(System.String,System.String)">
            <summary>
            删除最后结尾的指定字符后的字符
            </summary>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.DelStrSign(System.String,System.String)">
            <summary>删除字符串左右两边的分隔符号</summary>
            <param name="str">字符串</param>
            <param name="key">分隔符,默认为,</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.ToSBC(System.String)">
            <summary>
            转全角的函数(SBC case)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.ToDBC(System.String)">
            <summary>
             转半角的函数(SBC case)
            </summary>
            <param name="input">输入</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.GetSubStringList(System.String,System.Char)">
            <summary>
            把字符串按照指定分隔符装成 List 去除重复
            </summary>
            <param name="o_str"></param>
            <param name="sepeater"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.GetCleanStyle(System.String,System.String)">
            <summary>
             将字符串样式转换为纯字符串
            </summary>
            <param name="StrList"></param>
            <param name="SplitString"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.GetNewStyle(System.String,System.String,System.String,System.String@)">
            <summary>
            将字符串转换为新样式
            </summary>
            <param name="StrList"></param>
            <param name="NewStyle"></param>
            <param name="SplitString"></param>
            <param name="Error"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.SplitMulti(System.String,System.String)">
            <summary>
            分割字符串
            </summary>
            <param name="str"></param>
            <param name="splitstr"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.StrToId(System.String)">
            <summary>
            获取正确的Id，如果不是正整数，返回0
            </summary>
            <param name="_value"></param>
            <returns>返回正确的整数ID，失败返回0</returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsNumberId(System.String)">
            <summary>
            检查一个字符串是否是纯数字构成的，一般用于查询字符串参数的有效性验证。(0除外)
            </summary>
            <param name="_value">需验证的字符串。。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.QuickValidate(System.String,System.String)">
            <summary>
            快速验证一个字符串是否符合指定的正则表达式。
            </summary>
            <param name="_express">正则表达式的内容。</param>
            <param name="_value">需验证的字符串。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.GetMD5(System.String)">
            <summary>
            根据配置对指定字符串进行 MD5 加密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.StrLength(System.String)">
            <summary>
            得到字符串长度，一个汉字长度为2
            </summary>
            <param name="inputString">参数字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.ClipString(System.String,System.Int32)">
            <summary>
            截取指定长度字符串——区分中英文字符长度
            </summary>
            <param name="inputString">要处理的字符串</param>
            <param name="len">指定长度</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.Left(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>截取字符串,从左边算起 n 个字,并经过 SQL注入过滤 处理(不区分中英文长度)，默认去左右两边空格与过滤XSS攻击字符</summary>
            <param name="str">字符串</param>
            <param name="length">截取的长度(字数)</param>
            <param name="isTrim">true=使用Trim(),falae=原文</param>
            <param name="isFilterXss">是否去除特殊符号</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.Right(System.String,System.Int32)">
            <summary>从字符串右边返回指定数目的字符——简单截取</summary>
            <param name="str">字符串</param>
            <param name="length">截取的长度(字数)</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.HtmlToTxt(System.String)">
            <summary>
            HTML转行成TEXT
            </summary>
            <param name="strHtml"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsNullOrEmpty``1(``0)">
            <summary>
            判断对象是否为空，为空返回true
            </summary>
            <typeparam name="T">要验证的对象的类型</typeparam>
            <param name="data">要验证的对象</param>        
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsNullOrEmpty(System.Object)">
            <summary>
            判断对象是否为空，为空返回true
            </summary>
            <param name="data">要验证的对象</param>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.FilterSql(System.String,System.Boolean,System.Boolean)">
            <summary>过滤 Sql 语句字符串中的注入脚本
            </summary>
            <param name="source">传入的字符串</param>
            <param name="isTrim">是否去除字符串两边的空格</param>
            <param name="isFilterXss">是否去除特殊符号</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.XssTextClear(System.String)">
            <summary>清除输入字符串中的特殊字符
            </summary>
            <param name="xssText">输入字符串</param>
            <returns>处理后的字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsExistValue(System.String,System.String)">
            <summary> 检查字符串里每个字是否都在指定字符集内的字.
            比如:整数(0123456789)
            字母(abcdefghijklmnopqrstuvwxyz)
            </summary>
            <param name="sValue">字符串</param>
            <param name="sCompate">字符集</param>
            <returns>true=在字符集内,false=存在非字符集的字</returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsIdList(System.String)">
            <summary>检查输入是否为指字内容,检查id列(用于数据库查询),"34,5,1,8"</summary>
            <param name="str">字符串,分隔符默认为,</param>
            <returns>true=是id列,false=非id列</returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsIdList(System.String,System.String)">
            <summary>检查输入是否为指字内容,检查id列(用于数据库查询),"34,5,1,8"</summary>
            <param name="str">字符串</param>
            <param name="key">字符串,分隔符默认为,</param>
            <returns>true=是id列,false=非id列</returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsNumberChar(System.String)">
            <summary>是否为纯数字字符</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsEmail(System.String)">
            <summary>检测是否符合email格式</summary>
            <param name="str">要判断的email字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsEnglish(System.String)">
            <summary>检查输入,是否由字母组成</summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsRegName(System.String)">
            <summary>检查输入,检查用户注册账号是否合法字符(由字母,数字或"_"组成)</summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsRndFileName(System.String)">
            <summary>检查输入,是否为随机生成的文件名称</summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsRndKey(System.String)">
            <summary>检查输入,是否为随机生成的文件名称(即全由字母和数字组成)</summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.GetIsRndKey(System.String)">
            <summary>检查输入,是否为随机生成的文件名称(即全由字母和数字组成)</summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsMobile(System.String)">
            <summary>检查输入,检查是否为正常的手机号码.</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringHelper.IsBase64(System.String)">
            <summary>判断输入是否为Base64编码.</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.ExcelHelper">
            <summary>
            Excel操作类
            </summary>
            Microsoft Excel 11.0 Object Library
        </member>
        <!-- Badly formed XML comment ignored for member "M:DotNet.Utilities.ExcelHelper.DataTable1Excel(System.Data.DataTable)" -->
        <member name="M:DotNet.Utilities.ExcelHelper.DataTable2Excel(System.Data.DataTable)">
            <summary>
            导出Excel文件，转换为可读模式
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ExcelHelper.DataTable3Excel(System.Data.DataTable,System.String)">
            <summary>
            导出Excel文件，并自定义文件名
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ExcelHelper.OutputToExcel(System.Data.DataTable,System.String)">
            <summary>
            将数据导出至Excel文件
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="ExcelFilePath">Excel文件路径</param>
        </member>
        <member name="M:DotNet.Utilities.ExcelHelper.OutputToExcel(System.Data.DataTable,System.Collections.ArrayList,System.String)">
            <summary>
            将数据导出至Excel文件
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="Columns">要导出的数据列集合</param>
            <param name="ExcelFilePath">Excel文件路径</param>
        </member>
        <member name="M:DotNet.Utilities.ExcelHelper.GetExcelTables(System.String)">
            <summary>
            获取Excel文件数据表列表
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ExcelHelper.InputFromExcel(System.String,System.String)">
            <summary>
            将Excel文件导出至DataTable(第一行作为表头)
            </summary>
            <param name="ExcelFilePath">Excel文件路径</param>
            <param name="TableName">数据表名，如果数据表名错误，默认为第一个数据表名</param>
        </member>
        <member name="M:DotNet.Utilities.ExcelHelper.GetExcelTableColumns(System.String,System.String)">
            <summary>
            获取Excel文件指定数据表的数据列表
            </summary>
            <param name="ExcelFileName">Excel文件名</param>
            <param name="TableName">数据表名</param>
        </member>
        <member name="M:DotNet.Utilities.SerializeHelper.Save(System.Object,System.String)">
            <summary>
            文件化XML序列化
            </summary>
            <param name="obj">对象</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="M:DotNet.Utilities.SerializeHelper.Load(System.Type,System.String)">
            <summary>
            文件化XML反序列化
            </summary>
            <param name="type">对象类型</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="M:DotNet.Utilities.SerializeHelper.ToXml``1(``0)">
            <summary>
            文本化XML序列化
            </summary>
            <param name="item">对象</param>
        </member>
        <member name="M:DotNet.Utilities.SerializeHelper.FromXml``1(System.String)">
            <summary>
            文本化XML反序列化
            </summary>
            <param name="str">字符串序列</param>
        </member>
        <member name="M:DotNet.Utilities.SerializeHelper.ToSoap``1(``0)">
            <summary>
            SoapFormatter序列化
            </summary>
            <param name="item">对象</param>
        </member>
        <member name="M:DotNet.Utilities.SerializeHelper.FromSoap``1(System.String)">
            <summary>
            SoapFormatter反序列化
            </summary>
            <param name="str">字符串序列</param>
        </member>
        <member name="M:DotNet.Utilities.SerializeHelper.ToBinary``1(``0)">
            <summary>
            BinaryFormatter序列化
            </summary>
            <param name="item">对象</param>
        </member>
        <member name="M:DotNet.Utilities.SerializeHelper.FromBinary``1(System.String)">
            <summary>
            BinaryFormatter反序列化
            </summary>
            <param name="str">字符串序列</param>
        </member>
        <member name="T:DotNet.Utilities.CNDate">
            <summary>
            农历属性
            </summary>
        </member>
        <member name="F:DotNet.Utilities.CNDate.cnIntYear">
            <summary>
            农历年(整型)
            </summary>
        </member>
        <member name="F:DotNet.Utilities.CNDate.cnIntMonth">
            <summary>
            农历月份(整型)
            </summary>
        </member>
        <member name="F:DotNet.Utilities.CNDate.cnIntDay">
            <summary>
            农历天(整型)
            </summary>
        </member>
        <member name="F:DotNet.Utilities.CNDate.cnStrYear">
            <summary>
            农历年(支干)
            </summary>
        </member>
        <member name="F:DotNet.Utilities.CNDate.cnStrMonth">
            <summary>
            农历月份(字符)
            </summary>
        </member>
        <member name="F:DotNet.Utilities.CNDate.cnStrDay">
            <summary>
            农历天(字符)
            </summary>
        </member>
        <member name="F:DotNet.Utilities.CNDate.cnAnm">
            <summary>
            农历属象
            </summary>
        </member>
        <member name="F:DotNet.Utilities.CNDate.cnSolarTerm">
            <summary>
            二十四节气
            </summary>
        </member>
        <member name="F:DotNet.Utilities.CNDate.cnFtvl">
            <summary>
            阴历节日
            </summary>
        </member>
        <member name="F:DotNet.Utilities.CNDate.cnFtvs">
            <summary>
            阳历节日
            </summary>
        </member>
        <member name="T:DotNet.Utilities.ChinaDate">
            <summary>
            公历转农历
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChinaDate.lYearDays(System.Int32)">
            <summary>
            传回农历y年的总天数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChinaDate.leapDays(System.Int32)">
            <summary>
            传回农历y年闰月的天数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChinaDate.leapMonth(System.Int32)">
            <summary>
            传回农历y年闰哪个月 1-12 , 没闰传回 0
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChinaDate.monthDays(System.Int32,System.Int32)">
            <summary>
            传回农历y年m月的总天数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChinaDate.AnimalsYear(System.Int32)">
            <summary>
            传回农历y年的生肖
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChinaDate.cyclicalm(System.Int32)">
            <summary>
            传入月日的offset 传回干支,0=甲子
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChinaDate.cyclical(System.Int32)">
            <summary>
            传入offset 传回干支, 0=甲子
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChinaDate.Lunar(System.Int32,System.Int32)">
            <summary>
            传出农历.year0 .month1 .day2 .yearCyl3 .monCyl4 .dayCyl5 .isLeap6
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChinaDate.calElement(System.Int32,System.Int32,System.Int32)">
            <summary>
            传出y年m月d日对应的农历.year0 .month1 .day2 .yearCyl3 .monCyl4 .dayCyl5 .isLeap6
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChinaDate.GetDaysByMonth(System.Int32,System.Int32)">
            <summary>
            传回公历y年m月的总天数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChinaDate.GetMondayDateByDate(System.DateTime)">
            <summary>
            根据日期值获得周一的日期
            </summary>
            <param name="dt">输入日期</param>
            <returns>周一的日期</returns>
        </member>
        <member name="M:DotNet.Utilities.ChinaDate.getChinaDate(System.DateTime)">
            <summary>
            获取农历
            </summary>
        </member>
        <member name="T:DotNet.Utilities.ChineseCalendar">
            <summary>
            中国日历
            </summary>
        </member>
        <member name="T:DotNet.Utilities.ChineseCalendar.SolarHolidayStruct">
            <summary>
            阳历
            </summary>
        </member>
        <member name="T:DotNet.Utilities.ChineseCalendar.LunarHolidayStruct">
            <summary>
            农历
            </summary>
        </member>
        <member name="F:DotNet.Utilities.ChineseCalendar.LunarDateArray">
             <summary>
             来源于网上的农历数据
             </summary>
             <remarks>
             数据结构如下，共使用17位数据
             第17位：表示闰月天数，0表示29天   1表示30天
             第16位-第5位（共12位）表示12个月，其中第16位表示第一月，如果该月为30天则为1，29天为0
             第4位-第1位（共4位）表示闰月是哪个月，如果当年没有闰月，则置0
            </remarks>
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.#ctor(System.DateTime)">
            <summary>
            用一个标准的公历日期来初使化
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            用农历的日期来初使化
            </summary>
            <param name="cy">农历年</param>
            <param name="cm">农历月</param>
            <param name="cd">农历日</param>
            <param name="LeapFlag">闰月标志</param>
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.GetChineseMonthDays(System.Int32,System.Int32)">
            <summary>
            //传回农历y年m月的总天数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.GetChineseLeapMonth(System.Int32)">
            <summary>
            传回农历 y年闰哪个月 1-12 , 没闰传回 0
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.GetChineseLeapMonthDays(System.Int32)">
            <summary>
            传回农历y年闰月的天数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.GetChineseYearDays(System.Int32)">
            <summary>
            取农历年一年的天数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.GetChineseHour(System.DateTime)">
            <summary>
            获得当前时间的时辰
            </summary> 
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.CheckDateLimit(System.DateTime)">
            <summary>
            检查公历日期是否符合要求
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.CheckChineseDateLimit(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            检查农历日期是否合理
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.ConvertNumToChineseNum(System.Char)">
            <summary>
            将0-9转成汉字形式
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.BitTest32(System.Int32,System.Int32)">
            <summary>
            测试某位是否为真
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.ConvertDayOfWeek(System.DayOfWeek)">
            <summary>
            将星期几转成数字表示
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ChineseCalendar.CompareWeekDayHoliday(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            比较当天是不是指定的第周几
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.newCalendarHoliday">
            <summary>
            计算中国农历节日
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.WeekDayHoliday">
            <summary>
            按某月第几周第几日计算的节日
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.DateHoliday">
            <summary>
            按公历日计算的节日
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.Date">
            <summary>
            取对应的公历日期
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.WeekDay">
            <summary>
            取星期几
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.WeekDayStr">
            <summary>
            周几的字符
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.DateString">
            <summary>
            公历日期中文表示法 如一九九七年七月一日
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.IsLeapYear">
            <summary>
            当前是否公历闰年
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.ChineseConstellation">
            <summary>
            28星宿计算
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.ChineseHour">
            <summary>
            时辰
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.IsChineseLeapMonth">
            <summary>
            是否闰月
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.IsChineseLeapYear">
            <summary>
            当年是否有闰月
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.ChineseDay">
            <summary>
            农历日
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.ChineseDayString">
            <summary>
            农历日中文表示
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.ChineseMonth">
            <summary>
            农历的月份
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.ChineseMonthString">
            <summary>
            农历月份字符串
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.ChineseYear">
            <summary>
            取农历年份
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.ChineseYearString">
            <summary>
            取农历年字符串如，一九九七年
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.ChineseDateString">
            <summary>
            取农历日期表示法：农历一九九七年正月初五
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.ChineseTwentyFourDay">
            <summary>
            定气法计算二十四节气,二十四节气是按地球公转来计算的，并非是阴历计算的
            </summary>
            <remarks>
            节气的定法有两种。古代历法采用的称为"恒气"，即按时间把一年等分为24份，
            每一节气平均得15天有余，所以又称"平气"。现代农历采用的称为"定气"，即
            按地球在轨道上的位置为标准，一周360°，两节气之间相隔15°。由于冬至时地
            球位于近日点附近，运动速度较快，因而太阳在黄道上移动15°的时间不到15天。
            夏至前后的情况正好相反，太阳在黄道上移动较慢，一个节气达16天之多。采用
            定气时可以保证春、秋两分必然在昼夜平分的那两天。
            </remarks>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.Constellation">
            <summary>
            计算指定日期的星座序号 
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.Animal">
            <summary>
            计算属相的索引，注意虽然属相是以农历年来区别的，但是目前在实际使用中是按公历来计算的
            鼠年为1,其它类推
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.AnimalString">
            <summary>
            取属相字符串
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.GanZhiYearString">
            <summary>
            取农历年的干支表示法如 乙丑年
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.GanZhiMonthString">
            <summary>
            取干支的月表示字符串，注意农历的闰月不记干支
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.GanZhiDayString">
            <summary>
            取干支日表示法
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ChineseCalendar.GanZhiDateString">
            <summary>
            取当前日期的干支表示法如 甲子年乙丑月丙庚日
            </summary>
        </member>
        <member name="T:DotNet.Utilities.TimeHelper">
            <summary>
            时间类
            1、SecondToMinute(int Second) 把秒转换成分钟
            </summary>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.GetFormatDate(System.DateTime,System.Char)">
            <summary>
            将时间格式化成 年月日 的形式,如果时间为null，返回当前系统时间
            </summary>
            <param name="dt">年月日分隔符</param>
            <param name="Separator"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.GetFormatTime(System.DateTime,System.Char)">
            <summary>
            将时间格式化成 时分秒 的形式,如果时间为null，返回当前系统时间
            </summary>
            <param name="dt"></param>
            <param name="Separator"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.SecondToMinute(System.Int32)">
            <summary>
            把秒转换成分钟
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.GetMonthLastDate(System.Int32,System.Int32)">
            <summary>
            返回某年某月最后一天
            </summary>
            <param name="year">年份</param>
            <param name="month">月份</param>
            <returns>日</returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.DateDiff(System.String,System.DateTime,System.DateTime)">
            <summary>时间比较函数，返回两个日期相差几秒、几分钟、几小时或几天</summary>
            <param name="sInterval"> y = 年, m =月, d = 日, w = 周, q = 季, h = 时, n = 分钟, s = 秒 </param>
            <param name="StartDate">日期</param>
            <param name="EndDate">日期</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.DateDiff2(System.DateTime,System.DateTime)">
            <summary>
            获得两个日期的间隔
            </summary>
            <param name="DateTime1">日期一。</param>
            <param name="DateTime2">日期二。</param>
            <returns>日期间隔TimeSpan。</returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.FormatDate(System.DateTime,System.String)">
            <summary>
            格式化日期时间
            </summary>
            <param name="dateTime1">日期时间</param>
            <param name="dateMode">显示模式</param>
            <returns>0-9种模式的日期</returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.GetRandomTime(System.DateTime,System.DateTime)">
            <summary>
            得到随机日期
            </summary>
            <param name="time1">起始日期</param>
            <param name="time2">结束日期</param>
            <returns>间隔日期之间的 随机日期</returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.CDate(System.String)">
            <summary> 把字符串转成日期型 </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.CDate(System.Object)">
            <summary> 把字符串转成日期型 </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.IsTime(System.String)">
            <summary>返回 Boolean 值指明某表达式是否可以转换为时间。</summary>
            <param name="timeval">时间字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.IsDateTime(System.String)">
            <summary>返回 Boolean 值指明某表达式是否可以转换为日期。</summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.IsDateTime(System.Object)">
            <summary>返回 Boolean 值指明某表达式是否可以转换为日期。</summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.TimeHelper.GetMinDate">
            <summary>系统默认最少时间</summary>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.RegexHelper">
            <summary>
            操作正则表达式的公共类
            </summary>    
        </member>
        <member name="M:DotNet.Utilities.RegexHelper.IsMatch(System.String,System.String)">
            <summary>
            验证输入字符串是否与模式字符串匹配，匹配返回true
            </summary>
            <param name="input">输入字符串</param>
            <param name="pattern">模式字符串</param>        
        </member>
        <member name="M:DotNet.Utilities.RegexHelper.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            验证输入字符串是否与模式字符串匹配，匹配返回true
            </summary>
            <param name="input">输入的字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="options">筛选条件</param>
        </member>
        <member name="T:DotNet.Utilities.EcanConvertToCh">
            <summary>
            汉字转拼音类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.EcanConvertToCh.convertCh(System.String)">
            <summary>
            汉字转换成全拼的拼音
            </summary>
            <param name="Chstr">汉字字符串</param>
            <returns>转换后的拼音字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.PinYin.GetCodstring(System.String)">
            <summary>
            取汉字拼音的首字母
            </summary>
            <param name="UnName">汉字</param>
            <returns>首字母</returns>
        </member>
        <member name="T:DotNet.Utilities.NetHelper">
            <summary>
            网络操作相关的类
            </summary>    
        </member>
        <member name="M:DotNet.Utilities.NetHelper.GetValidPort(System.String)">
            <summary>
            检查设置的端口号是否正确，并返回正确的端口号,无效端口号返回-1。
            </summary>
            <param name="port">设置的端口号</param>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.StringToIPAddress(System.String)">
            <summary>
            将字符串形式的IP地址转换成IPAddress对象
            </summary>
            <param name="ip">字符串形式的IP地址</param>        
        </member>
        <member name="P:DotNet.Utilities.NetHelper.LocalHostName">
            <summary>
            获取本机的计算机名
            </summary>
        </member>
        <member name="P:DotNet.Utilities.NetHelper.LANIP">
            <summary>
            获取本机的局域网IP
            </summary>        
        </member>
        <member name="P:DotNet.Utilities.NetHelper.WANIP">
            <summary>
            获取本机在Internet网络的广域网IP
            </summary>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.GetClientIP(System.Net.Sockets.Socket)">
            <summary>
            获取远程客户机的IP地址
            </summary>
            <param name="clientSocket">客户端的socket对象</param>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.CreateIPEndPoint(System.String,System.Int32)">
            <summary>
            创建一个IPEndPoint对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口号</param>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.CreateTcpListener">
            <summary>
            创建一个自动分配IP和端口的TcpListener对象
            </summary>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.CreateTcpListener(System.String,System.Int32)">
            <summary>
            创建一个TcpListener对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口</param>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.CreateTcpSocket">
            <summary>
            创建一个基于TCP协议的Socket对象
            </summary>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.CreateUdpSocket">
            <summary>
            创建一个基于UDP协议的Socket对象
            </summary>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.GetLocalPoint(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.GetLocalPoint_IP(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的IP地址
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.GetLocalPoint_Port(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的端口号
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.GetLocalPoint(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.GetLocalPoint_IP(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的IP地址
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.GetLocalPoint_Port(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的端口号
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.BindEndPoint(System.Net.Sockets.Socket,System.Net.IPEndPoint)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>
            <param name="endPoint">要绑定的终结点</param>
        </member>
        <member name="M:DotNet.Utilities.NetHelper.BindEndPoint(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>        
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口</param>
        </member>
        <member name="M:DotNet.Utilities.NetHelper.StartListen(System.Net.Sockets.Socket,System.Int32)">
            <summary>
            指定Socket对象执行监听，默认允许的最大挂起连接数为100
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
        </member>
        <member name="M:DotNet.Utilities.NetHelper.StartListen(System.Net.Sockets.Socket,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:DotNet.Utilities.NetHelper.StartListen(System.Net.Sockets.Socket,System.String,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="ip">监听的IP地址</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:DotNet.Utilities.NetHelper.Connect(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            连接到基于TCP协议的服务器,连接成功返回true，否则返回false
            </summary>
            <param name="socket">Socket对象</param>
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口号</param>     
        </member>
        <member name="M:DotNet.Utilities.NetHelper.SendMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:DotNet.Utilities.NetHelper.SendMsg(System.Net.Sockets.Socket,System.String)">
            <summary>
            使用UTF8编码格式以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:DotNet.Utilities.NetHelper.ReceiveMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式接收消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="buffer">接收消息的缓冲区</param>
        </member>
        <member name="M:DotNet.Utilities.NetHelper.ReceiveMsg(System.Net.Sockets.Socket)">
            <summary>
            以同步方式接收消息，并转换为UTF8编码格式的字符串,使用5000字节的默认缓冲区接收。
            </summary>
            <param name="socket">socket对象</param>        
        </member>
        <member name="M:DotNet.Utilities.NetHelper.Close(System.Net.Sockets.Socket)">
            <summary>
            关闭基于Tcp协议的Socket对象
            </summary>
            <param name="socket">要关闭的Socket对象</param>
        </member>
        <member name="M:DotNet.Utilities.NetHelper.SendEmail(System.String,System.String,System.String,System.Boolean)">
            <summary>
            发送电子邮件,所有SMTP配置信息均在config配置文件中system.net节设置.
            </summary>
            <param name="receiveEmail">接收电子邮件的地址</param>
            <param name="msgSubject">电子邮件的标题</param>
            <param name="msgBody">电子邮件的正文</param>
            <param name="IsEnableSSL">是否开启SSL</param>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.GetFileName(System.String)">
            <summary>
            获取文件的名字
            </summary>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.GetExtension(System.String)">
            <summary>
            获取文件扩展名
            </summary>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.CheckExtension(System.String)">
            <summary>
            获取文件类型
            </summary>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.ConvertFlv(System.String,System.String)">
            <summary>
            视频格式转为Flv
            </summary>
            <param name="vFileName">原视频文件地址</param>
            <param name="ExportName">生成后的Flv文件地址</param>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.CatchImg(System.String)">
            <summary>
            生成Flv视频的缩略图
            </summary>
            <param name="vFileName">视频文件地址</param>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.ChangeFilePhy(System.String,System.String,System.String)">
            <summary>
            转换文件并保存在指定文件夹下
            </summary>
            <param name="fileName">上传视频文件的路径（原文件）</param>
            <param name="playFile">转换后的文件的路径（网络播放文件）</param>
            <param name="imgFile">从视频文件中抓取的图片路径</param>
            <returns>成功:返回图片虚拟地址;失败:返回空字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.ChangeFileVir(System.String,System.String,System.String)">
            <summary>
            转换文件并保存在指定文件夹下
            </summary>
            <param name="fileName">上传视频文件的路径（原文件）</param>
            <param name="playFile">转换后的文件的路径（网络播放文件）</param>
            <param name="imgFile">从视频文件中抓取的图片路径</param>
            <returns>成功:返回图片虚拟地址;失败:返回空字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.MChangeFilePhy(System.String,System.String,System.String)">
            <summary>
            运行mencoder的视频解码器转换
            </summary>
        </member>
        <member name="T:DotNet.Utilities.ConnectCommand">
            <summary>
            Performs the connect to a Pop3 server and returns a Pop3 
            response indicating the attempt to connect results and the
            network stream to use for all subsequent Pop3 Commands.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ConnectCommand.#ctor(System.Net.Sockets.TcpClient,System.String,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.ConnectCommand"/> class.
            </summary>
            <remarks>
            Even though a network stream is provided to the base constructor the stream
            does not already exist so we have to send in a dummy stream until the actual
            connect has taken place.  Then we'll reset network stream to the 
            stream made available by the TcpClient.GetStream() to read the data returned
            after a connect.
            </remarks>
            <param name="client">The client.</param>
            <param name="hostname">The hostname.</param>
            <param name="port">The port.</param>
            <param name="useSsl">if set to <c>true</c> [use SSL].</param>
        </member>
        <member name="M:DotNet.Utilities.ConnectCommand.CreateRequestMessage">
            <summary>
            Creates the connect request message.
            </summary>
            <returns>A byte[] containing connect request message.</returns>
        </member>
        <member name="M:DotNet.Utilities.ConnectCommand.Execute(DotNet.Utilities.Pop3State)">
            <summary>
            Executes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConnectCommand.SetClientStream">
            <summary>
            Sets the client stream.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ConnectCommand.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>
            The <c>Pop3Response</c> containing the results of the
            Pop3 command execution.
            </returns>
        </member>
        <member name="T:DotNet.Utilities.DeleCommand">
            <summary>
            This class represents the Pop3 DELE command.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.DeleCommand.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.DeleCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="messageId">The message id.</param>
        </member>
        <member name="M:DotNet.Utilities.DeleCommand.CreateRequestMessage">
            <summary>
            Creates the DELE request message.
            </summary>
            <returns>
            The byte[] containing the DELE request message.
            </returns>
        </member>
        <member name="T:DotNet.Utilities.ListCommand">
            <summary>
            This class represents both the multiline and single line Pop3 LIST command.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ListCommand.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.ListCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="messageId">The message id.</param>
        </member>
        <member name="M:DotNet.Utilities.ListCommand.CreateRequestMessage">
            <summary>
            Creates the LIST request message.
            </summary>
            <returns>The byte[] containing the LIST request message.</returns>
        </member>
        <member name="M:DotNet.Utilities.ListCommand.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>A <c>ListResponse</c> containing the results of the Pop3 LIST command.</returns>
        </member>
        <member name="T:DotNet.Utilities.ListResponse">
            <summary>
            This class represents the response message 
            returned from both a single line and multi line 
            Pop3 LIST Command.
            </summary>
        </member>
        <member name="P:DotNet.Utilities.ListResponse.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:DotNet.Utilities.ListResponse.MessageNumber">
            <summary>
            Gets the message number.
            </summary>
            <value>The message number.</value>
        </member>
        <member name="P:DotNet.Utilities.ListResponse.Octets">
            <summary>
            Gets number of octets.
            </summary>
            <value>The number of octets.</value>
        </member>
        <member name="M:DotNet.Utilities.ListResponse.#ctor(DotNet.Utilities.Pop3Response,System.Collections.Generic.List{DotNet.Utilities.Pop3ListItem})">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.ListResponse"/> class.
            </summary>
            <param name="response">The response.</param>
            <param name="items">The items.</param>
        </member>
        <member name="T:DotNet.Utilities.MailMessageEx">
            <summary>
            This class adds a few internet mail headers not already exposed by the 
            System.Net.MailMessage.  It also provides support to encapsulate the
            nested mail attachments in the Children collection.
            </summary>
        </member>
        <member name="P:DotNet.Utilities.MailMessageEx.MessageNumber">
            <summary>
            Gets or sets the message number of the MailMessage on the POP3 server.
            </summary>
            <value>The message number.</value>
        </member>
        <member name="P:DotNet.Utilities.MailMessageEx.Children">
            <summary>
            Gets the children MailMessage attachments.
            </summary>
            <value>The children MailMessage attachments.</value>
        </member>
        <member name="P:DotNet.Utilities.MailMessageEx.DeliveryDate">
            <summary>
            Gets the delivery date.
            </summary>
            <value>The delivery date.</value>
        </member>
        <member name="P:DotNet.Utilities.MailMessageEx.ReturnAddress">
            <summary>
            Gets the return address.
            </summary>
            <value>The return address.</value>
        </member>
        <member name="P:DotNet.Utilities.MailMessageEx.Routing">
            <summary>
            Gets the routing.
            </summary>
            <value>The routing.</value>
        </member>
        <member name="P:DotNet.Utilities.MailMessageEx.MessageId">
            <summary>
            Gets the message id.
            </summary>
            <value>The message id.</value>
        </member>
        <member name="P:DotNet.Utilities.MailMessageEx.MimeVersion">
            <summary>
            Gets the MIME version.
            </summary>
            <value>The MIME version.</value>
        </member>
        <member name="P:DotNet.Utilities.MailMessageEx.ContentId">
            <summary>
            Gets the content id.
            </summary>
            <value>The content id.</value>
        </member>
        <member name="P:DotNet.Utilities.MailMessageEx.ContentDescription">
            <summary>
            Gets the content description.
            </summary>
            <value>The content description.</value>
        </member>
        <member name="P:DotNet.Utilities.MailMessageEx.ContentDisposition">
            <summary>
            Gets the content disposition.
            </summary>
            <value>The content disposition.</value>
        </member>
        <member name="P:DotNet.Utilities.MailMessageEx.ContentType">
            <summary>
            Gets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="M:DotNet.Utilities.MailMessageEx.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.MailMessageEx"/> class.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.MailMessageEx.GetHeader(System.String)">
            <summary>
            Gets the header.
            </summary>
            <param name="header">The header.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MailMessageEx.CreateMailMessageFromEntity(DotNet.Utilities.MimeEntity)">
            <summary>
            Creates the mail message from entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MailMessageEx.CreateMailAddress(System.String)">
            <summary>
            Creates the mail address.
            </summary>
            <param name="address">The address.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MailMessageEx.PopulateAddressList(System.String,System.Net.Mail.MailAddressCollection)">
            <summary>
            Populates the address list.
            </summary>
            <param name="addressList">The address list.</param>
            <param name="recipients">The recipients.</param>
        </member>
        <member name="M:DotNet.Utilities.MailMessageEx.GetMailAddresses(System.String)">
            <summary>
            Gets the mail addresses.
            </summary>
            <param name="addressList">The address list.</param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.NoopCommand">
            <summary>
            This class represents the Pop3 NOOP command.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.NoopCommand.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.NoopCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:DotNet.Utilities.NoopCommand.CreateRequestMessage">
            <summary>
            Creates the NOOP request message.
            </summary>
            <returns>
            The byte[] containing the NOOP request message.
            </returns>
        </member>
        <member name="T:DotNet.Utilities.PassCommand">
            <summary>
            This class represents the Pop3 PASS command.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.PassCommand.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.PassCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:DotNet.Utilities.PassCommand.CreateRequestMessage">
            <summary>
            Creates the PASS request message.
            </summary>
            <returns>
            The byte[] containing the PASS request message.
            </returns>
        </member>
        <member name="T:DotNet.Utilities.Pop3Client">
            <summary>
            The Pop3Client class provides a wrapper for the Pop3 commands
            that can be executed against a Pop3Server.  This class will 
            execute and return results for the various commands that are 
            executed.
            </summary>
        </member>
        <member name="E:DotNet.Utilities.Pop3Client.Trace">
            <summary>
            Traces the various command objects that executed during this objects
            lifetime.
            </summary>
        </member>
        <member name="P:DotNet.Utilities.Pop3Client.Hostname">
            <summary>
            Gets the hostname.
            </summary>
            <value>The hostname.</value>
        </member>
        <member name="P:DotNet.Utilities.Pop3Client.Port">
            <summary>
            Gets the port.
            </summary>
            <value>The port.</value>
        </member>
        <member name="P:DotNet.Utilities.Pop3Client.UseSsl">
            <summary>
            Gets a value indicating whether [use SSL].
            </summary>
            <value><c>true</c> if [use SSL]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:DotNet.Utilities.Pop3Client.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:DotNet.Utilities.Pop3Client.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:DotNet.Utilities.Pop3Client.CurrentState">
            <summary>
            Gets the state of the current.
            </summary>
            <value>The state of the current.</value>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.Pop3Client"/> class using the default POP3 port 110
            without using SSL.
            </summary>
            <param name="hostname">The hostname.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.#ctor(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.Pop3Client"/> class using the default POP3 port 110.
            </summary>
            <param name="hostname">The hostname.</param>
            <param name="useSsl">if set to <c>true</c> [use SSL].</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.#ctor(System.String,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.Pop3Client"/> class.
            </summary>
            <param name="hostname">The hostname.</param>
            <param name="port">The port.</param>
            <param name="useSsl">if set to <c>true</c> [use SSL].</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.Pop3Client"/> class.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.EnsureConnection">
            <summary>
            Checks the connection.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.SetState(DotNet.Utilities.Pop3State)">
            <summary>
            Resets the state.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.EnsureResponse(DotNet.Utilities.Pop3Response,System.String)">
            <summary>
            Ensures the response.
            </summary>
            <param name="response">The response.</param>
            <param name="error">The error.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.EnsureResponse(DotNet.Utilities.Pop3Response)">
            <summary>
            Ensures the response.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.TraceCommand``2(``0)">
            <summary>
            Traces the command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.Connect">
            <summary>
            Connects this instance and properly sets the 
            client stream to Use Ssl if it is specified.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.SetClientStream(System.IO.Stream)">
            <summary>
            Sets the client stream.  If UseSsl <c>true</c> then wrap 
            the client's <c>NetworkStream</c> in an <c>SslStream</c>, if UseSsl <c>false</c> 
            then set the client stream to the <c>NetworkStream</c>
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.Authenticate">
            <summary>
            Authenticates this instance.
            </summary>
            <remarks>A successful execution of this method will result in a Current State of Transaction.
            Unsuccessful USER or PASS commands can be reattempted by resetting the Username or Password 
            properties and re-execution of the methods.</remarks>
            <exception cref="T:DotNet.Utilities.Pop3Exception">
            If the Pop3Server is unable to be connected.
            If the User command is unable to be successfully executed.
            If the Pass command is unable to be successfully executed.
            </exception>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.Dele(DotNet.Utilities.Pop3ListItem)">
            <summary>
            Executes the POP3 DELE command.
            </summary>
            <param name="item">The item.</param>
            /// <exception cref="T:DotNet.Utilities.Pop3Exception">If the DELE command was unable to be executed successfully.</exception>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.Noop">
            <summary>
            Executes the POP3 NOOP command.
            </summary>
            <exception cref="T:DotNet.Utilities.Pop3Exception">If the NOOP command was unable to be executed successfully.</exception>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.Rset">
            <summary>
            Executes the POP3 RSET command.
            </summary>
            <exception cref="T:DotNet.Utilities.Pop3Exception">If the RSET command was unable to be executed successfully.</exception>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.Stat">
            <summary>
            Executes the POP3 STAT command.
            </summary>
            <returns>A Stat object containing the results of STAT command.</returns>
            <exception cref="T:DotNet.Utilities.Pop3Exception">If the STAT command was unable to be executed successfully.</exception>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.List">
            <summary>
            Executes the POP3 List command.
            </summary>
            <returns>A generic List of Pop3Items containing the results of the LIST command.</returns>
            <exception cref="T:DotNet.Utilities.Pop3Exception">If the LIST command was unable to be executed successfully.</exception>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.List(System.Int32)">
            <summary>
            Lists the specified message.
            </summary>
            <param name="message">The message.</param>
            <returns>A <c>Pop3ListItem</c> for the requested Pop3Item.</returns>
            <exception cref="T:DotNet.Utilities.Pop3Exception">If the LIST command was unable to be executed successfully for the provided message id.</exception>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.RetrMimeEntity(DotNet.Utilities.Pop3ListItem)">
            <summary>
            Retrs the specified message.
            </summary>
            <param name="item">The item.</param>
            <returns>A MimeEntity for the requested Pop3 Mail Item.</returns>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.RetrMailMessageEx(DotNet.Utilities.Pop3ListItem)">
            <summary>
            Retrs the mail message ex.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.Quit">
            <summary>
            Executes the Pop3 QUIT command.
            </summary>
            <exception cref="T:DotNet.Utilities.Pop3Exception">If the quit command returns a -ERR server message.</exception>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.ExecuteCommand``2(``1)">
            <summary>
            Provides a common way to execute all commands.  This method
            validates the connection, traces the command and finally
            validates the response message for a -ERR response.
            </summary>
            <param name="command">The command.</param>
            <returns>The Pop3Response for the provided command</returns>
            <exception cref="T:DotNet.Utilities.Pop3Exception">If the HostMessage does not start with '+OK'.</exception>
            <exception cref="T:DotNet.Utilities.Pop3Exception">If the client is no longer connected.</exception>
        </member>
        <member name="M:DotNet.Utilities.Pop3Client.Disconnect">
            <summary>
            Disconnects this instance.
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Pop3Command`1">
            <summary>
            This class represents a generic Pop3 command and 
            encapsulates the major operations when executing a
            Pop3 command against a Pop3 Server.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:DotNet.Utilities.Pop3Command`1.IsMultiline">
            <summary>
            Sets a value indicating whether this instance is multiline.
            </summary>
            <value>
            	<c>true</c> if this instance is multiline; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.#ctor(System.IO.Stream,System.Boolean,DotNet.Utilities.Pop3State)">
            <summary>
            Initializes a new instance of the <see cref="!:Pop3CommandBase"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="isMultiline">if set to <c>true</c> [is multiline].</param>
            <param name="validExecuteState">State of the valid execute.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.CreateRequestMessage">
            <summary>
            Abstract method intended for inheritors to 
            build out the byte[] request message for 
            the specific command.
            </summary>
            <returns>The byte[] containing the request message.</returns>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.Send(System.Byte[])">
            <summary>
            Sends the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.Execute(DotNet.Utilities.Pop3State)">
            <summary>
            Executes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.EnsurePop3State(DotNet.Utilities.Pop3State)">
            <summary>
            Ensures the state of the POP3.
            </summary>
            <param name="currentState">State of the current.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>The <c>Pop3Response</c> containing the results of the
            Pop3 command execution.</returns>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.GetResponse">
            <summary>
            Gets the response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.Receive(System.AsyncCallback)">
            <summary>
            Receives the specified callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.WriteReceivedBytesToBuffer(System.Int32)">
            <summary>
            Writes the received bytes to buffer.
            </summary>
            <param name="bytesReceived">The bytes received.</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.GetSingleLineResponseCallback(System.IAsyncResult)">
            <summary>
            Gets the single line response callback.
            </summary>
            <param name="ar">The ar.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.GetMultiLineResponseCallback(System.IAsyncResult)">
            <summary>
            Gets the multi line response callback.
            </summary>
            <param name="ar">The ar.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.GetRequestMessage(System.String[])">
            <summary>
            Gets the request message.
            </summary>
            <param name="args">The args.</param>
            <returns>A byte[] request message to send to the host.</returns>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.StripPop3HostMessage(System.Byte[],System.String)">
            <summary>
            Strips the POP3 host message.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="header">The header.</param>
            <returns>A <c>MemoryStream</c> without the Pop3 server message.</returns>
        </member>
        <member name="M:DotNet.Utilities.Pop3Command`1.GetResponseLines(System.IO.MemoryStream)">
            <summary>
            Gets the response lines.
            </summary>
            <param name="stream">The stream.</param>
            <returns>A string[] of Pop3 response lines.</returns>
        </member>
        <member name="T:DotNet.Utilities.Pop3Commands">
            <summary>
            This class contains a string representation of Pop3 commands
            that can be executed.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Commands.User">
            <summary>
            The USER command followed by a space.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Commands.Crlf">
            <summary>
            The CRLF escape sequence.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Commands.Quit">
            <summary>
            The QUIT command followed by a CRLF.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Commands.Stat">
            <summary>
            The STAT command followed by a CRLF.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Commands.List">
            <summary>
            The LIST command followed by a space.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Commands.Retr">
            <summary>
            The RETR command followed by a space.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Commands.Noop">
            <summary>
            The NOOP command followed by a CRLF.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Commands.Dele">
            <summary>
            The DELE command followed by a space.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Commands.Rset">
            <summary>
            The RSET command followed by a CRLF.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Commands.Pass">
            <summary>
            The PASS command followed by a space.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Commands.Top">
            <summary>
            The TOP command followed by a space.
            </summary>
        </member>
        <member name="T:DotNet.Utilities.Pop3Exception">
            <summary>
            This class represents a Pop3 Exception.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Pop3Exception.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.Pop3Exception"/> class.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Pop3Exception.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.Pop3Exception"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Exception.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.Pop3Exception"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.Pop3Exception"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:DotNet.Utilities.Pop3ListItem">
            <summary>
            This class represents an item returned from the 
            Pop3 LIST command.
            </summary>
        </member>
        <member name="P:DotNet.Utilities.Pop3ListItem.MessageId">
            <summary>
            Gets or sets the message number.
            </summary>
            <value>The message number.</value>
        </member>
        <member name="P:DotNet.Utilities.Pop3ListItem.Octets">
            <summary>
            Gets or sets the octets.
            </summary>
            <value>The octets.</value>
        </member>
        <member name="M:DotNet.Utilities.Pop3ListItem.#ctor(System.Int32,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.Pop3ListItem"/> class.
            </summary>
            <param name="messageNumber">The message number.</param>
            <param name="octets">The octets.</param>
        </member>
        <member name="T:DotNet.Utilities.Pop3Response">
            <summary>
            This class represents a Pop3 response message and
            is intended to be used as a base class for all other
            Pop3Response types.
            </summary>
        </member>
        <member name="P:DotNet.Utilities.Pop3Response.ResponseContents">
            <summary>
            Gets the response contents.
            </summary>
            <value>The response contents.</value>
        </member>
        <member name="P:DotNet.Utilities.Pop3Response.StatusIndicator">
            <summary>
            Gets a value indicating whether message was <c>true</c> +OK or <c>false</c> -ERR
            </summary>
            <value><c>true</c> if [status indicator]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:DotNet.Utilities.Pop3Response.HostMessage">
            <summary>
            Gets the host message.
            </summary>
            <value>The host message.</value>
        </member>
        <member name="M:DotNet.Utilities.Pop3Response.#ctor(System.Byte[],System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.Pop3Response"/> class.
            </summary>
            <param name="responseContents">The response contents.</param>
            <param name="hostMessage">The host message.</param>
            <param name="statusIndicator">if set to <c>true</c> [status indicator].</param>
        </member>
        <member name="M:DotNet.Utilities.Pop3Response.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="responseContents">The response contents.</param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.Pop3Responses">
            <summary>
            This class contains the Positive and Negative starting response strings
            that can be returned from a Pop3 server.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Responses.Ok">
            <summary>
            The +OK starting of a positive response from the server.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3Responses.Err">
            <summary>
            The -ERR starting of a negative response from the server.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3State.Unknown">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3State.Authorization">
            <summary>
            Connected to Pop3 server, but not authorized.
            May issue any of the following commands QUIT, USER, PASS
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3State.Transaction">
            <summary>
            Authorized to Pop3 server, can issue any of the following commands;
            STAT, LIST, RETR, DELE, RSET
            </summary>
        </member>
        <member name="F:DotNet.Utilities.Pop3State.Update">
            <summary>
            Quit command was sent to server indicating deleted
            messages should be removed.
            </summary>
        </member>
        <member name="T:DotNet.Utilities.QuitCommand">
            <summary>
            This class represents the Pop3 QUIT command.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.QuitCommand.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.QuitCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:DotNet.Utilities.QuitCommand.CreateRequestMessage">
            <summary>
            Creates the Quit request message.
            </summary>
            <returns>
            The byte[] containing the QUIT request message.
            </returns>
        </member>
        <member name="T:DotNet.Utilities.RetrCommand">
            <summary>
            This class represents the Pop3 RETR command.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.RetrCommand.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.RetrCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:DotNet.Utilities.RetrCommand.CreateRequestMessage">
            <summary>
            Creates the RETR request message.
            </summary>
            <returns>
            The byte[] containing the RETR request message.
            </returns>
        </member>
        <member name="M:DotNet.Utilities.RetrCommand.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>
            The <c>Pop3Response</c> containing the results of the
            Pop3 command execution.
            </returns>
        </member>
        <member name="T:DotNet.Utilities.RetrResponse">
            <summary>
            This class represents a RETR response message resulting
            from a Pop3 RETR command execution against a Pop3 Server.
            </summary>
        </member>
        <member name="P:DotNet.Utilities.RetrResponse.MessageLines">
            <summary>
            Gets the message lines.
            </summary>
            <value>The Pop3 message lines.</value>
        </member>
        <member name="M:DotNet.Utilities.RetrResponse.#ctor(DotNet.Utilities.Pop3Response,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.RetrResponse"/> class.
            </summary>
            <param name="response">The response.</param>
            <param name="messageLines">The message lines.</param>
        </member>
        <member name="T:DotNet.Utilities.RsetCommand">
            <summary>
            This command represents the Pop3 RSET command.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.RsetCommand.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.RsetCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:DotNet.Utilities.RsetCommand.CreateRequestMessage">
            <summary>
            Creates the RSET request message.
            </summary>
            <returns>
            The byte[] containing the RSET request message.
            </returns>
        </member>
        <member name="T:DotNet.Utilities.Stat">
            <summary>
            This class represents the results from the execution 
            of a pop3 STAT command.
            </summary>
        </member>
        <member name="P:DotNet.Utilities.Stat.MessageCount">
            <summary>
            Gets or sets the message count.
            </summary>
            <value>The message count.</value>
        </member>
        <member name="P:DotNet.Utilities.Stat.Octets">
            <summary>
            Gets or sets the octets.
            </summary>
            <value>The octets.</value>
        </member>
        <member name="M:DotNet.Utilities.Stat.#ctor(System.Int32,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.Stat"/> class.
            </summary>
            <param name="messageCount">The message count.</param>
            <param name="octets">The octets.</param>
        </member>
        <member name="T:DotNet.Utilities.StatCommand">
            <summary>
            This class represents the Pop3 STAT command.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.StatCommand.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.StatCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:DotNet.Utilities.StatCommand.CreateRequestMessage">
            <summary>
            Creates the STAT request message.
            </summary>
            <returns>
            The byte[] containing the STAT request message.
            </returns>
        </member>
        <member name="M:DotNet.Utilities.StatCommand.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>
            The <c>Pop3Response</c> containing the results of the
            Pop3 command execution.
            </returns>
        </member>
        <member name="T:DotNet.Utilities.StatResponse">
            <summary>
            This class represents the resulting Pop3 response from a STAT command
            executed against a Pop3 server.
            </summary>
        </member>
        <member name="P:DotNet.Utilities.StatResponse.MessageCount">
            <summary>
            Gets the message count.
            </summary>
            <value>The message count.</value>
        </member>
        <member name="P:DotNet.Utilities.StatResponse.Octets">
            <summary>
            Gets the octets.
            </summary>
            <value>The octets.</value>
        </member>
        <member name="M:DotNet.Utilities.StatResponse.#ctor(DotNet.Utilities.Pop3Response,System.Int32,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.StatResponse"/> class.
            </summary>
            <param name="response">The response.</param>
            <param name="messageCount">The message count.</param>
            <param name="octets">The octets.</param>
        </member>
        <member name="M:DotNet.Utilities.TopCommand.#ctor(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.TopCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="messageNumber">The message number.</param>
            <param name="lineCount">The line count.</param>
        </member>
        <member name="M:DotNet.Utilities.TopCommand.CreateRequestMessage">
            <summary>
            Abstract method intended for inheritors to
            build out the byte[] request message for
            the specific command.
            </summary>
            <returns>
            The byte[] containing the request message.
            </returns>
        </member>
        <member name="M:DotNet.Utilities.TopCommand.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>
            The <c>Pop3Response</c> containing the results of the
            Pop3 command execution.
            </returns>
        </member>
        <member name="T:DotNet.Utilities.UserCommand">
            <summary>
            This command represents a Pop3 USER command.
            </summary>
        </member>
        <member name="M:DotNet.Utilities.UserCommand.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNet.Utilities.UserCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="username">The username.</param>
        </member>
        <member name="M:DotNet.Utilities.UserCommand.CreateRequestMessage">
            <summary>
            Creates the USER request message.
            </summary>
            <returns>
            The byte[] containing the USER request message.
            </returns>
        </member>
        <member name="T:DotNet.Utilities.MailHelper">
            <summary>
            邮件操作类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.MailHelper.GetEMailLoginUrl(System.String)">
            <summary>
            获取Email登陆地址
            </summary>
            <param name="email">email地址</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MailHelper.sendMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="mailSubjct">邮件主题</param>
            <param name="mailBody">邮件正文</param>
            <param name="mailFrom">发送者</param>
            <param name="mailAddress">邮件地址列表</param>
            <param name="HostIP">主机IP</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MailHelper.sendMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
            <summary>
            发送邮件（要求登陆）
            </summary>
            <param name="mailSubjct">邮件主题</param>
            <param name="mailBody">邮件正文</param>
            <param name="mailFrom">发送者</param>
            <param name="mailAddress">接收地址列表</param>
            <param name="HostIP">主机IP</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MailHelper.sendMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            发送邮件
            </summary>
            <param name="mailSubjct">邮件主题</param>
            <param name="mailBody">邮件正文</param>
            <param name="mailFrom">发送者</param>
            <param name="mailAddress">接收地址列表</param>
            <param name="HostIP">主机IP</param>
            <param name="filename">附件名</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <param name="ssl">加密类型</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.MailHelper.sendMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Int32,System.String,System.String,System.Boolean,System.String,System.Boolean@)">
            <summary>
            发送邮件
            </summary>
            <param name="mailSubjct"></param>
            <param name="mailBody"></param>
            <param name="mailFrom"></param>
            <param name="mailAddress"></param>
            <param name="HostIP"></param>
            <param name="port"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="ssl"></param>
            <param name="replyTo"></param>
            <param name="sendOK"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.配置文件操作类.ConfigHelper_sufei.GetValue(System.String)">
            <summary>
            根据Key取Value值
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:DotNet.Utilities.配置文件操作类.ConfigHelper_sufei.SetValue(System.String,System.String)">
            <summary>
            根据Key修改Value
            </summary>
            <param name="key">要修改的Key</param>
            <param name="value">要修改为的值</param>
        </member>
        <member name="M:DotNet.Utilities.配置文件操作类.ConfigHelper_sufei.Add(System.String,System.String)">
            <summary>
            添加新的Key ，Value键值对
            </summary>
            <param name="key">Key</param>
            <param name="value">Value</param>
        </member>
        <member name="M:DotNet.Utilities.配置文件操作类.ConfigHelper_sufei.Remove(System.String)">
            <summary>
            根据Key删除项
            </summary>
            <param name="key">Key</param>
        </member>
        <member name="T:DotNet.Utilities.RandomHelper">
            <summary>
            使用Random类生成伪随机数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.RandomHelper.GetRandomInt(System.Int32,System.Int32)">
            <summary>
            生成一个指定范围的随机整数，该随机数范围包括最小值，但不包括最大值
            </summary>
            <param name="minNum">最小值</param>
            <param name="maxNum">最大值</param>
        </member>
        <member name="M:DotNet.Utilities.RandomHelper.GetRandomDouble">
            <summary>
            生成一个0.0到1.0的随机小数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.RandomHelper.GetRandomArray``1(``0[])">
            <summary>
            对一个数组进行随机排序
            </summary>
            <typeparam name="T">数组的类型</typeparam>
            <param name="arr">需要随机排序的数组</param>
        </member>
        <member name="M:DotNet.Utilities.RandomHelper.GetRandomCode(System.String,System.Int32)">
            <summary>
            从字符串里随机得到，规定个数的字符串.
            </summary>
            <param name="allChar">字符规范，如果等于null时，默认值为："1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,i,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z"</param>
            <param name="codeCount">需要生成的随机数个数</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.RandomHelper.GetDateRnd">
            <summary>取得随机数(数字),用yyMMddhhmmss + (xxx),共15位数字</summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.RandomHelper.GetRndKey">
            <summary> 取得随机数(字母+数字),用yyMMddhhmmss + (xxx),共15位字母或数字,</summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.RandomHelper.GetRndNum(System.Int32,System.Boolean)">
            <summary> 取得n位随机整数,:45546</summary>
            <param name="n">随机数长度</param>
            <param name="isStr">true=随机字母和整数，false=随机整数</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.RandomHelper.GetRndNext(System.Int32,System.Int32)">
            <summary>取得区间中的随机数,例如:getRndNext(14,17),将返回14,15,16</summary>
            <param name="min">随机数的最小值</param> 
            <param name="max">随机数的最大值(结果小于该值)</param> 
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.RandomHelper.GetRndNextDecimal(System.Decimal,System.Decimal)">
            <summary>取得区间中的随机数,例如:getRndNext(14,17),将返回14,15,16</summary>
            <param name="min">随机数的最小值</param> 
            <param name="max">随机数的最大值(结果小于该值)</param> 
            <returns></returns>
        </member>
        <member name="P:DotNet.Utilities.HTMLHelper.CookieContainer">
            <summary> 
            Cookie
            </summary> 
        </member>
        <member name="P:DotNet.Utilities.HTMLHelper.Encoding">
            <summary> 
            语言
            </summary> 
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.GetHtml(System.String,System.String,System.Boolean,System.Net.CookieContainer)">
            <summary>
            获取HTML
            </summary>
            <param name="url">地址</param>
            <param name="postData">post 提交的字符串</param>
            <param name="isPost">是否是post</param>
            <param name="cookieContainer">CookieContainer</param>
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.GetHtml(System.String,System.Net.CookieContainer)">
            <summary>
            获取HTML
            </summary>
            <param name="url">地址</param>
            <param name="cookieContainer">CookieContainer</param>
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.GetStream(System.String,System.Net.CookieContainer)">
            <param name="url">地址</param>
            <param name="cookieContainer">cookieContainer</param>
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.NoHTML(System.String)">
            <summary>   
            清除HTML标记   
            </summary>   
            <param name="NoHTML">包括HTML的源码</param>   
            <returns>已经去除后的文字</returns>   
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.GetHref(System.String)">
            <summary>
            获取页面的链接正则
            </summary>
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.GetImgSrc(System.String,System.String)">
            <summary>
            匹配页面的图片地址
            </summary>
            <param name="imgHttp">要补充的http://路径信息</param>
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.GetImg(System.String,System.String)">
            <summary>
            匹配<img src="" />中的图片路径实际链接
            </summary>
            <param name="ImgString"><img src="" />字符串</param>
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.Get_Http(System.String)">
            <summary>
            以GET方式抓取远程页面内容
            </summary>
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.Post_Http(System.String,System.String,System.String)">
            <summary>
            以POST方式抓取远程页面内容
            </summary>
            <param name="postData">参数列表</param>
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.ZipHtml(System.String)">
            <summary>
            压缩HTML输出
            </summary>
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.DelHtml(System.String,System.String)">
            <summary>
            过滤指定HTML标签
            </summary>
            <param name="s_TextStr">要过滤的字符</param>
            <param name="html_Str">a img p div</param>
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.File(System.String,System.Web.UI.Page)">
            <summary>
            加载文件块
            </summary>
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.CSS(System.String,System.Web.UI.Page)">
            <summary>
            加载CSS样式文件
            </summary>
        </member>
        <member name="M:DotNet.Utilities.HTMLHelper.JS(System.String,System.Web.UI.Page)">
            <summary>
            加载javascript脚本文件
            </summary>
        </member>
        <member name="T:DotNet.Utilities.JavaScriptPlus">
            <summary>
            JavaScript 操作类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.JavaScriptPlus.ResponseScript(System.Web.UI.Page,System.String)">
            <summary>
            输出自定义脚本信息
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="script">输出脚本</param>
        </member>
        <member name="M:DotNet.Utilities.JavaScriptPlus.GoHistory(System.Int32)">
            <summary>
            回到历史页面
            </summary>
            <param name="value">-1/1</param>
        </member>
        <member name="M:DotNet.Utilities.JavaScriptPlus.CloseWindow">
            <summary>
            关闭当前窗口
            </summary>
        </member>
        <member name="M:DotNet.Utilities.JavaScriptPlus.RefreshParent(System.String)">
            <summary>
            刷新父窗口
            </summary>
        </member>
        <member name="M:DotNet.Utilities.JavaScriptPlus.RefreshOpener">
            <summary>
            刷新打开窗口
            </summary>
        </member>
        <member name="M:DotNet.Utilities.JavaScriptPlus.JavaScriptLocationHref(System.String)">
            <summary>
            转向Url指定的页面
            </summary>
            <param name="url">连接地址</param>
        </member>
        <member name="M:DotNet.Utilities.JavaScriptPlus.ShowModalDialogWindow(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            打开指定大小位置的模式对话框
            </summary>
            <param name="webFormUrl">连接地址</param>
            <param name="width">宽</param>
            <param name="height">高</param>
            <param name="top">距离上位置</param>
            <param name="left">距离左位置</param>
        </member>
        <member name="M:DotNet.Utilities.JavaScriptPlus.ShowModalDialogWindow(System.String,System.String)">
            <summary>
            打开模式对话框
            </summary>
            <param name="webFormUrl">链接地址</param>
            <param name="features"></param>
        </member>
        <member name="M:DotNet.Utilities.JavaScriptPlus.ShowModalDialogJavascript(System.String,System.String)">
            <summary>
            打开模式对话框
            </summary>
            <param name="webFormUrl"></param>
            <param name="features"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.JavaScriptPlus.OpenWebFormSize(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            打开指定大小的新窗体
            </summary>
            <param name="url">地址</param>
            <param name="width">宽</param>
            <param name="heigth">高</param>
            <param name="top">头位置</param>
            <param name="left">左位置</param>
        </member>
        <member name="M:DotNet.Utilities.JavaScriptPlus.JavaScriptExitIfream(System.String)">
            <summary>
            页面跳转（跳出框架）
            </summary>
            <param name="url"></param>
        </member>
        <member name="T:DotNet.Utilities.DownLoadHelper">
            <summary>
            文件下载帮助类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.DownLoadHelper.ResponseFile(System.Web.HttpRequest,System.Web.HttpResponse,System.String,System.String,System.Int64)">
            <summary>
             输出硬盘文件，提供下载 支持大文件、续传、速度限制、资源占用小
            </summary>
            <param name="_Request">Page.Request对象</param>
            <param name="_Response">Page.Response对象</param>
            <param name="_fileName">下载文件名</param>
            <param name="_fullPath">带文件名下载路径</param>
            <param name="_speed">每秒允许下载的字节数</param>
            <returns>返回是否成功</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:DotNet.Utilities.AppMessage" -->
        <member name="F:DotNet.Utilities.AppMessage.MSG0000">
            <summary>
            提示信息.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0001">
            <summary>
            发生未知错误.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0002">
            <summary>
            数据库联接不正常.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0003">
            <summary>
            WebService联接不正常.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0004">
            <summary>
            任何数据未被修改.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0005">
            <summary>
            记录未找到,可能已被其他人删除.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0006">
            <summary>
            数据已被其他人修改,请按F5键,重新刷新获得数据.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0007">
            <summary>
            '{O}'不允许为空,请输入.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0008">
            <summary>
            {0} 已存在,不可以重复.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0009">
            <summary>
            新增成功.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0010">
            <summary>
            更新成功.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0011">
            <summary>
            保存成功.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0012">
            <summary>
            批量保存成功.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0013">
            <summary>
            删除成功.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0014">
            <summary>
            批量删除成功.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0015">
            <summary>
            您确认删除吗?
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0016">
            <summary>
            您确认删除 '{0}'吗?
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0017">
            <summary>
            当前记录不允许被删除.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0018">
            <summary>
            当前记录 '{0}' 不允许被删除.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0019">
            <summary>
            当前记录不允许被编辑,请按F5键,重新获取数据最新数据.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0020">
            <summary>
            当前记录 '{0}' 不允许被编辑,请按F5键,重新获取数据最新数据.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0021">
            <summary>
            当前记录已是第一条记录.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0022">
            <summary>
            当前记录已是最后一条记录.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0023">
            <summary>
            请至少选择一项.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0024">
            <summary>
            请至少选择一项 '{0}'.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0025">
            <summary>
            '{0}'不能大于'{1}'.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0026">
            <summary>
            '{0}'不能小于'{1}'.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0027">
            <summary>
            '{0}'不能等于'{1}'.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0028">
            <summary>
            输入的'{0}'不是有效的日期.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0029">
            <summary>
            输入的'{0}'不是有效的字符.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0030">
            <summary>
            输入的'{0}'不是有效的数字.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0031">
            <summary>
            输入的'{0}'不是有效的金额.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:DotNet.Utilities.AppMessage.MSG0032" -->
        <member name="F:DotNet.Utilities.AppMessage.MSG0033">
            <summary>
            数据已经被引用,有关联数据在
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0034">
            <summary>
            数据已经被引用,有关联数据在.是否强制删除数据?
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0035">
            <summary>
            {0} 有子节点不允许被删除.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0036">
            <summary>
            {0} 不能移动到 {1}.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0037">
            <summary>
            {0} 下的子节点不能移动到 {1}.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0038">
            <summary>
            确认移动 {0} 到 {1} 吗?
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0039">
            <summary>
            '{0}'不等于'{1}'.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0040">
            <summary>
            {0} 错误.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0041">
            <summary>
            确认审核通过吗?.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0042">
            <summary>
            确认驳回吗?.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0043">
            <summary>
            成功锁定数据.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0044">
            <summary>
            不能锁定数据.
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0045">
            <summary>
            数据被修改提示
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0046">
            <summary>
            最近 {0} 次内密码不能重复。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0047">
            <summary>
            密码已过期，账户被锁定，请联系系统管理员。
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0065">
            <summary>
            数据已经改变，不保存数据？
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0075">
            <summary>
            您确认移除吗?
            </summary>
        </member>
        <member name="F:DotNet.Utilities.AppMessage.MSG0076">
            <summary>
            您确认移除 '{0}'吗?
            </summary>
        </member>
        <member name="M:DotNet.Utilities.AppMessage.Format(System.String,System.String[])">
            <summary>
            格式化一个资源字符串
            </summary>
            <param name="value">目标字符串</param>
            <param name="messages">传入的信息</param>
            <returns>字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.AppMessage.GetMessage(System.String)">
            <summary>
            读取一个资源定义
            </summary>
            <param name="id">资源代码</param>
            <returns>字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.AppMessage.GetMessage(System.String,System.String[])">
            <summary>
            读取一个资源定义
            </summary>
            <param name="id">资源代码</param>
            <param name="messages">传入的信息</param>
            <returns>字符串</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:DotNet.Utilities.ResourceManager" -->
        <!-- Badly formed XML comment ignored for member "T:DotNet.Utilities.ResourceManagerWrapper" -->
        <!-- Badly formed XML comment ignored for member "T:DotNet.Utilities.Resources" -->
        <member name="M:DotNet.Utilities.Resources.Set(System.String,System.String)">
            <summary>
            JiRiGaLa 2007.05.02
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.UpLoadFiles">
            <summary>
            UpLoadFiles 的摘要说明
            </summary>
        </member>
        <member name="M:DotNet.Utilities.UpLoadFiles.UploadFile(System.String,System.Int32,System.String[],System.Web.UI.HtmlControls.HtmlInputFile,System.String@,System.Int32@)">
            <summary>
            上传文件
            </summary>
            <param name="filePath">保存文件地址</param>
            <param name="maxSize">文件最大大小</param>
            <param name="fileType">文件后缀类型</param>
            <param name="TargetFile">控件名</param>
            <param name="saveFileName">保存后的文件名和地址</param>
            <param name="fileSize">文件大小</param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.DirFileHelper">
            <summary>
            文件操作夹
            </summary>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.IsExistDirectory(System.String)">
            <summary>
            检测指定目录是否存在
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.IsExistFile(System.String)">
            <summary>
            检测指定文件是否存在,如果存在则返回true。
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetFileNames(System.String)">
            <summary>
            获取指定目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetDirectories(System.String)">
            <summary>
            获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetFileNames(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.IsEmptyDirectory(System.String)">
            <summary>
            检测指定目录是否为空
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.Contains(System.String,System.String)">
            <summary>
            检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>        
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.Contains(System.String,System.String,System.Boolean)">
            <summary>
            检测指定目录中是否存在指定的文件
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param> 
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.CreateDir(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="dir">要创建的目录路径包括目录名</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.DeleteDir(System.String)">
            <summary>
            删除目录
            </summary>
            <param name="dir">要删除的目录路径和名称</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="file">要删除的文件路径和名称</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.CreateFile(System.String,System.String)">
            <summary>
            创建文件
            </summary>
            <param name="dir">带后缀的文件名</param>
            <param name="pagestr">文件内容</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.MoveFile(System.String,System.String)">
            <summary>
            移动文件(剪贴--粘贴)
            </summary>
            <param name="dir1">要移动的文件的路径及全名(包括后缀)</param>
            <param name="dir2">文件移动到新的位置,并指定新的文件名</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.CopyFile(System.String,System.String)">
            <summary>复制文件</summary>
            <param name="oldFile">原始文件名(包括完整路径)</param>
            <param name="newFile">目标文件名(包括完整路径)</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetDateDir">
            <summary>
            根据时间得到目录名yyyyMMdd
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetDateFile">
            <summary>
            根据时间得到文件名HHmmssff
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.CopyFolder(System.String,System.String)">
            <summary>
            复制文件夹(递归)
            </summary>
            <param name="varFromDirectory">源文件夹路径</param>
            <param name="varToDirectory">目标文件夹路径</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.ExistsFile(System.String)">
            <summary>
            检查文件,如果文件不存在则创建  
            </summary>
            <param name="FilePath">路径,包括文件名</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.DeleteFolderFiles(System.String,System.String)">
            <summary>
            删除指定文件夹对应其他文件夹里的文件
            </summary>
            <param name="varFromDirectory">指定文件夹路径</param>
            <param name="varToDirectory">对应其他文件夹路径</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetFileName(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.CreateDirectory(System.String)">
            <summary>
            创建一个目录
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.CreateFile(System.String)">
            <summary>
            创建一个文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.CreateFile(System.String,System.Byte[])">
            <summary>
            创建一个文件,并将字节流写入文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="buffer">二进制流数据</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetLineCount(System.String)">
            <summary>
            获取文本文件的行数
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetFileSize(System.String)">
            <summary>
            获取一个文件的长度,单位为Byte
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetDirectories(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.WriteText(System.String,System.String,System.Text.Encoding)">
            <summary>
            向文本文件中写入内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="text">写入的内容</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.AppendText(System.String,System.String)">
            <summary>
            向文本文件的尾部追加内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">写入的内容</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.Copy(System.String,System.String)">
            <summary>
            将源文件的内容复制到目标文件中
            </summary>
            <param name="sourceFilePath">源文件的绝对路径</param>
            <param name="destFilePath">目标文件的绝对路径</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.Move(System.String,System.String)">
            <summary>
            将文件移动到指定目录
            </summary>
            <param name="sourceFilePath">需要移动的源文件的绝对路径</param>
            <param name="descDirectoryPath">移动到的目录的绝对路径</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetFileNameNoExtension(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 不包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetExtension(System.String)">
            <summary>
            从文件的绝对路径中获取扩展名
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetFileExtension(System.String)">
            <summary>从文件名中抽取扩展名</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.ClearDirectory(System.String)">
            <summary>
            清空指定目录下所有文件及子目录,但该目录依然保存.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.ClearFile(System.String)">
            <summary>
            清空文件内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.DeleteDirectory(System.String)">
            <summary>
            删除指定目录及其所有子目录
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.FixDirPath(System.String)">
            <summary>修正路径右边缺少"/"</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.CheckSaveDir(System.String)">
            <summary>创建目录,如果父目录不存在,将一级级生成.</summary>
            <param name="sCheckPath">/newsfile/2009/07/</param>
            <returns>返回创建目录是否成功</returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetMapPath(System.String)">
            <summary>获得当前绝对路径</summary>
            <param name="strPath">指定的路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetFileNamePostfix(System.String,System.String)">
            <summary>从文件名中加后缀字符,组成新文件名,用于缩略图<para />
            例如:getFileNamePostfix("090801.gif","s") return "090801s.gif" <para />
            </summary>
            <param name="sFileName">文件名</param>
            <param name="sPostfix">后缀字符</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetFilePathPostfix(System.String,System.String)">
            <summary>从文件名中加后缀字符,组成新文件名,用于缩略图,(包括路径)<para />
            例如:getFilePathPostfix("090801.gif","s") return "090801s.gif" <para />
            </summary>
            <param name="sFileName">文件名</param>
            <param name="sPostfix">后缀字符</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.DelPicFile(System.String)">
            <summary>删除图片文件,连同相关的大型图,中型图,微型图一并删除</summary>
            <param name="filename">文件名(包括完整路径)</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.FmtFileSize(System.Int64)">
            <summary>返回文件Size的字符格式</summary>
            <param name="bytes">bytes</param>
            <returns>例如:1024=1Kb</returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.FmtFileSize2(System.Int32)">
            <summary>返回文件Size的字符格式（注意：传入参数为kb）</summary>
            <param name="kb">kb</param>
            <returns>例如:1024=1Kb</returns>
        </member>
        <member name="M:DotNet.Utilities.DirFileHelper.GetFilePath(System.String)">
            <summary>从(路径+文件名)中抽取路径</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.BasePage.ExportData(System.Web.UI.WebControls.GridView)">
            <summary>
            导出Excel
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:DotNet.Utilities.ConfigHelper">
            <summary>
            web.config操作类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ConfigHelper.GetConfigString(System.String)">
            <summary>
            得到AppSettings中的配置字符串信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConfigHelper.GetConfigBool(System.String)">
            <summary>
            得到AppSettings中的配置Bool信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConfigHelper.GetConfigDecimal(System.String)">
            <summary>
            得到AppSettings中的配置Decimal信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.ConfigHelper.GetConfigInt(System.String)">
            <summary>
            得到AppSettings中的配置int信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.DataCache">
            <summary>
            缓存相关的操作类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.DataCache.GetCache(System.String)">
            <summary>
            获取当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DataCache.SetCache(System.String,System.Object)">
            <summary>
            设置当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <param name="objObject"></param>
        </member>
        <member name="M:DotNet.Utilities.DataCache.SetCache(System.String,System.Object,System.DateTime,System.TimeSpan)">
            <summary>
            设置当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <param name="objObject"></param>
        </member>
        <member name="T:DotNet.Utilities.DataToExcel">
            <summary>
            操作EXCEL导出数据报表的类
            </summary>
        </member>
        <member name="P:DotNet.Utilities.DataToExcel.TitleColorIndex">
            <summary>
            标题背景色
            </summary>
        </member>
        <member name="M:DotNet.Utilities.DataToExcel.CreateExcel">
            <summary>
            创建一个Excel示例
            </summary>
        </member>
        <member name="M:DotNet.Utilities.DataToExcel.KillExcelProcess">
            <summary>
            结束Excel进程
            </summary>
        </member>
        <member name="M:DotNet.Utilities.DataToExcel.ClearFile(System.String)">
            <summary>
            将DataTable的数据导出显示为报表(不使用Excel对象)
            </summary>
            <param name="dt">数据DataTable</param>
            <param name="strTitle">标题</param>
            <param name="FilePath">生成文件的路径</param>
            <param name="nameList"></param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.DEncrypt">
            <summary>
            Encrypt 的摘要说明。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.DEncrypt.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:DotNet.Utilities.DEncrypt.Encrypt(System.String)">
            <summary>
            使用缺省密钥字符串加密string
            </summary>
            <param name="original">明文</param>
            <returns>密文</returns>
        </member>
        <member name="M:DotNet.Utilities.DEncrypt.Decrypt(System.String)">
            <summary>
            使用缺省密钥字符串解密string
            </summary>
            <param name="original">密文</param>
            <returns>明文</returns>
        </member>
        <member name="M:DotNet.Utilities.DEncrypt.Encrypt(System.String,System.String)">
            <summary>
            使用给定密钥字符串加密string
            </summary>
            <param name="original">原始文字</param>
            <param name="key">密钥</param>
            <param name="encoding">字符编码方案</param>
            <returns>密文</returns>
        </member>
        <member name="M:DotNet.Utilities.DEncrypt.Decrypt(System.String,System.String)">
            <summary>
            使用给定密钥字符串解密string
            </summary>
            <param name="original">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="M:DotNet.Utilities.DEncrypt.Decrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            使用给定密钥字符串解密string,返回指定编码方式明文
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <param name="encoding">字符编码方案</param>
            <returns>明文</returns>
        </member>
        <member name="M:DotNet.Utilities.DEncrypt.Decrypt(System.Byte[])">
            <summary>
            使用缺省密钥字符串解密byte[]
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="M:DotNet.Utilities.DEncrypt.Encrypt(System.Byte[])">
            <summary>
            使用缺省密钥字符串加密
            </summary>
            <param name="original">原始数据</param>
            <param name="key">密钥</param>
            <returns>密文</returns>
        </member>
        <member name="M:DotNet.Utilities.DEncrypt.MakeMD5(System.Byte[])">
            <summary>
            生成MD5摘要
            </summary>
            <param name="original">数据源</param>
            <returns>摘要</returns>
        </member>
        <member name="M:DotNet.Utilities.DEncrypt.Encrypt(System.Byte[],System.Byte[])">
            <summary>
            使用给定密钥加密
            </summary>
            <param name="original">明文</param>
            <param name="key">密钥</param>
            <returns>密文</returns>
        </member>
        <member name="M:DotNet.Utilities.DEncrypt.Decrypt(System.Byte[],System.Byte[])">
            <summary>
            使用给定密钥解密数据
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="T:DotNet.Utilities.DESEncrypt">
            <summary>
            DES加密/解密类。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.DESEncrypt.Encrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DESEncrypt.Encrypt(System.String,System.String)">
            <summary> 
            加密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="M:DotNet.Utilities.DESEncrypt.Decrypt(System.String)">
            <summary>
            解密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.DESEncrypt.Decrypt(System.String,System.String)">
            <summary> 
            解密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="T:DotNet.Utilities.HashEncode">
            <summary>
            得到随机安全码（哈希加密）。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.HashEncode.GetSecurity">
            <summary>
            得到随机哈希加密字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.HashEncode.GetRandomValue">
            <summary>
            得到一个随机数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.HashEncode.HashEncoding(System.String)">
            <summary>
            哈希加密一个字符串
            </summary>
            <param name="Security"></param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.RSACryption">
            <summary> 
            RSA加密解密及RSA签名和验证
            </summary> 
        </member>
        <member name="M:DotNet.Utilities.RSACryption.RSAKey(System.String@,System.String@)">
            <summary>
            RSA 的密钥产生 产生私钥 和公钥 
            </summary>
            <param name="xmlKeys"></param>
            <param name="xmlPublicKey"></param>
        </member>
        <member name="M:DotNet.Utilities.ExportExcel.ExportData(System.String,System.String)">
            <summary>
            将整个网页导出来Excel
            </summary>
            <param name="strContent"></param>
            <param name="FileName"></param>
        </member>
        <member name="M:DotNet.Utilities.ExportExcel.ExportData(System.Web.UI.WebControls.GridView)">
            <summary>
            将GridView数据导出Excel
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.GetPostfixStr(System.String)">
            <summary>
            取后缀名
            </summary>
            <param name="filename">文件名</param>
            <returns>.gif|.html格式</returns>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.WriteFile(System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="Strings">文件内容</param>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.ReadFile(System.String)">
            <summary>
            读文件
            </summary>
            <param name="Path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.FileAdd(System.String,System.String)">
            <summary>
            追加文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="strings">内容</param>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.FileCoppy(System.String,System.String)">
            <summary>
            拷贝文件
            </summary>
            <param name="OrignFile">原始文件</param>
            <param name="NewFile">新文件路径</param>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.FileDel(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="Path">路径</param>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.FileMove(System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="OrignFile">原始路径</param>
            <param name="NewFile">新路径</param>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.FolderCreate(System.String,System.String)">
            <summary>
            在当前目录下创建目录
            </summary>
            <param name="OrignFolder">当前目录</param>
            <param name="NewFloder">新目录</param>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.FolderCreate(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="Path"></param>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.DeleteFolder(System.String)">
            <summary>
            递归删除文件夹目录及文件
            </summary>
            <param name="dir"></param>  
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.CopyDir(System.String,System.String)">
            <summary>
            指定文件夹下面的所有内容copy到目标文件夹下面
            </summary>
            <param name="srcPath">原始路径</param>
            <param name="aimPath">目标文件夹</param>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.GetFoldAll(System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件
            </summary>
            <param name="Path">详细路径</param>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.ListTreeShow(System.IO.DirectoryInfo,System.Int32,System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件函数
            </summary>
            <param name="theDir">指定目录</param>
            <param name="nLevel">默认起始值,调用时,一般为0</param>
            <param name="Rn">用于迭加的传入值,一般为空</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.GetFoldAll(System.String,System.String,System.String)">
             <summary>
             获取指定文件夹下所有子目录及文件(下拉框形)
             </summary>
             <param name="Path">详细路径</param>
            <param name="DropName">下拉列表名称</param>
            <param name="tplPath">默认选择模板名称</param>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.ListTreeShow(System.IO.DirectoryInfo,System.Int32,System.String,System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件函数
            </summary>
            <param name="theDir">指定目录</param>
            <param name="nLevel">默认起始值,调用时,一般为0</param>
            <param name="Rn">用于迭加的传入值,一般为空</param>
            <param name="tplPath">默认选择模板名称</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.GetDirectoryLength(System.String)">
            <summary>
            获取文件夹大小
            </summary>
            <param name="dirPath">文件夹路径</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.GetFileAttibe(System.String)">
            <summary>
            获取指定文件详细属性
            </summary>
            <param name="filePath">文件详细路径</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.FileOperateHelper.GetRndFileName(System.String)">
            <summary> 取得随机文件名(原文件名),用yyMMddhhmmss + (xxx),共15位数字</summary>
            <param name="fileName">原文件名或文件扩展名</param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.BaseRandom">
            <summary>
            BaseRandom
            产生随机数
            
            随机数管理，最大值、最小值可以自己进行设定。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.BaseRandom.GetRandomString">
            <summary>
            产生随机字符
            </summary>
            <returns>字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.BaseRandom.GetRandom">
            <summary>
            产生随机数
            </summary>
            <returns>随机数</returns>
        </member>
        <member name="M:DotNet.Utilities.BaseRandom.GetRandom(System.Int32,System.Int32)">
            <summary>
            产生随机数
            </summary>
            <param name="minimum">最小值</param>
            <param name="maximal">最大值</param>
            <returns>随机数</returns>
        </member>
        <member name="T:DotNet.Utilities.UploadEventArgs">
            <summary>    
            上传数据参数    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.UploadEventArgs.BytesSent">
            <summary>    
            已发送的字节数    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.UploadEventArgs.TotalBytes">
            <summary>    
            总字节数    
            </summary>    
        </member>
        <member name="T:DotNet.Utilities.DownloadEventArgs">
            <summary>    
            下载数据参数    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.DownloadEventArgs.BytesReceived">
            <summary>    
            已接收的字节数    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.DownloadEventArgs.TotalBytes">
            <summary>    
            总字节数    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.DownloadEventArgs.ReceivedData">
            <summary>    
            当前缓冲区接收的数据    
            </summary>    
        </member>
        <member name="M:DotNet.Utilities.WebClient.#ctor">
            <summary>    
            创建WebClient的实例    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.WebClient.BufferSize">
            <summary>    
            设置发送和接收的数据缓冲大小    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.WebClient.ResponseHeaders">
            <summary>    
            获取响应头集合    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.WebClient.RequestHeaders">
            <summary>    
            获取请求头集合    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.WebClient.Proxy">
            <summary>    
            获取或设置代理    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.WebClient.Encoding">
            <summary>    
            获取或设置请求与响应的文本编码方式    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.WebClient.RespHtml">
            <summary>    
            获取或设置响应的html代码    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.WebClient.CookieContainer">
            <summary>    
            获取或设置与请求关联的Cookie容器    
            </summary>    
        </member>
        <member name="M:DotNet.Utilities.WebClient.GetHtml(System.String)">
            <summary>    
             获取网页源代码    
            </summary>    
            <param name="url">网址</param>    
            <returns></returns>    
        </member>
        <member name="M:DotNet.Utilities.WebClient.DownloadFile(System.String,System.String)">
            <summary>    
            下载文件    
            </summary>    
            <param name="url">文件URL地址</param>    
            <param name="filename">文件保存完整路径</param>    
        </member>
        <member name="M:DotNet.Utilities.WebClient.GetData(System.String)">
            <summary>    
            从指定URL下载数据    
            </summary>    
            <param name="url">网址</param>    
            <returns></returns>    
        </member>
        <member name="M:DotNet.Utilities.WebClient.Post(System.String,System.String)">
            <summary>    
            向指定URL发送文本数据    
            </summary>    
            <param name="url">网址</param>    
            <param name="postData">urlencode编码的文本数据</param>    
            <returns></returns>    
        </member>
        <member name="M:DotNet.Utilities.WebClient.Post(System.String,System.Byte[])">
            <summary>    
            向指定URL发送字节数据    
            </summary>    
            <param name="url">网址</param>    
            <param name="postData">发送的字节数组</param>    
            <returns></returns>    
        </member>
        <member name="M:DotNet.Utilities.WebClient.Post(System.String,DotNet.Utilities.MultipartForm)">
            <summary>    
            向指定网址发送mulitpart编码的数据    
            </summary>    
            <param name="url">网址</param>    
            <param name="mulitpartForm">mulitpart form data</param>    
            <returns></returns>    
        </member>
        <member name="M:DotNet.Utilities.WebClient.GetData(System.Net.HttpWebRequest)">
            <summary>    
            读取请求返回的数据    
            </summary>    
            <param name="request">请求对象</param>    
            <returns></returns>    
        </member>
        <member name="M:DotNet.Utilities.WebClient.PostData(System.Net.HttpWebRequest,System.Byte[])">
            <summary>    
            发送请求数据    
            </summary>    
            <param name="request">请求对象</param>    
            <param name="postData">请求发送的字节数组</param>    
        </member>
        <member name="M:DotNet.Utilities.WebClient.CreateRequest(System.String,System.String)">
            <summary>    
            创建HTTP请求    
            </summary>    
            <param name="url">URL地址</param>    
            <returns></returns>    
        </member>
        <member name="M:DotNet.Utilities.WebClient.SaveCookiesToDisk">
            <summary>    
            将Cookie保存到磁盘    
            </summary>    
        </member>
        <member name="M:DotNet.Utilities.WebClient.LoadCookiesFromDisk">
            <summary>    
            从磁盘加载Cookie    
            </summary>    
        </member>
        <member name="T:DotNet.Utilities.MultipartForm">
            <summary>    
            对文件和文本数据进行Multipart形式的编码    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.MultipartForm.FormData">
            <summary>    
            获取编码后的字节数组    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.MultipartForm.ContentType">
            <summary>    
            获取此编码内容的类型    
            </summary>    
        </member>
        <member name="P:DotNet.Utilities.MultipartForm.StringEncoding">
            <summary>    
            获取或设置对字符串采用的编码类型    
            </summary>    
        </member>
        <member name="M:DotNet.Utilities.MultipartForm.#ctor">
            <summary>    
            实例化    
            </summary>    
        </member>
        <member name="M:DotNet.Utilities.MultipartForm.AddFlie(System.String,System.String)">
            <summary>    
            添加一个文件    
            </summary>    
            <param name="name">文件域名称</param>    
            <param name="filename">文件的完整路径</param>    
        </member>
        <member name="M:DotNet.Utilities.MultipartForm.AddFlie(System.String,System.String,System.Byte[],System.Int32)">
            <summary>    
            添加一个文件    
            </summary>    
            <param name="name">文件域名称</param>    
            <param name="filename">文件名</param>    
            <param name="fileData">文件二进制数据</param>    
            <param name="dataLength">二进制数据大小</param>    
        </member>
        <member name="M:DotNet.Utilities.MultipartForm.AddString(System.String,System.String)">
            <summary>    
            添加字符串    
            </summary>    
            <param name="name">文本域名称</param>    
            <param name="value">文本值</param>    
        </member>
        <member name="M:DotNet.Utilities.MultipartForm.GetContentType(System.String)">
            <summary>    
            从注册表获取文件类型    
            </summary>    
            <param name="filename">包含扩展名的文件名</param>    
            <returns>如：application/stream</returns>    
        </member>
        <member name="T:DotNet.Utilities.INIFileHelper">
            <summary>
            INI文件读写类。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.INIFileHelper.IniWriteValue(System.String,System.String,System.String)">
            <summary>
            写INI文件
            </summary>
            <param name="Section"></param>
            <param name="Key"></param>
            <param name="Value"></param>
        </member>
        <member name="M:DotNet.Utilities.INIFileHelper.IniReadValue(System.String,System.String)">
            <summary>
            读取INI文件
            </summary>
            <param name="Section"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.INIFileHelper.ClearAllSection">
            <summary>
            删除ini文件下所有段落
            </summary>
        </member>
        <member name="M:DotNet.Utilities.INIFileHelper.ClearSection(System.String)">
            <summary>
            删除ini文件下personal段落下的所有键
            </summary>
            <param name="Section"></param>
        </member>
        <member name="T:DotNet.Utilities.Rmb">
            <summary> 
            Rmb 的摘要说明。 
            </summary> 
        </member>
        <member name="M:DotNet.Utilities.Rmb.CmycurD(System.Decimal)">
            <summary> 
            转换人民币大小金额 
            </summary> 
            <param name="num">金额</param> 
            <returns>返回大写形式</returns> 
        </member>
        <member name="M:DotNet.Utilities.Rmb.CmycurD(System.String)">
            <summary> 
            一个重载，将字符串先转换成数字在调用CmycurD(decimal num) 
            </summary> 
            <param name="num">用户输入的金额，字符串形式未转成decimal</param> 
            <returns></returns> 
        </member>
        <member name="M:DotNet.Utilities.Serialize.BinarySerialize(System.String,System.Object)">
            <summary>
            序列化为对象
            </summary>
            <param name="objname"></param>
            <param name="obj"></param>
        </member>
        <member name="M:DotNet.Utilities.Serialize.BinaryDeserialize(System.String)">
            <summary>
            从二进制文件中反序列化
            </summary>
            <param name="objname"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Serialize.SoapSerialize(System.String,System.Object)">
            <summary>
            序列化为soap 即xml
            </summary>
            <param name="objname"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Serialize.SoapDeserialize(System.String)">
            <summary>
            反序列对象
            </summary>
            <param name="objname"></param>
        </member>
        <member name="M:DotNet.Utilities.Serialize.XmlDeserailize(System.String)">
            <summary>
            从xml序列中反序列化
            </summary>
            <param name="objname"></param>
            <returns></returns>
        </member>
        <member name="T:DotNet.Utilities.Encrypt">
            <summary>
            加密解密实用类。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Encrypt.Encode(System.String)">
            <summary>
            加密。
            </summary>
            <param name="m_Need_Encode_String"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Encrypt.Decode(System.String)">
            <summary>
            解密。
            </summary>
            <param name="m_Need_Encode_String"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Encrypt.Md5(System.String,System.Int32)">
            <summary>MD5函数(32bit or 16bit)</summary>
            <param name="str">原始字符串</param>
            <param name="iType">16 or 32</param>
            <returns>MD5结果</returns>
        </member>
        <member name="T:DotNet.Utilities.GridViewExport">
            <summary>
            Summary description for GridViewExport
            </summary>
        </member>
        <member name="M:DotNet.Utilities.GridViewExport.PrepareControlForExport(System.Web.UI.Control)">
            <summary>
            Replace any of the contained controls with literals
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:DotNet.Utilities.GridViewExport.OutputExcel(System.Web.UI.WebControls.GridView,System.Data.DataTable,System.String)">
            <summary>
            导出Grid的数据(全部)到Excel
            字段全部为BoundField类型时可用
            要是字段为TemplateField模板型时就取不到数据
            </summary>
            <param name="grid">grid的ID</param>
            <param name="dt">数据源</param>
            <param name="excelFileName">要导出Excel的文件名</param>
        </member>
        <member name="M:DotNet.Utilities.MessageBox.Show(System.Web.UI.Page,System.String)">
            <summary>
            显示消息提示对话框
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:DotNet.Utilities.MessageBox.ShowConfirm(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            控件点击 消息确认提示框
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:DotNet.Utilities.MessageBox.ShowAndRedirect(System.Web.UI.Page,System.String,System.String)">
            <summary>
            显示消息提示对话框，并进行页面跳转
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
            <param name="url">跳转的目标URL</param>
        </member>
        <member name="M:DotNet.Utilities.MessageBox.ResponseScript(System.Web.UI.Page,System.String)">
            <summary>
            输出自定义脚本信息
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="script">输出脚本</param>
        </member>
        <member name="T:DotNet.Utilities.ShowMessageBox">
            <summary>
            页面常用方法包装
            </summary>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowMG(System.String)">
            <summary>
            显示提示信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowMessage(System.String)">
            <summary>
            显示提示信息
            </summary>
            <param name="message">提示信息</param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowMessage_link(System.String,System.String)">
            <summary>
            显示提示信息
            </summary>
            <param name="message">提示信息</param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowMessage(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            显示提示信息
            </summary>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="message">提示信息</param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowMessage(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            显示提示信息
            </summary>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="message"></param>
            <param name="delayms"></param>
            <param name="leftSpace"></param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowMessage_link(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            显示提示信息
            </summary>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="message"></param>
            <param name="delayms"></param>
            <param name="leftSpace"></param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowExceptionMessage(System.Exception)">
            <summary>
            显示异常信息
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowExceptionMessage(System.String)">
            <summary>
            显示异常信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowExceptionMessage(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            显示异常信息
            </summary>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="message"></param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.GetShowModalWindowScript(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            返回把指定链接地址显示模态窗口的脚本
            </summary>
            <param name="wid"></param>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="url"></param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowModalWindow(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            把指定链接地址显示模态窗口
            </summary>
            <param name="wid">窗口ID</param>
            <param name="title">标题</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="url">链接地址</param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowCilentModalWindow(System.String,System.Web.UI.WebControls.WebControl,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            为指定控件绑定前台脚本：显示模态窗口
            </summary>
            <param name="control"></param>
            <param name="eventName"></param>
            <param name="wid"></param>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="url"></param>
            <param name="isScriptEnd"></param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowCilentModalWindow(System.String,System.Web.UI.WebControls.TableCell,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            为指定控件绑定前台脚本：显示模态窗口
            </summary>
            <param name="cell"></param>
            <param name="eventName"></param>
            <param name="wid"></param>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="url"></param>
            <param name="isScriptEnd"></param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowCilentConfirm(System.Web.UI.WebControls.WebControl,System.String,System.String)">
            <summary>
            显示客户端确认窗口
            </summary>
            <param name="control"></param>
            <param name="eventName"></param>
            <param name="message"></param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.ShowCilentConfirm(System.Web.UI.WebControls.WebControl,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            显示客户端确认窗口
            </summary>
            <param name="control"></param>
            <param name="eventName"></param>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="message"></param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.WriteScript(System.String)">
            <summary>
            写javascript脚本
            </summary>
            <param name="script">脚本内容</param>
        </member>
        <member name="M:DotNet.Utilities.ShowMessageBox.GetCurrentPage">
            <summary>
            得到当前页对象实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.FormatString(System.String,System.Int32)">
            <summary>
            格式化字符串
            </summary>
            <param name="inputData">源字符串</param>
            <param name="formatlevel">0:不做验证| 1:sql语句参数| 2:存储过程参数| 3:EncodeHtml| 4:Encode+sql| 5:Encode+存储过程</param>
            <returns>返回格式化后的字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.FetchInputDigit(System.Web.HttpRequest,System.String,System.Int32)">
            <summary>
            检查Request查询字符串的键值，是否是数字，最大长度限制
            </summary>
            <param name="req">Request</param>
            <param name="inputKey">Request的键值</param>
            <param name="maxLen">最大长度</param>
            <returns>返回Request查询字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.checkString(System.String,System.Int32)">
            <summary>
            检测字符串类型
            </summary>
            <param name="inputData">输入字符串</param>
            <param name="checktype">0:不检测| 1:数字| 2:符号数字| 3: 浮点数| 4:符号浮点| 5: 中文?| 6:邮件?</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.IsNumber(System.String)">
            <summary>
            是否数字字符串
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.IsNumberSign(System.String)">
            <summary>
            是否数字字符串 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.IsDecimal(System.String)">
            <summary>
            是否是浮点数
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.IsDecimalSign(System.String)">
            <summary>
            是否是浮点数 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.IsHasCHZN(System.String)">
            <summary>
            检测是否有中文字符
            </summary>
            <param name="inputData"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.IsEmail(System.String)">
            <summary>
            是否是浮点数 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.SqlText(System.String,System.Int32)">
            <summary>
            检查字符串最大长度，返回指定长度的串
            </summary>
            <param name="sqlInput">输入字符串</param>
            <param name="maxLength">最大长度</param>
            <returns></returns>			
        </member>
        <member name="M:DotNet.Utilities.PageValidate.HtmlEncode(System.String)">
            <summary>
            字符串编码
            </summary>
            <param name="inputData"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.SetLabel(System.Web.UI.WebControls.Label,System.String)">
            <summary>
            设置Label显示Encode的字符串
            </summary>
            <param name="lbl"></param>
            <param name="txtInput"></param>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.Text_Length(System.String)">
            <summary>   
            计算文本长度，区分中英文字符，中文算两个长度，英文算一个长度
            </summary>
            <param name="Text">需计算长度的字符串</param>
            <returns>int</returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.GetSubString(System.String,System.Int32)">
            <summary>   
            截取文本，区分中英文字符，中文算两个长度，英文算一个长度
            </summary>
            <param name="str">待截取的字符串</param>
            <param name="length">需计算长度的字符串</param>
            <returns>string</returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.IsDateTime(System.String)">
            <summary>
            日期格式字符串判断
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageValidate.isContainSpecChar(System.String)">
            <summary>
            检查输入的参数是不是某些定义好的特殊字符：这个方法目前用于密码输入的安全检查
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:DotNet.Utilities.StringPlus" -->
        <member name="M:DotNet.Utilities.StringPlus.GetStrArray(System.String,System.Char,System.Boolean)">
            <summary>
            把字符串按照分隔符转换成 List
            </summary>
            <param name="str">源字符串</param>
            <param name="speater">分隔符</param>
            <param name="toLower">是否转换为小写</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.GetStrArray(System.String)">
            <summary>
            把字符串转 按照, 分割 换为数据
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DotNet.Utilities.StringPlus.GetArrayStr(System.Collections.Generic.List{System.String},System.String)" -->
        <member name="M:DotNet.Utilities.StringPlus.GetArrayStr(System.Collections.Generic.List{System.Int32})">
            <summary>
            得到数组列表以逗号分隔的字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.GetArrayValueStr(System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            得到数组列表以逗号分隔的字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.DelLastComma(System.String)">
            <summary>
            删除最后结尾的一个逗号
            </summary>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.DelLastChar(System.String,System.String)">
            <summary>
            删除最后结尾的指定字符后的字符
            </summary>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.ToSBC(System.String)">
            <summary>
            转全角的函数(SBC case)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.ToDBC(System.String)">
            <summary>
             转半角的函数(SBC case)
            </summary>
            <param name="input">输入</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.GetSubStringList(System.String,System.Char)">
            <summary>
            把字符串按照指定分隔符装成 List 去除重复
            </summary>
            <param name="o_str"></param>
            <param name="sepeater"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.GetCleanStyle(System.String,System.String)">
            <summary>
             将字符串样式转换为纯字符串
            </summary>
            <param name="StrList"></param>
            <param name="SplitString"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.GetNewStyle(System.String,System.String,System.String,System.String@)">
            <summary>
            将字符串转换为新样式
            </summary>
            <param name="StrList"></param>
            <param name="NewStyle"></param>
            <param name="SplitString"></param>
            <param name="Error"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.SplitMulti(System.String,System.String)">
            <summary>
            分割字符串
            </summary>
            <param name="str"></param>
            <param name="splitstr"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.StrToId(System.String)">
            <summary>
            获取正确的Id，如果不是正整数，返回0
            </summary>
            <param name="_value"></param>
            <returns>返回正确的整数ID，失败返回0</returns>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.IsNumberId(System.String)">
            <summary>
            检查一个字符串是否是纯数字构成的，一般用于查询字符串参数的有效性验证。(0除外)
            </summary>
            <param name="_value">需验证的字符串。。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:DotNet.Utilities.StringPlus.QuickValidate(System.String,System.String)">
            <summary>
            快速验证一个字符串是否符合指定的正则表达式。
            </summary>
            <param name="_express">正则表达式的内容。</param>
            <param name="_value">需验证的字符串。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="T:DotNet.Utilities.UrlOper">
            <summary>
            URL的操作类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.UrlOper.IsBase64(System.String)">
            <summary>
            是否是Base64字符串
            </summary>
            <param name="eStr"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.UrlOper.AddParam(System.String,System.String,System.String)">
            <summary>
            添加URL参数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.UrlOper.UpdateParam(System.String,System.String,System.String)">
            <summary>
            更新URL参数
            </summary>
        </member>
        <member name="M:DotNet.Utilities.UrlOper.ParseUrl(System.String,System.String@,System.Collections.Specialized.NameValueCollection@)">
            <summary>
            分析 url 字符串中的参数信息
            </summary>
            <param name="url">输入的 URL</param>
            <param name="baseUrl">输出 URL 的基础部分</param>
            <param name="nvc">输出分析后得到的 (参数名,参数值) 的集合</param>
        </member>
        <member name="T:DotNet.Utilities.Utility">
            <summary>
            Utility 的摘要说明。
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToObjectString(System.Object)">
            <summary>
            返回对象obj的String值,obj为null时返回空值。
            </summary>
            <param name="obj">对象。</param>
            <returns>字符串。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToInt(System.Object)">
            <summary>
            将对象转换为数值(Int32)类型,转换失败返回-1。
            </summary>
            <param name="obj">对象。</param>
            <returns>Int32数值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToInt(System.Object,System.Int32)">
            <summary>
            将对象转换为数值(Int32)类型。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Int32数值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToLong(System.Object)">
            <summary>
            将对象转换为数值(Long)类型,转换失败返回-1。
            </summary>
            <param name="obj">对象。</param>
            <returns>Long数值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToLong(System.Object,System.Int64)">
            <summary>
            将对象转换为数值(Long)类型。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Long数值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToDecimal(System.Object)">
            <summary>
            将对象转换为数值(Decimal)类型,转换失败返回-1。
            </summary>
            <param name="obj">对象。</param>
            <returns>Decimal数值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToDecimal(System.Object,System.Decimal)">
            <summary>
            将对象转换为数值(Decimal)类型。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Decimal数值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToDouble(System.Object)">
            <summary>
            将对象转换为数值(Double)类型,转换失败返回-1。
            </summary>
            <param name="obj">对象。</param>
            <returns>Double数值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToDouble(System.Object,System.Double)">
            <summary>
            将对象转换为数值(Double)类型。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Double数值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToFloat(System.Object)">
            <summary>
            将对象转换为数值(Float)类型,转换失败返回-1。
            </summary>
            <param name="obj">对象。</param>
            <returns>Float数值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToFloat(System.Object,System.Single)">
            <summary>
            将对象转换为数值(Float)类型。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Float数值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToDateTime(System.Object)">
            <summary>
            将对象转换为数值(DateTime)类型,转换失败返回Now。
            </summary>
            <param name="obj">对象。</param>
            <returns>DateTime值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToDateTime(System.Object,System.DateTime)">
            <summary>
            将对象转换为数值(DateTime)类型。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>DateTime值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToByteByBool(System.Object)">
            <summary>
            从Boolean转换成byte,转换失败返回0。
            </summary>
            <param name="obj">对象。</param>
            <returns>Byte值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToByteByBool(System.Object,System.Byte)">
            <summary>
            从Boolean转换成byte。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Byte值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToBoolByByte(System.Object)">
            <summary>
            从byte转换成Boolean,转换失败返回false。
            </summary>
            <param name="obj">对象。</param>
            <returns>Boolean值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ToBoolByByte(System.Object,System.Boolean)">
            <summary>
            从byte转换成Boolean。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Boolean值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.IsEmpty(System.String)">
            <summary>
            判断文本obj是否为空值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Boolean值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.IsDateTime(System.Object)">
            <summary>
            判断对象是否为正确的日期值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Boolean。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.IsInt(System.Object)">
            <summary>
            判断对象是否为正确的Int32值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Int32值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.IsLong(System.Object)">
            <summary>
            判断对象是否为正确的Long值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Long值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.IsFloat(System.Object)">
            <summary>
            判断对象是否为正确的Float值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Float值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.IsDouble(System.Object)">
            <summary>
            判断对象是否为正确的Double值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Double值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.IsDecimal(System.Object)">
            <summary>
            判断对象是否为正确的Decimal值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Decimal值。</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.StringTrimAll(System.String)">
            <summary>
            去除字符串的所有空格。
            </summary>
            <param name="text">字符串</param>
            <returns>字符串</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.NumricTrimAll(System.String)">
            <summary>
            去除数值字符串的所有空格。
            </summary>
            <param name="numricString">数值字符串</param>
            <returns>String</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ArrayFind(System.Array,System.Object)">
            <summary>
            在数组中查找匹配对象类型
            </summary>
            <param name="array">数组</param>
            <param name="obj">对象</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ArrayFind(System.Array,System.String,System.Boolean)">
            <summary>
            在数组中查找匹配字符串
            </summary>
            <param name="array">数组</param>
            <param name="obj">对象</param>
            <param name="unUpLower">是否忽略大小写</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ReplaceInvertedComma(System.String)">
            <summary>
            替换字符串中的单引号。
            </summary>
            <param name="inputString">字符串</param>
            <returns>String</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.CompareByteArray(System.Byte[],System.Byte[])">
            <summary>
            判断两个字节数组是否具有相同值.
            </summary>
            <param name="bytea">字节1</param>
            <param name="byteb">字节2</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.BuildDate(System.String)">
            <summary>
            日期智能生成。
            </summary>
            <param name="inputText">字符串</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.IsFileExists(System.String)">
            <summary>
            检查文件是否真实存在。
            </summary>
            <param name="path">文件全名（包括路径）。</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.IsDirectoryExists(System.String)">
            <summary>
            检查目录是否真实存在。
            </summary>
            <param name="path">目录路径.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.FindLineTextFromFile(System.IO.FileInfo,System.String,System.Boolean)">
            <summary>
            查找文件中是否存在匹配行。
            </summary>
            <param name="fi">目标文件.</param>
            <param name="lineText">要查找的行文本.</param>
            <param name="lowerUpper">是否区分大小写.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.IsRightParent(System.Data.DataTable,System.String,System.String,System.String,System.String)">
            <summary>
            判断父子级关系是否正确。
            </summary>
            <param name="table">数据表。</param>
            <param name="columnName">子键列名。</param>
            <param name="parentColumnName">父键列名。</param>
            <param name="inputString">子键值。</param>
            <param name="compareString">父键值。</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.Fomatdate(System.DateTime,System.String)">
            <summary>
            格式化日期类型，返回字符串
            </summary>
            <param name="dtime">日期</param>
            <param name="s">日期年月日间隔符号</param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.Datediff(System.DateTime,System.DateTime)">
            <summary>
            返回日期差
            </summary>
            <param name="sdmin">开始日期</param>
            <param name="sdmax">结束日期</param>
            <returns>日期差：负数为失败</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.Datediff(System.String,System.String)">
            <summary>
            返回日期差
            </summary>
            <param name="sdmin">开始日期</param>
            <param name="sdmax">结束日期</param>
            <returns>日期差：负数为失败</returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.ConvertStr(System.String)">
            <summary>
            将用户输入的字符串转换为可换行、替换Html编码、无危害数据库特殊字符、去掉首尾空白、的安全方便代码。
            </summary>
            <param name="inputString">用户输入字符串</param>
        </member>
        <member name="M:DotNet.Utilities.Utility.OutputText(System.String)">
            <summary>
            将html代码显示在网页上
            </summary>
            <param name="inputString"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.Utility.SetTableRows(System.Data.DataTable,System.Int32)">
            <summary>
            设置绑定到DataGrid的DataTable的记录行数，如不够则添加空行
            </summary>
            <param name="myDataTable">数据表</param>
            <param name="intPageCount">DataGrid分页时每页行数</param>
        </member>
        <member name="M:DotNet.Utilities.Utility.GetSubString(System.String,System.Int32)">
            <summary>   
            截取文本，区分中英文字符，中文算两个长度，英文算一个长度
            </summary>
            <param name="str">待截取的字符串</param>
            <param name="length">需计算长度的字符串</param>
            <returns>string</returns>
        </member>
        <member name="M:DotNet.Utilities.PageHelper.LockPage(System.Web.UI.Page,System.Object[])">
            <summary>
            锁定页面上的一些组件
            </summary>
            <param name="page"></param>
            <param name="obj">不需锁定的控件</param>
        </member>
        <member name="M:DotNet.Utilities.PageHelper.UnLockPage(System.Web.UI.Page,System.Object[])">
            <summary>
            解除锁定页面上的一些组件
            </summary>
            <param name="page"></param>
            <param name="obj">继续保持锁定的控件</param>
        </member>
        <member name="M:DotNet.Utilities.PageHelper.LockControl(System.Web.UI.Page,System.Web.UI.Control)">
            <summary>
            禁用控件
            </summary>
            <param name="page"></param>
            <param name="ctl"></param>
        </member>
        <member name="M:DotNet.Utilities.PageHelper.UnLockControl(System.Web.UI.Page,System.Web.UI.Control)">
            <summary>
            开放控件
            </summary>
            <param name="page"></param>
            <param name="ctl"></param>
        </member>
        <member name="M:DotNet.Utilities.PageHelper.IsContains(System.Object[],System.Web.UI.Control)">
            <summary>
            数组中是否包含当前控件
            </summary>
            <param name="obj"></param>
            <param name="ctl"></param>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageHelper.GetCurrentPage">
            <summary>
            得到当前页对象实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageHelper.GetPageName">
            <summary>
            从System.Web.HttpRequest的Url中获取所调用的页面名称
            </summary>
            <returns>页面名称</returns>
        </member>
        <member name="M:DotNet.Utilities.PageHelper.GetQueryString(System.String)">
            <summary>
            读取QueryString值
            </summary>
            <param name="queryStringName">QueryString名称</param>
            <returns>QueryString值</returns>
        </member>
        <member name="M:DotNet.Utilities.PageHelper.Redirect(System.String)">
            <summary>
            页面跳转
            </summary>
            <param name="url">URL地址</param>
        </member>
        <member name="M:DotNet.Utilities.PageHelper.GetRelativeLevel">
            <summary>
            获取当前请求页面相对于根目录的层级
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNet.Utilities.PageHelper.WriteScript(System.String)">
            <summary>
            写javascript脚本
            </summary>
            <param name="script">脚本内容</param>
        </member>
        <member name="M:DotNet.Utilities.PageHelper.GetClientBrowserVersion">
            <summary>
            返回客户端浏览器版本
            如果是IE类型，返回版本数字
            如果不是IE类型，返回-1
            </summary>
            <returns>一位数字版本号</returns>
        </member>
        <member name="T:DotNet.Utilities.Rand">
            <summary>
            验证码类
            </summary>
        </member>
        <member name="M:DotNet.Utilities.Rand.Number(System.Int32)">
            <summary>
            生成随机数字
            </summary>
            <param name="length">生成长度</param>
        </member>
        <member name="M:DotNet.Utilities.Rand.Number(System.Int32,System.Boolean)">
            <summary>
            生成随机数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="M:DotNet.Utilities.Rand.Str(System.Int32)">
            <summary>
            生成随机字母与数字
            </summary>
            <param name="IntStr">生成长度</param>
        </member>
        <member name="M:DotNet.Utilities.Rand.Str(System.Int32,System.Boolean)">
            <summary>
            生成随机字母与数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="M:DotNet.Utilities.Rand.Str_char(System.Int32)">
            <summary>
            生成随机纯字母随机数
            </summary>
            <param name="IntStr">生成长度</param>
        </member>
        <member name="M:DotNet.Utilities.Rand.Str_char(System.Int32,System.Boolean)">
            <summary>
            生成随机纯字母随机数
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="T:DotNet.Utilities.YZMHelper">
            <summary>
            验证图片类
            </summary>
        </member>
        <member name="P:DotNet.Utilities.YZMHelper.Text">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:DotNet.Utilities.YZMHelper.Image">
            <summary>
            验证码图片
            </summary>
        </member>
        <member name="M:DotNet.Utilities.YZMHelper.Next(System.Int32)">
            <summary>
            获得下一个随机数
            </summary>
            <param name="max">最大值</param>
        </member>
        <member name="M:DotNet.Utilities.YZMHelper.Next(System.Int32,System.Int32)">
            <summary>
            获得下一个随机数
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:DotNet.Utilities.YZMHelper.CreateImage">
            <summary>
            绘制验证码
            </summary>
        </member>
        <member name="M:DotNet.Utilities.YZMHelper.GetRandomColor">
            <summary>
            字体随机颜色
            </summary>
        </member>
        <member name="M:DotNet.Utilities.YZMHelper.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="nMultValue">波形的幅度倍数，越大扭曲的程度越高,一般为3</param>
            <param name="dPhase">波形的起始相位,取值区间[0-2*PI)</param>
        </member>
        <member name="T:DotNet.Utilities_Xofly.MailAttachments">
            <summary>
            添加附件
            </summary>
        </member>
        <member name="M:DotNet.Utilities_Xofly.MailAttachments.Add(System.String[])">
            <summary>
            添加邮件附件
            </summary>
            <param name="FilePath">附件的绝对路径</param>
        </member>
        <member name="M:DotNet.Utilities_Xofly.MailAttachments.Add(System.String)">
            <summary>
            添加一个附件,当指定的附件不存在时，忽略该附件，不产生异常。
            </summary>
            <param name="filePath">附件的绝对路径</param>
        </member>
        <member name="M:DotNet.Utilities_Xofly.MailAttachments.Clear">
            <summary>
            清除所有附件
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.MailAttachments.Count">
            <summary>
            获取附件个数
            </summary>
        </member>
        <member name="T:DotNet.Utilities_Xofly.MailMessage">
            <summary>
            邮件信息
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.MailMessage.Charset">
            <summary>
            设定语言代码，默认设定为GB2312，如不需要可设置为""
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.MailMessage.MaxRecipientNum">
            <summary>
            最大收件人
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.MailMessage.From">
            <summary>
            发件人地址
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.MailMessage.FromName">
            <summary>
            发件人姓名
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.MailMessage.Body">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.MailMessage.Subject">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.MailMessage.Attachments">
            <summary>
            附件
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.MailMessage.Priority">
            <summary>
            优先权
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.MailMessage.Recipients">
            <summary>
            收件人
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.MailMessage.BodyFormat">
            <summary>
            邮件格式
            </summary>
        </member>
        <member name="M:DotNet.Utilities_Xofly.MailMessage.AddRecipients(System.String)">
            <summary>
            增加一个收件人地址
            </summary>
            <param name="recipient">收件人的Email地址</param>
        </member>
        <member name="M:DotNet.Utilities_Xofly.MailMessage.AddRecipients(System.String[])">
            <summary>
            增加多个收件人地址
            </summary>
            <param name="recipient">收件人的Email地址集合</param>
        </member>
        <member name="T:DotNet.Utilities_Xofly.SmtpServerHelper">
            <summary>
            邮件操作
            </summary>
        </member>
        <member name="F:DotNet.Utilities_Xofly.SmtpServerHelper.CRLF">
            <summary>
            回车换行
            </summary>
        </member>
        <member name="F:DotNet.Utilities_Xofly.SmtpServerHelper.errmsg">
            <summary>
            错误消息反馈
            </summary>
        </member>
        <member name="F:DotNet.Utilities_Xofly.SmtpServerHelper.tcpClient">
            <summary>
            TcpClient对象，用于连接服务器
            </summary> 
        </member>
        <member name="F:DotNet.Utilities_Xofly.SmtpServerHelper.networkStream">
            <summary>
            NetworkStream对象
            </summary> 
        </member>
        <member name="F:DotNet.Utilities_Xofly.SmtpServerHelper.logs">
            <summary>
            服务器交互记录
            </summary>
        </member>
        <member name="F:DotNet.Utilities_Xofly.SmtpServerHelper.ErrCodeHT">
            <summary>
            SMTP错误代码哈希表
            </summary>
        </member>
        <member name="F:DotNet.Utilities_Xofly.SmtpServerHelper.RightCodeHT">
            <summary>
            SMTP正确代码哈希表
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.SmtpServerHelper.ErrMsg">
            <summary>
            错误消息反馈
            </summary>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.Base64Encode(System.String)">
            <summary>
            将字符串编码为Base64字符串
            </summary>
            <param name="str">要编码的字符串</param>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.Base64Decode(System.String)">
            <summary>
            将Base64字符串解码为普通字符串
            </summary>
            <param name="str">要解码的字符串</param>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.GetStream(System.String)">
            <summary>
            得到上传附件的文件流
            </summary>
            <param name="FilePath">附件的绝对路径</param>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.SMTPCodeAdd">
            <summary>
            SMTP回应代码哈希表
            </summary>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.SendCommand(System.String)">
            <summary>
            发送SMTP命令
            </summary> 
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.RecvResponse">
            <summary>
            接收SMTP服务器回应
            </summary>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.Dialog(System.String,System.String)">
            <summary>
            与服务器交互，发送一条命令并接收回应。
            </summary>
            <param name="str">一个要发送的命令</param>
            <param name="errstr">如果错误，要反馈的信息</param>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.Dialog(System.String[],System.String)">
            <summary>
            与服务器交互，发送一组命令并接收回应。
            </summary>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.Connect(System.String,System.Int32)">
            <summary>
            连接服务器
            </summary>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.GetPriorityString(DotNet.Utilities_Xofly.MailPriority)">
            <summary>
            获取优先级
            </summary>
            <param name="mailPriority">优先级</param>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.SendEmail(System.String,System.Int32,System.Boolean,System.String,System.String,DotNet.Utilities_Xofly.MailMessage)">
            <summary>
            发送电子邮件
            </summary>
            <param name="smtpServer">发信SMTP服务器</param>
            <param name="port">端口，默认为25</param>
            <param name="username">发信人邮箱地址</param>
            <param name="password">发信人邮箱密码</param>
            <param name="mailMessage">邮件内容</param>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.SendEmail(System.String,System.Int32,DotNet.Utilities_Xofly.MailMessage)">
            <summary>
            发送电子邮件,SMTP服务器不需要身份验证
            </summary>
            <param name="smtpServer">发信SMTP服务器</param>
            <param name="port">端口，默认为25</param>
            <param name="mailMessage">邮件内容</param>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpServerHelper.SendEmail(System.String,System.Int32,System.String,System.String,DotNet.Utilities_Xofly.MailMessage)">
            <summary>
            发送电子邮件,SMTP服务器需要身份验证
            </summary>
            <param name="smtpServer">发信SMTP服务器</param>
            <param name="port">端口，默认为25</param>
            <param name="username">发信人邮箱地址</param>
            <param name="password">发信人邮箱密码</param>
            <param name="mailMessage">邮件内容</param>
        </member>
        <member name="T:DotNet.Utilities_Xofly.SmtpClient">
            <summary>
            发送邮件
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.SmtpClient.ErrMsg">
            <summary>
            错误消息反馈
            </summary>
        </member>
        <member name="P:DotNet.Utilities_Xofly.SmtpClient.SmtpServer">
            <summary>
            邮件服务器
            </summary>
        </member>
        <member name="T:DotNet.Utilities_Xofly.SmtpMail">
            <summary>
            操作服务器上邮件
            </summary>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpMail.SendDataToServer(System.String)">
            <summary>
            向服务器发送信息
            </summary>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpMail.ReadDataFromServer">
            <summary>
            从网络流中读取服务器回送的信息
            </summary>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpMail.ReceiveMail(System.String,System.String)">
            <summary>
            获取邮件信息
            </summary>
            <param name="uid">邮箱账号</param>
            <param name="pwd">邮箱密码</param>
            <returns>邮件信息</returns>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpMail.ReadEmail(System.String)">
            <summary>
            读取邮件内容
            </summary>
            <param name="mailMessage">第几封</param>
            <returns>内容</returns>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpMail.DeleteEmail(System.String)">
            <summary>
            删除邮件
            </summary>
            <param name="str">第几封</param>
            <returns>操作信息</returns>
        </member>
        <member name="M:DotNet.Utilities_Xofly.SmtpMail.CloseConnection">
            <summary>
            关闭服务器连接
            </summary>
        </member>
        <member name="T:Maticsoft.DBUtility.DbHelperMySQL">
            <summary>
            数据访问抽象基础类
            </summary>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.GetMaxID(System.String,System.String)">
            <summary>
            得到最大值
            </summary>
            <param name="FieldName"></param>
            <param name="TableName"></param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.Exists(System.String)">
            <summary>
            是否存在
            </summary>
            <param name="strSql"></param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.Exists(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            是否存在（基于MySqlParameter）
            </summary>
            <param name="strSql"></param>
            <param name="cmdParms"></param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteSqlTran(System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo},System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo})">
            <summary>
            执行MySql和Oracle滴混合事务
            </summary>
            <param name="list">SQL命令行列表</param>
            <param name="oracleCmdSqlList">Oracle命令行列表</param>
            <returns>执行结果 0-由于SQL造成事务失败 -1 由于Oracle造成事务失败 1-整体事务执行成功</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteSqlTran(System.Collections.Generic.List{System.String})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteSqlGet(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回MySqlDataReader ( 注意：调用该方法后，一定要对MySqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>MySqlDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteSql(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的MySqlParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteSqlTran(System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的MySqlParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteSqlTranWithIndentity(System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的MySqlParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteSqlTranWithIndentity(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的MySqlParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.GetSingle(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.ExecuteReader(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            执行查询语句，返回MySqlDataReader ( 注意：调用该方法后，一定要对MySqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>MySqlDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperMySQL.Query(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="T:Maticsoft.DBUtility.DbHelperOleDb">
            <summary>
            数据访问基础类(基于OleDb) 
            可以用户可以修改满足自己项目的需要。
            </summary>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOleDb.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOleDb.ExecuteSqlTran(System.Collections.ArrayList)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOleDb.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOleDb.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOleDb.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOleDb.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回OleDbDataReader
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>OleDbDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOleDb.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOleDb.ExecuteSql(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOleDb.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的OleDbParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOleDb.GetSingle(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOleDb.ExecuteReader(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            执行查询语句，返回OleDbDataReader
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>OleDbDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOleDb.Query(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="T:Maticsoft.DBUtility.DbHelperOra">
            <summary>
            数据访问基础类(基于Oracle)
            可以用户可以修改满足自己项目的需要。
            </summary>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.ExecuteSqlTran(System.Collections.ArrayList)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回OracleDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>OracleDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.ExecuteSql(System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的OracleParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.GetSingle(System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.ExecuteReader(System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            执行查询语句，返回OracleDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>OracleDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.Query(System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.RunProcedure(System.String,System.Data.IDataParameter[])">
            <summary>
            执行存储过程 返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>OracleDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.RunProcedure(System.String,System.Data.IDataParameter[],System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="tableName">DataSet结果中的表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.BuildQueryCommand(System.Data.OracleClient.OracleConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            构建 OracleCommand 对象(用来返回一个结果集，而不是一个整数值)
            </summary>
            <param name="connection">数据库连接</param>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>OracleCommand</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.RunProcedure(System.String,System.Data.IDataParameter[],System.Int32@)">
            <summary>
            执行存储过程，返回影响的行数		
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="rowsAffected">影响的行数</param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperOra.BuildIntCommand(System.Data.OracleClient.OracleConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            创建 OracleCommand 对象实例(用来返回一个整数值)	
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>OracleCommand 对象实例</returns>
        </member>
        <member name="T:Maticsoft.DBUtility.DbHelperSQL">
            <summary>
            数据访问抽象基础类
            </summary>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ColumnExists(System.String,System.String)">
            <summary>
            判断是否存在某表的某个字段
            </summary>
            <param name="tableName">表名称</param>
            <param name="columnName">列名称</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.TabExists(System.String)">
            <summary>
            表是否存在
            </summary>
            <param name="TableName"></param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteSqlTran(System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo},System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo})">
            <summary>
            执行Sql和Oracle滴混合事务
            </summary>
            <param name="list">SQL命令行列表</param>
            <param name="oracleCmdSqlList">Oracle命令行列表</param>
            <returns>执行结果 0-由于SQL造成事务失败 -1 由于Oracle造成事务失败 1-整体事务执行成功</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteSqlTran(System.Collections.Generic.List{System.String})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteSqlGet(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteSql(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteSqlTran(System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteSqlTranWithIndentity(System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteSqlTranWithIndentity(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.GetSingle(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询语句，返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.Query(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.RunProcedure(System.String,System.Data.IDataParameter[])">
            <summary>
            执行存储过程，返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.RunProcedure(System.String,System.Data.IDataParameter[],System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="tableName">DataSet结果中的表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.BuildQueryCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            构建 SqlCommand 对象(用来返回一个结果集，而不是一个整数值)
            </summary>
            <param name="connection">数据库连接</param>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlCommand</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.RunProcedure(System.String,System.Data.IDataParameter[],System.Int32@)">
            <summary>
            执行存储过程，返回影响的行数		
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="rowsAffected">影响的行数</param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQL.BuildIntCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            创建 SqlCommand 对象实例(用来返回一个整数值)	
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlCommand 对象实例</returns>
        </member>
        <member name="T:Maticsoft.DBUtility.DbHelperSQLite">
            <summary>
            数据访问基础类(基于SQLite)
            可以用户可以修改满足自己项目的需要。
            </summary>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLite.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLite.ExecuteSqlTran(System.Collections.ArrayList)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLite.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLite.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLite.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLite.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回SQLiteDataReader
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SQLiteDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLite.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLite.ExecuteSql(System.String,System.Data.SQLite.SQLiteParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLite.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SQLiteParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLite.GetSingle(System.String,System.Data.SQLite.SQLiteParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLite.ExecuteReader(System.String,System.Data.SQLite.SQLiteParameter[])">
            <summary>
            执行查询语句，返回SQLiteDataReader
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SQLiteDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLite.Query(System.String,System.Data.SQLite.SQLiteParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="T:Maticsoft.DBUtility.DbHelperSQLP">
            <summary>
            数据访问类，可用于访问不同数据库
            </summary>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ColumnExists(System.String,System.String)">
            <summary>
            判断是否存在某表的某个字段
            </summary>
            <param name="tableName">表名称</param>
            <param name="columnName">列名称</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.TabExists(System.String)">
            <summary>
            表是否存在
            </summary>
            <param name="TableName"></param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteSqlTran(System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo},System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo})">
            <summary>
            执行Sql和Oracle滴混合事务
            </summary>
            <param name="list">SQL命令行列表</param>
            <param name="oracleCmdSqlList">Oracle命令行列表</param>
            <returns>执行结果 0-由于SQL造成事务失败 -1 由于Oracle造成事务失败 1-整体事务执行成功</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteSqlTran(System.Collections.Generic.List{System.String})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteSqlGet(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteSql(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteSqlTran(System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteSqlTranWithIndentity(System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteSqlTranWithIndentity(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.GetSingle(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询语句，返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.Query(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.RunProcedure(System.String,System.Data.IDataParameter[])">
            <summary>
            执行存储过程，返回SqlDataReader  ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.RunProcedure(System.String,System.Data.IDataParameter[],System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="tableName">DataSet结果中的表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.BuildQueryCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            构建 SqlCommand 对象(用来返回一个结果集，而不是一个整数值)
            </summary>
            <param name="connection">数据库连接</param>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlCommand</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.RunProcedure(System.String,System.Data.IDataParameter[],System.Int32@)">
            <summary>
            执行存储过程，返回影响的行数		
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="rowsAffected">影响的行数</param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.DbHelperSQLP.BuildIntCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])">
            <summary>
            创建 SqlCommand 对象实例(用来返回一个整数值)	
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <returns>SqlCommand 对象实例</returns>
        </member>
        <member name="T:Maticsoft.DBUtility.OracleHelper">
            <summary>
            A helper class used to execute queries against an Oracle database
            </summary>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Execute a database query which does not include a select
            </summary>
            <param name="connString">Connection string to database</param>
            <param name="cmdType">Command type either stored procedure or SQL</param>
            <param name="cmdText">Acutall SQL Command</param>
            <param name="commandParameters">Parameters to bind to the command</param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.Query(System.String,System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.GetSingle(System.String,System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.ExecuteNonQuery(System.Data.OracleClient.OracleTransaction,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Execute an OracleCommand (that returns no resultset) against an existing database transaction 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "PublishOrders", new OracleParameter(":prodid", 24));
            </remarks>
            <param name="trans">an existing database transaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or PL/SQL command</param>
            <param name="commandParameters">an array of OracleParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.ExecuteNonQuery(System.Data.OracleClient.OracleConnection,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Execute an OracleCommand (that returns no resultset) against an existing database connection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new OracleParameter(":prodid", 24));
            </remarks>
            <param name="conn">an existing database connection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or PL/SQL command</param>
            <param name="commandParameters">an array of OracleParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.ExecuteNonQuery(System.String,System.String)">
            <summary>
            Execute an OracleCommand (that returns no resultset) against an existing database connection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new OracleParameter(":prodid", 24));
            </remarks>
            <param name="conn">an existing database connection</param>
            <param name="commandText">the stored procedure name or PL/SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <param name="commandText">the stored procedure name or PL/SQL command</param>
            <param name="commandParameters">an array of OracleParamters used to execute the command</param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Execute an OracleCommand that returns the first column of the first record against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             Object obj = ExecuteScalar(connString, CommandType.StoredProcedure, "PublishOrders", new OracleParameter(":prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or PL/SQL command</param>
            <param name="commandParameters">an array of OracleParamters used to execute the command</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.ExecuteScalar(System.Data.OracleClient.OracleTransaction,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Execute	a OracleCommand (that returns a 1x1 resultset)	against	the	specified SqlTransaction
            using the provided parameters.
            </summary>
            <param name="transaction">A	valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name	or PL/SQL command</param>
            <param name="commandParameters">An array of	OracleParamters used to execute the command</param>
            <returns>An	object containing the value	in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.ExecuteScalar(System.Data.OracleClient.OracleConnection,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Execute an OracleCommand that returns the first column of the first record against an existing database connection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             Object obj = ExecuteScalar(conn, CommandType.StoredProcedure, "PublishOrders", new OracleParameter(":prodid", 24));
            </remarks>
            <param name="conn">an existing database connection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or PL/SQL command</param>
            <param name="commandParameters">an array of OracleParamters used to execute the command</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.CacheParameters(System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Add a set of parameters to the cached
            </summary>
            <param name="cacheKey">Key value to look up the parameters</param>
            <param name="commandParameters">Actual parameters to cached</param>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.GetCachedParameters(System.String)">
            <summary>
            Fetch parameters from the cache
            </summary>
            <param name="cacheKey">Key to look up the parameters</param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.PrepareCommand(System.Data.OracleClient.OracleCommand,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])">
            <summary>
            Internal function to prepare a command for execution by the database
            </summary>
            <param name="cmd">Existing command object</param>
            <param name="conn">Database connection object</param>
            <param name="trans">Optional transaction object</param>
            <param name="cmdType">Command type, e.g. stored procedure</param>
            <param name="cmdText">Command test</param>
            <param name="commandParameters">Parameters for the command</param>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.OraBit(System.Boolean)">
            <summary>
            Converter to use boolean data type with Oracle
            </summary>
            <param name="value">Value to convert</param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.OraBool(System.String)">
            <summary>
            Converter to use boolean data type with Oracle
            </summary>
            <param name="value">Value to convert</param>
            <returns></returns>
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.ExecuteSqlTran(System.String,System.Collections.Generic.List{Maticsoft.DBUtility.CommandInfo})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:Maticsoft.DBUtility.OracleHelper.ExecuteSqlTran(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="T:Maticsoft.DBUtility.SqlHelper">
            <summary>
            The SqlHelper class is intended to encapsulate high performance, 
            scalable best practices for common uses of SqlClient.
            </summary>
        </member>
        <member name="M:Maticsoft.DBUtility.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against an existing database connection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="conn">an existing database connection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) using an existing SQL Transaction 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="trans">an existing sql transaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand that returns a resultset against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader r = ExecuteReader(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>A SqlDataReader containing the results</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand that returns the first column of the first record against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             Object obj = ExecuteScalar(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand that returns the first column of the first record against an existing database connection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             Object obj = ExecuteScalar(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="conn">an existing database connection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.SqlHelper.CacheParameters(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            add parameter array to the cache
            </summary>
            <param name="cacheKey">Key to the parameter cache</param>
            <param name="cmdParms">an array of SqlParamters to be cached</param>
        </member>
        <member name="M:Maticsoft.DBUtility.SqlHelper.GetCachedParameters(System.String)">
            <summary>
            Retrieve cached parameters
            </summary>
            <param name="cacheKey">key used to lookup parameters</param>
            <returns>Cached SqlParamters array</returns>
        </member>
        <member name="M:Maticsoft.DBUtility.SqlHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Prepare a command for execution
            </summary>
            <param name="cmd">SqlCommand object</param>
            <param name="conn">SqlConnection object</param>
            <param name="trans">SqlTransaction object</param>
            <param name="cmdType">Cmd type e.g. stored procedure or text</param>
            <param name="cmdText">Command text, e.g. Select * from Products</param>
            <param name="cmdParms">SqlParameters to use in the command</param>
        </member>
    </members>
</doc>
